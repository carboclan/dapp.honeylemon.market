{
  "contractName": "MarketContractRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressWhiteList",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "factoryAddressWhiteList",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhiteListed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "AddressAddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "AddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "FactoryAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "FactoryAddressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "isAddressWhiteListed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAddressWhiteList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddress",
          "type": "address"
        },
        {
          "name": "whiteListIndex",
          "type": "uint256"
        }
      ],
      "name": "removeContractFromWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "addAddressToWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "addFactoryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "removeFactoryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"addFactoryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"factoryAddressWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"addAddressToWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"removeFactoryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isAddressWhiteListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddressWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"whiteListIndex\",\"type\":\"uint256\"}],\"name\":\"removeContractFromWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"AddressAddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"FactoryAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"FactoryAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Phil Elsasser <phil@marketprotocol.io>\",\"methods\":{\"addAddressToWhiteList(address)\":{\"details\":\"allows for the owner or factory to add a white listed contract, eventually ownership could transition to a decentralized smart contract of community members to vote\",\"params\":{\"contractAddress\":\"contract to removed from white list\"}},\"addFactoryAddress(address)\":{\"details\":\"allows for the owner to add a new address of a factory responsible for creating new market contracts\",\"params\":{\"factoryAddress\":\"address of factory to be allowed to add contracts to whitelist\"}},\"isAddressWhiteListed(address)\":{\"return\":\"false if the address is not white listed.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"removeContractFromWhiteList(address,uint256)\":{\"details\":\"allows for the owner to remove a white listed contract, eventually ownership could transition to a decentralized smart contract of community members to vote\",\"params\":{\"contractAddress\":\"contract to removed from white list\",\"whiteListIndex\":\"of the contractAddress in the addressWhiteList to be removed.\"}},\"removeFactoryAddress(address)\":{\"details\":\"allows for the owner to remove an address of a factory\",\"params\":{\"factoryAddress\":\"address of factory to be removed\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"MarketContractRegistry\"},\"userdoc\":{\"methods\":{\"getAddressWhiteList()\":{\"notice\":\"all currently whitelisted addresses returns array of addresses\"},\"isAddressWhiteListed(address)\":{\"notice\":\"determines if an address is a valid MarketContract\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistry.sol\":\"MarketContractRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistry.sol\":{\"keccak256\":\"0xbcaced4d254a920ec36c7a87bde30d2385da322e9032afe43c4be83d36ac1d66\",\"urls\":[\"bzzr://0dc03fe5da8ad470275a43c5edb97d65ab8ce5bc2f877ed40b900c2d35ded6c0\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistryInterface.sol\":{\"keccak256\":\"0xb0259d3f0dbf7f52df2274f66c01563f7ae3d3bdacc018fede764b4a78bc1dd9\",\"urls\":[\"bzzr://db91f063cb13da449814f8d7d990039b51cdef45110e735d7bebf116cf963735\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611186806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100a9578063ad23de6311610083578063ad23de6314610359578063c6f5d91f146103b5578063d8fbbf3114610414578063f2fde38b14610462576100ec565b80638f32d59b146102af5780639244f496146102d1578063a051d9c314610315576100ec565b806318c0c695146100f15780631e7f9f3614610135578063497acf08146101a35780636f9170f6146101ff578063715018a61461025b5780638da5cb5b14610265575b600080fd5b6101336004803603602081101561010757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a6565b005b6101616004803603602081101561014b57600080fd5b8101908080359060200190929190505050610619565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610657565b604051808215151515815260200191505060405180910390f35b6102416004803603602081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610677565b604051808215151515815260200191505060405180910390f35b610263610697565b005b61026d610769565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b7610792565b604051808215151515815260200191505060405180910390f35b610313600480360360208110156102e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e9565b005b6103576004803603602081101561032b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a61565b005b61039b6004803603602081101561036f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb6565b604051808215151515815260200191505060405180910390f35b6103bd610c0c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104005780820151818401526020810190506103e5565b505050509050019250505060405180910390f35b6104606004803603604081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c9a565b005b6104a46004803603602081101561047857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7e565b005b6104ae610792565b15156104b957600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6164647265737320616c7265616479206164646564000000000000000000000081525060200191505060405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f960c6a67a1f0f46ddffd138f2b7f44cbc573d0e0a073363b287a257b121dc48a60405160405180910390a250565b60028181548110151561062857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b61069f610792565b15156106aa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6107f1610792565b806108455750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110e96025913960400191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f41646472657373206d757374206e6f742062652077686974656c69737465640081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508073ffffffffffffffffffffffffffffffffffffffff167f534d18c8ff24ba5980906d732f3075704749427353734fbbf05d50485643b12460405160405180910390a250565b610a69610792565b1515610a7457600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610b18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061110e6028913960400191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f5d6ac55db628f137c53a554c300a684dc6b3db9d8f24e9611ea5e84c282d177d60405160405180910390a250565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60606002805480602002602001604051908101604052809291908181526020018280548015610c9057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c46575b5050505050905090565b610ca2610792565b1515610cad57600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610d51576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111366025913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600282815481101515610d7757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f696e64657820646f6573206e6f74206d6174636820616464726573730000000081525060200191505060405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600160028054905003815481101515610e9c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481101515610ed657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600281818054905003915081610f369190611097565b508173ffffffffffffffffffffffffffffffffffffffff167f535611fb62fa2a833988f283b779e417e996813e44046f521d76c17b5943b08c60405160405180910390a25050565b610f86610792565b1515610f9157600080fd5b610f9a81610f9d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fd957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156110be578183600052602060002091820191016110bd91906110c3565b5b505050565b6110e591905b808211156110e15760008160009055506001016110c9565b5090565b9056fe43616e206f6e6c7920626520616464656420627920666163746f7279206f72206f776e6572666163746f72792061646472657373206973206e6f7420696e20746865207768697465206c69737463616e206f6e6c792072656d6f76652077686974656c697374656420616464726573736573a165627a7a723058201054ef3f5e6b8f6a0febdf74dab5193e1a4d668b4c5cdc99e70280fb4786d1f70029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100a9578063ad23de6311610083578063ad23de6314610359578063c6f5d91f146103b5578063d8fbbf3114610414578063f2fde38b14610462576100ec565b80638f32d59b146102af5780639244f496146102d1578063a051d9c314610315576100ec565b806318c0c695146100f15780631e7f9f3614610135578063497acf08146101a35780636f9170f6146101ff578063715018a61461025b5780638da5cb5b14610265575b600080fd5b6101336004803603602081101561010757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a6565b005b6101616004803603602081101561014b57600080fd5b8101908080359060200190929190505050610619565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610657565b604051808215151515815260200191505060405180910390f35b6102416004803603602081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610677565b604051808215151515815260200191505060405180910390f35b610263610697565b005b61026d610769565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b7610792565b604051808215151515815260200191505060405180910390f35b610313600480360360208110156102e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e9565b005b6103576004803603602081101561032b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a61565b005b61039b6004803603602081101561036f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb6565b604051808215151515815260200191505060405180910390f35b6103bd610c0c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104005780820151818401526020810190506103e5565b505050509050019250505060405180910390f35b6104606004803603604081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c9a565b005b6104a46004803603602081101561047857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7e565b005b6104ae610792565b15156104b957600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6164647265737320616c7265616479206164646564000000000000000000000081525060200191505060405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f960c6a67a1f0f46ddffd138f2b7f44cbc573d0e0a073363b287a257b121dc48a60405160405180910390a250565b60028181548110151561062857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b61069f610792565b15156106aa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6107f1610792565b806108455750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561089c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110e96025913960400191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f41646472657373206d757374206e6f742062652077686974656c69737465640081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060028190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508073ffffffffffffffffffffffffffffffffffffffff167f534d18c8ff24ba5980906d732f3075704749427353734fbbf05d50485643b12460405160405180910390a250565b610a69610792565b1515610a7457600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610b18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061110e6028913960400191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f5d6ac55db628f137c53a554c300a684dc6b3db9d8f24e9611ea5e84c282d177d60405160405180910390a250565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60606002805480602002602001604051908101604052809291908181526020018280548015610c9057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c46575b5050505050905090565b610ca2610792565b1515610cad57600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610d51576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111366025913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600282815481101515610d7757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f696e64657820646f6573206e6f74206d6174636820616464726573730000000081525060200191505060405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600160028054905003815481101515610e9c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481101515610ed657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600281818054905003915081610f369190611097565b508173ffffffffffffffffffffffffffffffffffffffff167f535611fb62fa2a833988f283b779e417e996813e44046f521d76c17b5943b08c60405160405180910390a25050565b610f86610792565b1515610f9157600080fd5b610f9a81610f9d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fd957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156110be578183600052602060002091820191016110bd91906110c3565b5b505050565b6110e591905b808211156110e15760008160009055506001016110c9565b5090565b9056fe43616e206f6e6c7920626520616464656420627920666163746f7279206f72206f776e6572666163746f72792061646472657373206973206e6f7420696e20746865207768697465206c69737463616e206f6e6c792072656d6f76652077686974656c697374656420616464726573736573a165627a7a723058201054ef3f5e6b8f6a0febdf74dab5193e1a4d668b4c5cdc99e70280fb4786d1f70029",
  "sourceMap": "831:3818:8:-;;;524:10:20;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;831:3818:8;;;;;;",
  "deployedSourceMap": "831:3818:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:3818:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3918:267;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3918:267:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;992:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;992:33:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1074:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1074:55:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;941:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;941:45:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1423:137:20;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3256:449:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3256:449:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;4322:325;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4322:325:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1617:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1617:138:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1848:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1848:112:8;;;;;;;;;;;;;;;;;2303:694;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2303:694:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1731:107:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;3918:267:8;863:9:20;:7;:9::i;:::-;855:18;;;;;;;;4007:23:8;:39;4031:14;4007:39;;;;;;;;;;;;;;;;;;;;;;;;;4006:40;3998:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4124:4;4082:23;:39;4106:14;4082:39;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4163:14;4143:35;;;;;;;;;;;;3918:267;:::o;992:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1074:55::-;;;;;;;;;;;;;;;;;;;;;;:::o;941:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1423:137:20:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;3256:449:8:-;3352:9;:7;:9::i;:::-;:48;;;;3365:23;:35;3389:10;3365:35;;;;;;;;;;;;;;;;;;;;;;;;;3352:48;3331:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3482:13;:30;3496:15;3482:30;;;;;;;;;;;;;;;;;;;;;;;;;3481:31;3473:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3591:4;3558:13;:30;3572:15;3558:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3605:16;3627:15;3605:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3605:38:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3682:15;3658:40;;;;;;;;;;;;3256:449;:::o;4322:325::-;863:9:20;:7;:9::i;:::-;855:18;;;;;;;;4426:23:8;:39;4450:14;4426:39;;;;;;;;;;;;;;;;;;;;;;;;;4405:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4583:5;4541:23;:39;4565:14;4541:39;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;4625:14;4603:37;;;;;;;;;;;;4322:325;:::o;1617:138::-;1695:4;1718:13;:30;1732:15;1718:30;;;;;;;;;;;;;;;;;;;;;;;;;1711:37;;1617:138;;;:::o;1848:112::-;1902:16;1937;1930:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1848:112;:::o;2303:694::-;863:9:20;:7;:9::i;:::-;855:18;;;;;;;;2443:13:8;:30;2457:15;2443:30;;;;;;;;;;;;;;;;;;;;;;;;;2435:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:15;2546:51;;:16;2563:14;2546:32;;;;;;;;;;;;;;;;;;;;;;;;;;;:51;;;2525:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2694:5;2661:13;:30;2675:15;2661:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2848:16;2891:1;2865:16;:23;;;;:27;2848:45;;;;;;;;;;;;;;;;;;;;;;;;;;;2813:16;2830:14;2813:32;;;;;;;;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;2930:1;2903:16;:28;;;;;;;;;;;;;;:::i;:::-;;2974:15;2946:44;;;;;;;;;;;;2303:694;;:::o;1731:107:20:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1982:183::-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;831:3818:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2019 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.2;\n\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\nimport './MarketContractRegistryInterface.sol';\n\n\n/// @title MarketContractRegistry\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractRegistry is Ownable, MarketContractRegistryInterface {\n    // whitelist accounting\n    mapping(address => bool) public isWhiteListed;\n    address[] public addressWhiteList; // record of currently deployed addresses;\n    mapping(address => bool) public factoryAddressWhiteList; // record of authorized factories\n\n    // events\n    event AddressAddedToWhitelist(address indexed contractAddress);\n    event AddressRemovedFromWhitelist(address indexed contractAddress);\n    event FactoryAddressAdded(address indexed factoryAddress);\n    event FactoryAddressRemoved(address indexed factoryAddress);\n\n    /*\n    // External Methods\n    */\n\n    /// @notice determines if an address is a valid MarketContract\n    /// @return false if the address is not white listed.\n    function isAddressWhiteListed(address contractAddress) external view returns (bool) {\n        return isWhiteListed[contractAddress];\n    }\n\n    /// @notice all currently whitelisted addresses\n    /// returns array of addresses\n    function getAddressWhiteList() external view returns (address[] memory) {\n        return addressWhiteList;\n    }\n\n    /// @dev allows for the owner to remove a white listed contract, eventually ownership could transition to\n    /// a decentralized smart contract of community members to vote\n    /// @param contractAddress contract to removed from white list\n    /// @param whiteListIndex of the contractAddress in the addressWhiteList to be removed.\n    function removeContractFromWhiteList(address contractAddress, uint whiteListIndex)\n        external\n        onlyOwner\n    {\n        require(isWhiteListed[contractAddress], 'can only remove whitelisted addresses');\n        require(\n            addressWhiteList[whiteListIndex] == contractAddress,\n            'index does not match address'\n        );\n        isWhiteListed[contractAddress] = false;\n\n        // push the last item in array to replace the address we are removing and then trim the array.\n        addressWhiteList[whiteListIndex] = addressWhiteList[addressWhiteList.length - 1];\n        addressWhiteList.length -= 1;\n        emit AddressRemovedFromWhitelist(contractAddress);\n    }\n\n    /// @dev allows for the owner or factory to add a white listed contract, eventually ownership could transition to\n    /// a decentralized smart contract of community members to vote\n    /// @param contractAddress contract to removed from white list\n    function addAddressToWhiteList(address contractAddress) external {\n        require(\n            isOwner() || factoryAddressWhiteList[msg.sender],\n            'Can only be added by factory or owner'\n        );\n        require(!isWhiteListed[contractAddress], 'Address must not be whitelisted');\n        isWhiteListed[contractAddress] = true;\n        addressWhiteList.push(contractAddress);\n        emit AddressAddedToWhitelist(contractAddress);\n    }\n\n    /// @dev allows for the owner to add a new address of a factory responsible for creating new market contracts\n    /// @param factoryAddress address of factory to be allowed to add contracts to whitelist\n    function addFactoryAddress(address factoryAddress) external onlyOwner {\n        require(!factoryAddressWhiteList[factoryAddress], 'address already added');\n        factoryAddressWhiteList[factoryAddress] = true;\n        emit FactoryAddressAdded(factoryAddress);\n    }\n\n    /// @dev allows for the owner to remove an address of a factory\n    /// @param factoryAddress address of factory to be removed\n    function removeFactoryAddress(address factoryAddress) external onlyOwner {\n        require(\n            factoryAddressWhiteList[factoryAddress],\n            'factory address is not in the white list'\n        );\n        factoryAddressWhiteList[factoryAddress] = false;\n        emit FactoryAddressRemoved(factoryAddress);\n    }\n}\n",
  "sourcePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistry.sol",
  "ast": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistry.sol",
    "exportedSymbols": {
      "MarketContractRegistry": [
        2368
      ]
    },
    "id": 2369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2168,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2169,
        "nodeType": "ImportDirective",
        "scope": 2369,
        "sourceUnit": 3314,
        "src": "632:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistryInterface.sol",
        "file": "./MarketContractRegistryInterface.sol",
        "id": 2170,
        "nodeType": "ImportDirective",
        "scope": 2369,
        "sourceUnit": 2384,
        "src": "696:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2171,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3313,
              "src": "866:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3313",
                "typeString": "contract Ownable"
              }
            },
            "id": 2172,
            "nodeType": "InheritanceSpecifier",
            "src": "866:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2173,
              "name": "MarketContractRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2383,
              "src": "875:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$2383",
                "typeString": "contract MarketContractRegistryInterface"
              }
            },
            "id": 2174,
            "nodeType": "InheritanceSpecifier",
            "src": "875:31:8"
          }
        ],
        "contractDependencies": [
          2383,
          3313
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractRegistry\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2368,
        "linearizedBaseContracts": [
          2368,
          2383,
          3313
        ],
        "name": "MarketContractRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2178,
            "name": "isWhiteListed",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "941:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2177,
              "keyType": {
                "id": 2175,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "949:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "941:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2176,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "960:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2181,
            "name": "addressWhiteList",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "992:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2179,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "992:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2180,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "992:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2185,
            "name": "factoryAddressWhiteList",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "1074:55:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2184,
              "keyType": {
                "id": 2182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1082:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1074:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2183,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1093:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2189,
            "name": "AddressAddedToWhitelist",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2187,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "1214:31:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1213:33:8"
            },
            "src": "1184:63:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2193,
            "name": "AddressRemovedFromWhitelist",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "1286:31:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1285:33:8"
            },
            "src": "1252:67:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2197,
            "name": "FactoryAddressAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "indexed": true,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1350:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:32:8"
            },
            "src": "1324:58:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2201,
            "name": "FactoryAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2199,
                  "indexed": true,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2201,
                  "src": "1415:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1414:32:8"
            },
            "src": "1387:60:8"
          },
          {
            "body": {
              "id": 2212,
              "nodeType": "Block",
              "src": "1701:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2208,
                      "name": "isWhiteListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "1718:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2210,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2209,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "1732:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1718:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2207,
                  "id": 2211,
                  "nodeType": "Return",
                  "src": "1711:37:8"
                }
              ]
            },
            "documentation": "@notice determines if an address is a valid MarketContract\n @return false if the address is not white listed.",
            "id": 2213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAddressWhiteListed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2203,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "1647:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1646:25:8"
            },
            "returnParameters": {
              "id": 2207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2206,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "1695:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1694:6:8"
            },
            "scope": 2368,
            "src": "1617:138:8",
            "stateMutability": "view",
            "superFunction": 2382,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2221,
              "nodeType": "Block",
              "src": "1920:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2219,
                    "name": "addressWhiteList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "1937:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2218,
                  "id": 2220,
                  "nodeType": "Return",
                  "src": "1930:23:8"
                }
              ]
            },
            "documentation": "@notice all currently whitelisted addresses\n returns array of addresses",
            "id": 2222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:2:8"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "1902:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2215,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1902:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2216,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1902:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1901:18:8"
            },
            "scope": 2368,
            "src": "1848:112:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2274,
              "nodeType": "Block",
              "src": "2425:572:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2232,
                          "name": "isWhiteListed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2178,
                          "src": "2443:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2234,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2233,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "2457:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2443:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e206f6e6c792072656d6f76652077686974656c697374656420616464726573736573",
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2475:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d51b16d47868b542a0cc7fdfe486fea938ec355b9b6badab956ecd79c64083ed",
                          "typeString": "literal_string \"can only remove whitelisted addresses\""
                        },
                        "value": "can only remove whitelisted addresses"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d51b16d47868b542a0cc7fdfe486fea938ec355b9b6badab956ecd79c64083ed",
                          "typeString": "literal_string \"can only remove whitelisted addresses\""
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "2435:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:80:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2237,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:80:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2239,
                            "name": "addressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "2546:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2241,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2240,
                            "name": "whiteListIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "2563:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2546:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2242,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "2582:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2546:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e64657820646f6573206e6f74206d617463682061646472657373",
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2611:30:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8b06340f1ad9d5d552c9b9c6696176c6155ed46c107966803bf579a013998c",
                          "typeString": "literal_string \"index does not match address\""
                        },
                        "value": "index does not match address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8b06340f1ad9d5d552c9b9c6696176c6155ed46c107966803bf579a013998c",
                          "typeString": "literal_string \"index does not match address\""
                        }
                      ],
                      "id": 2238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "2525:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:126:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:126:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2247,
                        "name": "isWhiteListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2178,
                        "src": "2661:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2249,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2248,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "2675:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2661:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2694:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2661:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:38:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2253,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2813:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2255,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2254,
                        "name": "whiteListIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "2830:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2813:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2256,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2848:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2261,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2257,
                            "name": "addressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "2865:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2865:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2891:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2865:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2848:45:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2813:80:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:80:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2264,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2903:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2903:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2930:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2903:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:28:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2271,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "2974:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2270,
                      "name": "AddressRemovedFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2193,
                      "src": "2946:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "EmitStatement",
                  "src": "2941:49:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to remove a white listed contract, eventually ownership could transition to\n a decentralized smart contract of community members to vote\n @param contractAddress contract to removed from white list\n @param whiteListIndex of the contractAddress in the addressWhiteList to be removed.",
            "id": 2275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2228,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "2411:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2411:9:8"
              }
            ],
            "name": "removeContractFromWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2340:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2226,
                  "name": "whiteListIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2365:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2339:46:8"
            },
            "returnParameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:8"
            },
            "scope": 2368,
            "src": "2303:694:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "3321:384:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2281,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3258,
                            "src": "3352:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3352:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2283,
                            "name": "factoryAddressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "3365:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2286,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2284,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4045,
                              "src": "3389:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3389:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3365:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3352:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c7920626520616464656420627920666163746f7279206f72206f776e6572",
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_566489dba1d2906c963d1bf4d891116870ef6227fbd7239a53f37ae1ce2d6737",
                          "typeString": "literal_string \"Can only be added by factory or owner\""
                        },
                        "value": "Can only be added by factory or owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_566489dba1d2906c963d1bf4d891116870ef6227fbd7239a53f37ae1ce2d6737",
                          "typeString": "literal_string \"Can only be added by factory or owner\""
                        }
                      ],
                      "id": 2280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3331:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:132:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2290,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3481:31:8",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "isWhiteListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2178,
                            "src": "3482:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2294,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2293,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2277,
                            "src": "3496:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3482:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206d757374206e6f742062652077686974656c6973746564",
                        "id": 2296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:33:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c8b3512cbcdbfadbc6193b15bf02d9f18cb296e7b73d9d4c23a5a139326cd3",
                          "typeString": "literal_string \"Address must not be whitelisted\""
                        },
                        "value": "Address must not be whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c8b3512cbcdbfadbc6193b15bf02d9f18cb296e7b73d9d4c23a5a139326cd3",
                          "typeString": "literal_string \"Address must not be whitelisted\""
                        }
                      ],
                      "id": 2291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3473:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:75:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:75:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2299,
                        "name": "isWhiteListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2178,
                        "src": "3558:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2300,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3572:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3558:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3591:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3558:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:37:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2308,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3627:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2305,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "3605:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3605:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:38:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2312,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3682:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2311,
                      "name": "AddressAddedToWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2189,
                      "src": "3658:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "EmitStatement",
                  "src": "3653:45:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner or factory to add a white listed contract, eventually ownership could transition to\n a decentralized smart contract of community members to vote\n @param contractAddress contract to removed from white list",
            "id": 2316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAddressToWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2277,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "3287:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3286:25:8"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3321:0:8"
            },
            "scope": 2368,
            "src": "3256:449:8",
            "stateMutability": "nonpayable",
            "superFunction": 2375,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2341,
              "nodeType": "Block",
              "src": "3988:197:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4006:40:8",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2324,
                            "name": "factoryAddressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "4007:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2326,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2325,
                            "name": "factoryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2318,
                            "src": "4031:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4007:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320616c7265616479206164646564",
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
                          "typeString": "literal_string \"address already added\""
                        },
                        "value": "address already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
                          "typeString": "literal_string \"address already added\""
                        }
                      ],
                      "id": 2323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3998:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:74:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:74:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2331,
                        "name": "factoryAddressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "4082:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2333,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2332,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "4106:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4082:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4124:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4082:46:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:46:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2338,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "4163:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2337,
                      "name": "FactoryAddressAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "4143:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "EmitStatement",
                  "src": "4138:40:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to add a new address of a factory responsible for creating new market contracts\n @param factoryAddress address of factory to be allowed to add contracts to whitelist",
            "id": 2342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2320,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "3978:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3978:9:8"
              }
            ],
            "name": "addFactoryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "3945:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3944:24:8"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:8"
            },
            "scope": 2368,
            "src": "3918:267:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "4395:252:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2350,
                          "name": "factoryAddressWhiteList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2185,
                          "src": "4426:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2352,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2351,
                          "name": "factoryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "4450:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4426:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "666163746f72792061646472657373206973206e6f7420696e20746865207768697465206c697374",
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4479:42:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d89d66992e415ee75a9edfabf9fe905d120888c416cabd8cfae1fc7a4af661",
                          "typeString": "literal_string \"factory address is not in the white list\""
                        },
                        "value": "factory address is not in the white list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d89d66992e415ee75a9edfabf9fe905d120888c416cabd8cfae1fc7a4af661",
                          "typeString": "literal_string \"factory address is not in the white list\""
                        }
                      ],
                      "id": 2349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "4405:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:126:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:126:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2356,
                        "name": "factoryAddressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "4541:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2358,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2357,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "4565:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4541:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4583:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4541:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:47:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2363,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "4625:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2362,
                      "name": "FactoryAddressRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "4603:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2365,
                  "nodeType": "EmitStatement",
                  "src": "4598:42:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to remove an address of a factory\n @param factoryAddress address of factory to be removed",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2347,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2346,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "4385:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4385:9:8"
              }
            ],
            "name": "removeFactoryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "4352:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4351:24:8"
            },
            "returnParameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4395:0:8"
            },
            "scope": 2368,
            "src": "4322:325:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2369,
        "src": "831:3818:8"
      }
    ],
    "src": "608:4042:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistry.sol",
    "exportedSymbols": {
      "MarketContractRegistry": [
        2368
      ]
    },
    "id": 2369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2168,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2169,
        "nodeType": "ImportDirective",
        "scope": 2369,
        "sourceUnit": 3314,
        "src": "632:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistryInterface.sol",
        "file": "./MarketContractRegistryInterface.sol",
        "id": 2170,
        "nodeType": "ImportDirective",
        "scope": 2369,
        "sourceUnit": 2384,
        "src": "696:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2171,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3313,
              "src": "866:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3313",
                "typeString": "contract Ownable"
              }
            },
            "id": 2172,
            "nodeType": "InheritanceSpecifier",
            "src": "866:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2173,
              "name": "MarketContractRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2383,
              "src": "875:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$2383",
                "typeString": "contract MarketContractRegistryInterface"
              }
            },
            "id": 2174,
            "nodeType": "InheritanceSpecifier",
            "src": "875:31:8"
          }
        ],
        "contractDependencies": [
          2383,
          3313
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractRegistry\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2368,
        "linearizedBaseContracts": [
          2368,
          2383,
          3313
        ],
        "name": "MarketContractRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2178,
            "name": "isWhiteListed",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "941:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2177,
              "keyType": {
                "id": 2175,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "949:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "941:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2176,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "960:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2181,
            "name": "addressWhiteList",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "992:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2179,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "992:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2180,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "992:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2185,
            "name": "factoryAddressWhiteList",
            "nodeType": "VariableDeclaration",
            "scope": 2368,
            "src": "1074:55:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2184,
              "keyType": {
                "id": 2182,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1082:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1074:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2183,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1093:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2189,
            "name": "AddressAddedToWhitelist",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2187,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "1214:31:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1213:33:8"
            },
            "src": "1184:63:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2193,
            "name": "AddressRemovedFromWhitelist",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "1286:31:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1285:33:8"
            },
            "src": "1252:67:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2197,
            "name": "FactoryAddressAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "indexed": true,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1350:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:32:8"
            },
            "src": "1324:58:8"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2201,
            "name": "FactoryAddressRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2199,
                  "indexed": true,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2201,
                  "src": "1415:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1414:32:8"
            },
            "src": "1387:60:8"
          },
          {
            "body": {
              "id": 2212,
              "nodeType": "Block",
              "src": "1701:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2208,
                      "name": "isWhiteListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "1718:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2210,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2209,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "1732:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1718:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2207,
                  "id": 2211,
                  "nodeType": "Return",
                  "src": "1711:37:8"
                }
              ]
            },
            "documentation": "@notice determines if an address is a valid MarketContract\n @return false if the address is not white listed.",
            "id": 2213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAddressWhiteListed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2203,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "1647:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1646:25:8"
            },
            "returnParameters": {
              "id": 2207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2206,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "1695:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1694:6:8"
            },
            "scope": 2368,
            "src": "1617:138:8",
            "stateMutability": "view",
            "superFunction": 2382,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2221,
              "nodeType": "Block",
              "src": "1920:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2219,
                    "name": "addressWhiteList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2181,
                    "src": "1937:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2218,
                  "id": 2220,
                  "nodeType": "Return",
                  "src": "1930:23:8"
                }
              ]
            },
            "documentation": "@notice all currently whitelisted addresses\n returns array of addresses",
            "id": 2222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:2:8"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "1902:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2215,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1902:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2216,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1902:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1901:18:8"
            },
            "scope": 2368,
            "src": "1848:112:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2274,
              "nodeType": "Block",
              "src": "2425:572:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2232,
                          "name": "isWhiteListed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2178,
                          "src": "2443:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2234,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2233,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "2457:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2443:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e206f6e6c792072656d6f76652077686974656c697374656420616464726573736573",
                        "id": 2235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2475:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d51b16d47868b542a0cc7fdfe486fea938ec355b9b6badab956ecd79c64083ed",
                          "typeString": "literal_string \"can only remove whitelisted addresses\""
                        },
                        "value": "can only remove whitelisted addresses"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d51b16d47868b542a0cc7fdfe486fea938ec355b9b6badab956ecd79c64083ed",
                          "typeString": "literal_string \"can only remove whitelisted addresses\""
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "2435:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:80:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2237,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:80:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2239,
                            "name": "addressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "2546:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2241,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2240,
                            "name": "whiteListIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "2563:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2546:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2242,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "2582:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2546:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e64657820646f6573206e6f74206d617463682061646472657373",
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2611:30:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8b06340f1ad9d5d552c9b9c6696176c6155ed46c107966803bf579a013998c",
                          "typeString": "literal_string \"index does not match address\""
                        },
                        "value": "index does not match address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8b06340f1ad9d5d552c9b9c6696176c6155ed46c107966803bf579a013998c",
                          "typeString": "literal_string \"index does not match address\""
                        }
                      ],
                      "id": 2238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "2525:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:126:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:126:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2247,
                        "name": "isWhiteListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2178,
                        "src": "2661:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2249,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2248,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "2675:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2661:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2694:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2661:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:38:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2253,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2813:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2255,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2254,
                        "name": "whiteListIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "2830:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2813:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2256,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2848:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2261,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2257,
                            "name": "addressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2181,
                            "src": "2865:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2865:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2891:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2865:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2848:45:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2813:80:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:80:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2264,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "2903:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2903:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2930:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2903:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:28:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2271,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "2974:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2270,
                      "name": "AddressRemovedFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2193,
                      "src": "2946:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "EmitStatement",
                  "src": "2941:49:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to remove a white listed contract, eventually ownership could transition to\n a decentralized smart contract of community members to vote\n @param contractAddress contract to removed from white list\n @param whiteListIndex of the contractAddress in the addressWhiteList to be removed.",
            "id": 2275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2228,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "2411:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2411:9:8"
              }
            ],
            "name": "removeContractFromWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2340:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2226,
                  "name": "whiteListIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2365:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2339:46:8"
            },
            "returnParameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:8"
            },
            "scope": 2368,
            "src": "2303:694:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "3321:384:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2281,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3258,
                            "src": "3352:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3352:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2283,
                            "name": "factoryAddressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "3365:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2286,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2284,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4045,
                              "src": "3389:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3389:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3365:35:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3352:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c7920626520616464656420627920666163746f7279206f72206f776e6572",
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_566489dba1d2906c963d1bf4d891116870ef6227fbd7239a53f37ae1ce2d6737",
                          "typeString": "literal_string \"Can only be added by factory or owner\""
                        },
                        "value": "Can only be added by factory or owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_566489dba1d2906c963d1bf4d891116870ef6227fbd7239a53f37ae1ce2d6737",
                          "typeString": "literal_string \"Can only be added by factory or owner\""
                        }
                      ],
                      "id": 2280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3331:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:132:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2290,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3481:31:8",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "isWhiteListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2178,
                            "src": "3482:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2294,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2293,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2277,
                            "src": "3496:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3482:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206d757374206e6f742062652077686974656c6973746564",
                        "id": 2296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:33:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c8b3512cbcdbfadbc6193b15bf02d9f18cb296e7b73d9d4c23a5a139326cd3",
                          "typeString": "literal_string \"Address must not be whitelisted\""
                        },
                        "value": "Address must not be whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c8b3512cbcdbfadbc6193b15bf02d9f18cb296e7b73d9d4c23a5a139326cd3",
                          "typeString": "literal_string \"Address must not be whitelisted\""
                        }
                      ],
                      "id": 2291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3473:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:75:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:75:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2299,
                        "name": "isWhiteListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2178,
                        "src": "3558:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2300,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3572:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3558:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3591:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3558:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:37:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2308,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3627:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2305,
                        "name": "addressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2181,
                        "src": "3605:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3605:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:38:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2312,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "3682:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2311,
                      "name": "AddressAddedToWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2189,
                      "src": "3658:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "EmitStatement",
                  "src": "3653:45:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner or factory to add a white listed contract, eventually ownership could transition to\n a decentralized smart contract of community members to vote\n @param contractAddress contract to removed from white list",
            "id": 2316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAddressToWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2277,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "3287:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3286:25:8"
            },
            "returnParameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3321:0:8"
            },
            "scope": 2368,
            "src": "3256:449:8",
            "stateMutability": "nonpayable",
            "superFunction": 2375,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2341,
              "nodeType": "Block",
              "src": "3988:197:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4006:40:8",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2324,
                            "name": "factoryAddressWhiteList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "4007:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2326,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2325,
                            "name": "factoryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2318,
                            "src": "4031:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4007:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320616c7265616479206164646564",
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
                          "typeString": "literal_string \"address already added\""
                        },
                        "value": "address already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
                          "typeString": "literal_string \"address already added\""
                        }
                      ],
                      "id": 2323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "3998:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:74:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:74:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2331,
                        "name": "factoryAddressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "4082:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2333,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2332,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "4106:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4082:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4124:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4082:46:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:46:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2338,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "4163:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2337,
                      "name": "FactoryAddressAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "4143:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "EmitStatement",
                  "src": "4138:40:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to add a new address of a factory responsible for creating new market contracts\n @param factoryAddress address of factory to be allowed to add contracts to whitelist",
            "id": 2342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2320,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "3978:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3978:9:8"
              }
            ],
            "name": "addFactoryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "3945:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3944:24:8"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:8"
            },
            "scope": 2368,
            "src": "3918:267:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "4395:252:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2350,
                          "name": "factoryAddressWhiteList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2185,
                          "src": "4426:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2352,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2351,
                          "name": "factoryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "4450:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4426:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "666163746f72792061646472657373206973206e6f7420696e20746865207768697465206c697374",
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4479:42:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d89d66992e415ee75a9edfabf9fe905d120888c416cabd8cfae1fc7a4af661",
                          "typeString": "literal_string \"factory address is not in the white list\""
                        },
                        "value": "factory address is not in the white list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d89d66992e415ee75a9edfabf9fe905d120888c416cabd8cfae1fc7a4af661",
                          "typeString": "literal_string \"factory address is not in the white list\""
                        }
                      ],
                      "id": 2349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4048,
                        4049
                      ],
                      "referencedDeclaration": 4049,
                      "src": "4405:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:126:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:126:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2356,
                        "name": "factoryAddressWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "4541:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2358,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2357,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "4565:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4541:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4583:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4541:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:47:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2363,
                        "name": "factoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "4625:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2362,
                      "name": "FactoryAddressRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "4603:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2365,
                  "nodeType": "EmitStatement",
                  "src": "4598:42:8"
                }
              ]
            },
            "documentation": "@dev allows for the owner to remove an address of a factory\n @param factoryAddress address of factory to be removed",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2347,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2346,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3247,
                  "src": "4385:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4385:9:8"
              }
            ],
            "name": "removeFactoryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "name": "factoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "4352:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4351:24:8"
            },
            "returnParameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4395:0:8"
            },
            "scope": 2368,
            "src": "4322:325:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2369,
        "src": "831:3818:8"
      }
    ],
    "src": "608:4042:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x534d18c8ff24ba5980906d732f3075704749427353734fbbf05d50485643b124": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "AddressAddedToWhitelist",
          "type": "event"
        },
        "0x535611fb62fa2a833988f283b779e417e996813e44046f521d76c17b5943b08c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "AddressRemovedFromWhitelist",
          "type": "event"
        },
        "0x960c6a67a1f0f46ddffd138f2b7f44cbc573d0e0a073363b287a257b121dc48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "factoryAddress",
              "type": "address"
            }
          ],
          "name": "FactoryAddressAdded",
          "type": "event"
        },
        "0x5d6ac55db628f137c53a554c300a684dc6b3db9d8f24e9611ea5e84c282d177d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "factoryAddress",
              "type": "address"
            }
          ],
          "name": "FactoryAddressRemoved",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8eBd1091D9A42233421085b69376917006fE2e73",
      "transactionHash": "0x50b70324b18a7b8a3d20af4b658689de3a6a17f010a46da1813022ad5b40e5c2"
    },
    "50": {
      "events": {
        "0x534d18c8ff24ba5980906d732f3075704749427353734fbbf05d50485643b124": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "AddressAddedToWhitelist",
          "type": "event"
        },
        "0x535611fb62fa2a833988f283b779e417e996813e44046f521d76c17b5943b08c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "AddressRemovedFromWhitelist",
          "type": "event"
        },
        "0x960c6a67a1f0f46ddffd138f2b7f44cbc573d0e0a073363b287a257b121dc48a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "factoryAddress",
              "type": "address"
            }
          ],
          "name": "FactoryAddressAdded",
          "type": "event"
        },
        "0x5d6ac55db628f137c53a554c300a684dc6b3db9d8f24e9611ea5e84c282d177d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "factoryAddress",
              "type": "address"
            }
          ],
          "name": "FactoryAddressRemoved",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x136759Ee3659dABB982F409D766C5e2679089dd4",
      "transactionHash": "0x91fcc0771ec58e0e8d5ac74de9f402dfe1bc835760ea53d1bcd692119f0259ad"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-03T13:27:36.734Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Phil Elsasser <phil@marketprotocol.io>",
    "methods": {
      "addAddressToWhiteList(address)": {
        "details": "allows for the owner or factory to add a white listed contract, eventually ownership could transition to a decentralized smart contract of community members to vote",
        "params": {
          "contractAddress": "contract to removed from white list"
        }
      },
      "addFactoryAddress(address)": {
        "details": "allows for the owner to add a new address of a factory responsible for creating new market contracts",
        "params": {
          "factoryAddress": "address of factory to be allowed to add contracts to whitelist"
        }
      },
      "isAddressWhiteListed(address)": {
        "return": "false if the address is not white listed."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "removeContractFromWhiteList(address,uint256)": {
        "details": "allows for the owner to remove a white listed contract, eventually ownership could transition to a decentralized smart contract of community members to vote",
        "params": {
          "contractAddress": "contract to removed from white list",
          "whiteListIndex": "of the contractAddress in the addressWhiteList to be removed."
        }
      },
      "removeFactoryAddress(address)": {
        "details": "allows for the owner to remove an address of a factory",
        "params": {
          "factoryAddress": "address of factory to be removed"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "MarketContractRegistry"
  },
  "userdoc": {
    "methods": {
      "getAddressWhiteList()": {
        "notice": "all currently whitelisted addresses returns array of addresses"
      },
      "isAddressWhiteListed(address)": {
        "notice": "determines if an address is a valid MarketContract"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}