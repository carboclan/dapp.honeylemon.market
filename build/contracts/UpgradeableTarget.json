{
  "contractName": "UpgradeableTarget",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "upgradeFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\r\n    Copyright 2017-2019 Phillip A. Elsasser\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\n\r\npragma solidity 0.5.2;\r\n\r\n\r\n/// @title Upgradeable Target\r\n/// @notice A contract (or a token itself) that can facilitate the upgrade from an existing deployed token\r\n/// to allow us to upgrade our token's functionality.\r\n/// @author Phil Elsasser <phil@marketprotocol.io>\r\ncontract UpgradeableTarget {\r\n    function upgradeFrom(address from, uint256 value) external; // note: implementation should require(from == oldToken)\r\n}\r\n",
  "sourcePath": "C:\\Users\\myank\\Code\\projects\\dapp.honeylemon.market\\contracts\\marketprotocol\\tokens\\UpgradeableTarget.sol",
  "ast": {
    "absolutePath": "/C/Users/myank/Code/projects/dapp.honeylemon.market/contracts/marketprotocol/tokens/UpgradeableTarget.sol",
    "exportedSymbols": {
      "UpgradeableTarget": [
        3092
      ]
    },
    "id": 3093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3084,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "624:22:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": false,
        "id": 3092,
        "linearizedBaseContracts": [
          3092
        ],
        "name": "UpgradeableTarget",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 3091,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3086,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "953:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3088,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "967:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "952:29:17"
            },
            "returnParameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:17"
            },
            "scope": 3092,
            "src": "932:59:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3093,
        "src": "898:153:17"
      }
    ],
    "src": "624:429:17"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/myank/Code/projects/dapp.honeylemon.market/contracts/marketprotocol/tokens/UpgradeableTarget.sol",
    "exportedSymbols": {
      "UpgradeableTarget": [
        3092
      ]
    },
    "id": 3093,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3084,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "624:22:17"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": false,
        "id": 3092,
        "linearizedBaseContracts": [
          3092
        ],
        "name": "UpgradeableTarget",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 3091,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3086,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "953:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3088,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "967:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "952:29:17"
            },
            "returnParameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:17"
            },
            "scope": 3092,
            "src": "932:59:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3093,
        "src": "898:153:17"
      }
    ],
    "src": "624:429:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-04T22:55:22.931Z",
  "devdoc": {
    "author": "Phil Elsasser <phil@marketprotocol.io>",
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}