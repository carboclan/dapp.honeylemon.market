{
  "contractName": "MarketContractMPX",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "LONG_POSITION_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_URL",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_STATISTIC",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SETTLEMENT_DELAY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SHORT_POSITION_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_FEE_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToRedeem",
          "type": "uint256"
        },
        {
          "name": "redeemer",
          "type": "address"
        }
      ],
      "name": "redeemShortToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementTimeStamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_HUB_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPostSettlementDelay",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToRedeem",
          "type": "uint256"
        },
        {
          "name": "redeemer",
          "type": "address"
        }
      ],
      "name": "redeemLongToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToMint",
          "type": "uint256"
        },
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "mintPositionTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKT_TOKEN_FEE_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_POOL_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractNames",
          "type": "bytes32[3]"
        },
        {
          "name": "baseAddresses",
          "type": "address[3]"
        },
        {
          "name": "oracleHubAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[7]"
        },
        {
          "name": "oracleURL",
          "type": "string"
        },
        {
          "name": "oracleStatistic",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "oracleCallBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "arbitrateSettlement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "name": "setOracleHubAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LONG_POSITION_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_DECIMAL_PLACES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_TOKEN_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSettled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_URL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_STATISTIC\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SETTLEMENT_DELAY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SHORT_POSITION_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_TOKEN_FEE_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToRedeem\",\"type\":\"uint256\"},{\"name\":\"redeemer\",\"type\":\"address\"}],\"name\":\"redeemShortToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"oracleCallBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"arbitrateSettlement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlementTimeStamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_HUB_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oracleHubAddress\",\"type\":\"address\"}],\"name\":\"setOracleHubAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXPIRATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPostSettlementDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToRedeem\",\"type\":\"uint256\"},{\"name\":\"redeemer\",\"type\":\"address\"}],\"name\":\"redeemLongToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_FLOOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QTY_MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToMint\",\"type\":\"uint256\"},{\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"mintPositionTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MKT_TOKEN_FEE_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_POOL_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlementPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"contractNames\",\"type\":\"bytes32[3]\"},{\"name\":\"baseAddresses\",\"type\":\"address[3]\"},{\"name\":\"oracleHubAddress\",\"type\":\"address\"},{\"name\":\"contractSpecs\",\"type\":\"uint256[7]\"},{\"name\":\"oracleURL\",\"type\":\"string\"},{\"name\":\"oracleStatistic\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdatedLastPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"settlePrice\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Phil Elsasser <phil@marketprotocol.io>\",\"methods\":{\"arbitrateSettlement(uint256)\":{\"details\":\"allows us to arbitrate a settlement price by updating the settlement value, and resetting the delay for funds to be released. Could also be used to allow us to force a contract into early settlement if a dispute arises that we believe is best resolved by early settlement.\",\"params\":{\"price\":\"settlement price\"}},\"constructor\":{\"params\":{\"baseAddresses\":\"array of 2 addresses needed for our contract including:     ownerAddress                    address of the owner of these contracts.     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing     collateralPoolAddress           address of our collateral pool contract\",\"contractNames\":\"bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token\",\"contractSpecs\":\"array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\",\"oracleHubAddress\":\"address of our oracle hub providing the callbacks\",\"oracleStatistic\":\"statistic type (lastPrice, vwap, etc)\",\"oracleURL\":\"url of data\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mintPositionTokens(uint256,address)\":{\"params\":{\"minter\":\"address of minter to receive tokens\",\"qtyToMint\":\"qty in base units of how many short and long tokens to mint\"}},\"oracleCallBack(uint256)\":{\"details\":\"called only by our oracle hub when a new price is available provided by our oracle.\",\"params\":{\"price\":\"lastPrice provided by the oracle.\"}},\"owner()\":{\"return\":\"the address of the owner.\"},\"redeemLongToken(uint256,address)\":{\"params\":{\"qtyToRedeem\":\"qty in base units of how many tokens to redeem\",\"redeemer\":\"address of person redeeming tokens\"}},\"redeemShortToken(uint256,address)\":{\"params\":{\"qtyToRedeem\":\"qty in base units of how many tokens to redeem\",\"redeemer\":\"address of person redeeming tokens\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setOracleHubAddress(address)\":{\"details\":\"allows for the owner of the contract to change the oracle hub address if needed\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"MarketContractMPX - a MarketContract designed to be used with our internal oracle service\"},\"userdoc\":{\"methods\":{\"isPostSettlementDelay()\":{\"notice\":\"checks to see if a contract is settled, and that the settlement delay has passed\"},\"mintPositionTokens(uint256,address)\":{\"notice\":\"called only by our collateral pool to create long and short position tokens\"},\"redeemLongToken(uint256,address)\":{\"notice\":\"called only by our collateral pool to redeem long position tokens\"},\"redeemShortToken(uint256,address)\":{\"notice\":\"called only by our collateral pool to redeem short position tokens\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol\":\"MarketContractMPX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/MathLib.sol\":{\"keccak256\":\"0xbae297ccc539c1eb18e87a946380830d6fdfaf25a2cc2c10112900fc1541103c\",\"urls\":[\"bzzr://003d62cac550255758633d34a9f1df0b0669616c6d32e59923805fb8d512daa5\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/StringLib.sol\":{\"keccak256\":\"0xfe9df18e4239bd30aa3a257a7cf15665547ec0a47bd5ec05566ef0efe390b551\",\"urls\":[\"bzzr://763e42c56f8bbd8d091c17c754e1ab28e8d439d797827db9589f0a9fbf6a814b\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContract.sol\":{\"keccak256\":\"0x1c02623d1a1bf39f8f7963f83502467050ae2e26937905726be67871611da3a1\",\"urls\":[\"bzzr://d96f210be6bdc29adf4ca117141ac82477db065e092188d11c39de22a3797388\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol\":{\"keccak256\":\"0xa096ba856d05c91f7ce823b76d9c819a64ea3c5e4d57b66ac005b763d5985e75\",\"urls\":[\"bzzr://57733cd70cc7b2ebc6c9ceb665c24c1b349b40d73b454eba6ab810243f0464fe\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/tokens/PositionToken.sol\":{\"keccak256\":\"0xb2e1e7399d1fae3b246a2c519edf96dda398c0f6ad1eaedd5f8ed719decd7f9d\",\"urls\":[\"bzzr://764c8a160650bcaed27e1266922c0283b5181427834b9ccb14e26b39e352ba3d\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061020d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161012c578063c32b1dfa116100bf578063e158e02d1161008e578063e158e02d14610833578063eaafb4fa14610851578063f2fde38b1461089b578063f348e8b2146108df5761020d565b8063c32b1dfa1461078b578063ca361d67146107a9578063cabd5834146107c7578063db3fa771146108155761020d565b8063b5471dee116100fb578063b5471dee146106df578063bb4b5734146106fd578063bd220dae1461071b578063c25c44441461073d5761020d565b80638da5cb5b146105e55780638f32d59b1461062f578063986c206314610651578063a8a5d2701461069b5761020d565b80635b3f1e3f116101a45780636fbce940116101735780636fbce94014610561578063715018a61461058f5780637df237531461059957806386aa7cdc146105c75761020d565b80635b3f1e3f146104285780635c7c705914610472578063614d08f8146104905780636d359467146105135761020d565b80633270bb5b116101e05780633270bb5b146102e25780633d168eda146103045780634ac77f221461038757806357d1ba251461040a5761020d565b8063053f14da1461021257806322d1c35e146102305780632fed1b001461027a578063323bb77514610298575b600080fd5b61021a6108fd565b6040518082815260200191505060405180910390f35b610238610903565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610282610929565b6040518082815260200191505060405180910390f35b6102a061092f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ea610955565b604051808215151515815260200191505060405180910390f35b61030c610968565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034c578082015181840152602081019050610331565b50505050905090810190601f1680156103795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61038f610a06565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103cf5780820151818401526020810190506103b4565b50505050905090810190601f1680156103fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610412610aa4565b6040518082815260200191505060405180910390f35b610430610aaa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61047a610ad0565b6040518082815260200191505060405180910390f35b610498610ad6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104d85780820151818401526020810190506104bd565b50505050905090810190601f1680156105055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61055f6004803603604081101561052957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b74565b005b61058d6004803603602081101561057757600080fd5b8101908080359060200190929190505050610cfd565b005b610597610e27565b005b6105c5600480360360208110156105af57600080fd5b8101908080359060200190929190505050610ef9565b005b6105cf610fdc565b6040518082815260200191505060405180910390f35b6105ed610fe2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61063761100b565b604051808215151515815260200191505060405180910390f35b610659611062565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106dd600480360360208110156106b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611088565b005b6106e7611167565b6040518082815260200191505060405180910390f35b61070561116d565b6040518082815260200191505060405180910390f35b610723611173565b604051808215151515815260200191505060405180910390f35b6107896004803603604081101561075357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061119c565b005b610793611325565b6040518082815260200191505060405180910390f35b6107b161132b565b6040518082815260200191505060405180910390f35b610813600480360360408110156107dd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611331565b005b61081d611597565b6040518082815260200191505060405180910390f35b61083b61159d565b6040518082815260200191505060405180910390f35b6108596115a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108dd600480360360208110156108b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c9565b005b6108e76115e8565b6040518082815260200191505060405180910390f35b600f5481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601260009054906101000a900460ff1681565b60138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109fe5780601f106109d3576101008083540402835291602001916109fe565b820191906000526020600020905b8154815290600101906020018083116109e157829003601f168201915b505050505081565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b505050505081565b600c5481565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b516026913960400191505060405180910390fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3501ff683836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610ce157600080fd5b505af1158015610cf5573d6000803e3d6000fd5b505050505050565b601260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f6e6c792063616c6c61626c6520627920746865206f7261636c65206875620081525060200191505060405180910390fd5b601260009054906101000a900460ff16151515610dde57600080fd5b80600f819055507f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b482816040518082815260200191505060405180910390a1610e246115ee565b50565b610e2f61100b565b1515610e3a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610f0161100b565b1515610f0c57600080fd5b6005548110158015610f2057506004548111155b1515610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611ba26030913960400191505060405180910390fd5b80600f819055507f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b482816040518082815260200191505060405180910390a1610fbe81611728565b6001601260006101000a81548160ff02191690831515021790555050565b60115481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b601260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61109061100b565b151561109b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611b77602b913960400191505060405180910390fd5b80601260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b600b5481565b6000601260009054906101000a900460ff1680156111975750600c54601154014210155b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611244576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b516026913960400191505060405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3501ff683836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561130957600080fd5b505af115801561131d573d6000803e3d6000fd5b505050505050565b60055481565b60075481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b516026913960400191505060405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637251cd0283836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561149e57600080fd5b505af11580156114b2573d6000803e3d6000fd5b50505050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637251cd0283836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561157b57600080fd5b505af115801561158f573d6000803e3d6000fd5b505050505050565b600a5481565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115d161100b565b15156115dc57600080fd5b6115e581611770565b50565b60105481565b601260009054906101000a900460ff16151515611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f436f6e747261637420697320616c726561647920736574746c6564000000000081525060200191505060405180910390fd5b6000600b544211156116a4576001601260006101000a81548160ff021916908315150217905550600f549050611706565b600454600f541015156116d6576001601260006101000a81548160ff0219169083151502179055506004549050611705565b600554600f54111515611704576001601260006101000a81548160ff02191690831515021790555060055490505b5b5b601260009054906101000a900460ff16156117255761172481611728565b5b50565b42601181905550806010819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117ac57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061187f611879848661199a565b83611a1f565b90509392505050565b60008060026118978688611ac6565b8115156118a057fe5b0490506127106118b96118b38387611a1f565b85611a1f565b8115156118c257fe5b04915050949350505050565b60608060206040519080825280601f01601f1916602001820160405280156119055781602001600182028038833980820191505090505b50905060005b602081101561199057838160208110151561192257fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002828281518110151561195357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061190b565b5080915050919050565b6000828211151515611a14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6174684c69623a207375627472616374696f6e206f766572666c6f7700000081525060200191505060405180910390fd5b818303905092915050565b600080831415611a325760009050611ac0565b60008284029050828482811515611a4557fe5b04141515611abb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f7781525060200191505060405180910390fd5b809150505b92915050565b6000808284019050838110151515611b46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d6174684c69623a206164646974696f6e206f766572666c6f7700000000000081525060200191505060405180910390fd5b809150509291505056fe4f6e6c792063616c6c61626c652066726f6d2074686520636f6c6c61746572616c20706f6f6c63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c20616464726573736172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473a165627a7a72305820680d83a34f13ffa05e32faec07ebaccb54418098295cf28bf50e5b9c1f9647a80029",
  "sourceMap": "818:3944:12:-;;;1802:1:8;1771:32;;2035:5;2011:29;;;;;;;;;;;;;;;;;;;;2645:441:12;8:9:-1;5:2;;;30:1;27;20:12;5:2;2645:441:12;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2645:441:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;2645:441:12;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;2645:441:12;;;;;;2911:13;2926;2941;524:10:21;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;3773:13:8;3787:1;3773:16;;;;;;;;;;;;;3759:11;:30;;;;3811:13;3825:1;3811:16;;;;;;;;;;;;;3799:9;:28;;;;3857:11;;3845:9;;:23;3837:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3949:13;3963:1;3949:16;;;;;;;;;;;;;3926:20;:39;;;;3992:13;4006:1;3992:16;;;;;;;;;;;;;3975:14;:33;;;;4031:13;4045:1;4031:16;;;;;;;;;;;;;4018:10;:29;;;;4078:3;4065:10;;:16;4057:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4154:1;4136:14;;:19;;4128:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4224:13;4238:1;4224:16;;;;;;;;;;;;;4197:24;;:43;;;;;;;;;;;;;;;;;;4276:13;4290:1;4276:16;;;;;;;;;;;;;4250:23;;:42;;;;;;;;;;;;;;;;;;4324:118;4370:11;;4395:9;;4418:14;;4324:32;;;;;:118;;;:::i;:::-;4302:19;:140;;;;4484:143;4525:11;;4550:9;;4573:14;;4601:13;4615:1;4601:16;;;;;;;;;;;;;4484:27;;;;;:143;;;:::i;:::-;4452:29;:175;;;;4662:143;4703:11;;4728:9;;4751:14;;4779:13;4793:1;4779:16;;;;;;;;;;;;;4662:27;;;;;:143;;;:::i;:::-;4637:22;:168;;;;4872:34;:13;4886:1;4872:16;;;;;;;;;;;;;:32;;;;;:34;;;:::i;:::-;4856:13;:50;;;;;;;;;;;;:::i;:::-;;4916:26;5027:34;:13;5041:1;5027:16;;;;;;;;;;;;;:32;;;;;:34;;;:::i;:::-;5081:29;5075:36;;;;;;;;4945:176;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4945:176:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4945:176:8;4916:205;;5131:27;5244:34;:13;5258:1;5244:16;;;;;;;;;;;;;:32;;;;;:34;;;:::i;:::-;5298:30;5292:37;;;;;;;;5161:178;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5161:178:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5161:178:8;5131:208;;5380:12;5350:19;;:43;;;;;;;;;;;;;;;;;;5434:13;5403:20;;:45;;;;;;;;;;;;;;;;;;5459:35;5477:13;5491:1;5477:16;;;;;;;;;;;;;5459:17;;;:35;;;:::i;:::-;3604:1897;;;;;2979:9:12;2966:10;:22;;;;;;;;;;;;:::i;:::-;;3017:15;2998:16;:34;;;;;;;;;;;;:::i;:::-;;3063:16;3042:18;;:37;;;;;;;;;;;;;;;;;;2645:441;;;;;;818:3944;;3281:222:5;3414:4;3441:55;3450:30;3459:8;3469:10;3450:8;;;:30;;;:::i;:::-;3482:13;3441:8;;;:55;;;:::i;:::-;3434:62;;3281:222;;;;;:::o;3613:319::-;3778:4;3794:13;3838:1;3810:25;3814:8;3824:10;3810:3;;;:25;;;:::i;:::-;:29;;;;;;;;3794:45;;3920:5;3856:61;3865:33;3874:8;3884:13;3865:8;;;:33;;;:::i;:::-;3900:16;3856:8;;;:61;;;:::i;:::-;:69;;;;;;;;3849:76;;;3613:319;;;;;;:::o;152:302:6:-;248:13;277:23;313:2;303:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;303:13:6;;;;277:39;;331:9;326:87;346:2;342:1;:6;326:87;;;385:14;400:1;385:17;;;;;;;;;;;;369:10;380:1;369:13;;;;;;;;;;;;;;:33;;;;;;;;;;;350:3;;;;;;;326:87;;;;436:10;422:25;;;152:302;;;:::o;1731:107:21:-;863:9;:7;;;:9;;;:::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;;;:28;;;:::i;:::-;1731:107;:::o;1320:159:5:-;1383:7;1415:1;1410;:6;;1402:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1471:1;1467;:5;1460:12;;1320:159;;;;:::o;866:245::-;929:7;957:1;952;:6;948:45;;;981:1;974:8;;;;948:45;1003:9;1019:1;1015;:5;1003:17;;1047:1;1042;1038;:5;;;;;;;;:10;1030:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:1;1096:8;;;866:245;;;;;:::o;1485:174::-;1543:7;1562:9;1578:1;1574;:5;1562:17;;1602:1;1597;:6;;1589:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1651:1;1644:8;;;1485:174;;;;:::o;979:90:21:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1982:183::-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;818:3944:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "818:3944:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;818:3944:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:21:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1809:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1325:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1180:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2011:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;908:24:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;908:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;938:30:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:32:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1849:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1656:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1147:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1147:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6893:276;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6893:276:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3281:254:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3281:254:12;;;;;;;;;;;;;;;;;:::i;:::-;;1423:137:21;;;:::i;:::-;;3881:337:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3881:337:12;;;;;;;;;;;;;;;;;:::i;:::-;;1974:31:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;659:77:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;869:33:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4504:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4504:256:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1269:21:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1743:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7309:146;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6392:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6392:274:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1296:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1435:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5811:355;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5811:355:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1703:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1552:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1225:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1731:107:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;1941:27:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1914:21;;;;:::o;1809:34::-;;;;;;;;;;;;;:::o;1325:32::-;;;;:::o;1180:39::-;;;;;;;;;;;;;:::o;2011:29::-;;;;;;;;;;;;;:::o;908:24:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;938:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1771:32:8:-;;;;:::o;1849:35::-;;;;;;;;;;;;;:::o;1656:41::-;;;;:::o;1147:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6893:276::-;9120:23;;;;;;;;;;;9106:37;;:10;:37;;;9085:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7106:20;;;;;;;;;;;7092:47;;;7140:11;7153:8;7092:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7092:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7092:70:8;;;;6893:276;;:::o;3281:254:12:-;4333:18;;;;;;;;;;;4319:32;;:10;:32;;;4311:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:9;;;;;;;;;;;3359:10;3351:19;;;;;;;;3392:5;3380:9;:17;;;;3412:23;3429:5;3412:23;;;;;;;;;;;;;;;;;;3445:17;:15;:17::i;:::-;3281:254;:::o;1423:137:21:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;3881:337:12:-;863:9:21;:7;:9::i;:::-;855:18;;;;;;;;3982:11:12;;3973:5;:20;;:42;;;;;4006:9;;3997:5;:18;;3973:42;3952:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4111:5;4099:9;:17;;;;4131:23;4148:5;4131:23;;;;;;;;;;;;;;;;;;4164:21;4179:5;4164:14;:21::i;:::-;4207:4;4195:9;;:16;;;;;;;;;;;;;;;;;;3881:337;:::o;1974:31:8:-;;;;:::o;659:77:21:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;869:33:12:-;;;;;;;;;;;;;:::o;4504:256::-;863:9:21;:7;:9::i;:::-;855:18;;;;;;;;4635:1:12;4607:30;;:16;:30;;;;4586:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4737:16;4716:18;;:37;;;;;;;;;;;;;;;;;;4504:256;:::o;1269:21:8:-;;;;:::o;1743:22::-;;;;:::o;7309:146::-;7363:4;7386:9;;;;;;;;;;;:62;;;;;7430:16;;7408:19;;:38;7400:3;:47;;7386:62;7379:69;;7309:146;:::o;6392:274::-;9120:23;;;;;;;;;;;9106:37;;:10;:37;;;9085:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6604:19;;;;;;;;;;;6590:46;;;6637:11;6650:8;6590:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6590:69:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6590:69:8;;;;6392:274;;:::o;1296:23::-;;;;:::o;1435:26::-;;;;:::o;5811:355::-;9120:23;;;;;;;;;;;9106:37;;:10;:37;;;9085:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6022:19;;;;;;;;;;;6008:51;;;6060:9;6071:6;6008:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6008:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6008:70:8;;;;6102:20;;;;;;;;;;;6088:52;;;6141:9;6152:6;6088:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6088:71:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6088:71:8;;;;5811:355;;:::o;1703:34::-;;;;:::o;1552:31::-;;;;:::o;1225:38::-;;;;;;;;;;;;;:::o;1731:107:21:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1941:27:8:-;;;;:::o;7672:879::-;7727:9;;;;;;;;;;;7726:10;7718:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7799:23;7842:10;;7836:3;:16;7832:629;;;7972:4;7960:9;;:16;;;;;;;;;;;;;;;;;;8050:9;;8029:30;;7832:629;;;8093:9;;8080;;:22;;8076:385;;;8203:4;8191:9;;:16;;;;;;;;;;;;;;;;;;8242:9;;8221:30;;8076:385;;;8285:11;;8272:9;;:24;;8268:193;;;8400:4;8388:9;;:16;;;;;;;;;;;;;;;;;;8439:11;;8418:32;;8268:193;8076:385;7832:629;8475:9;;;;;;;;;;;8471:74;;;8500:34;8515:18;8500:14;:34::i;:::-;8471:74;7672:879;:::o;8706:202::-;8798:3;8776:19;:25;;;;8829:20;8811:15;:38;;;;8864:37;8880:20;8864:37;;;;;;;;;;;;;;;;;;8706:202;:::o;1982:183:21:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;3281:222:5:-;3414:4;3441:55;3450:30;3459:8;3469:10;3450:8;:30::i;:::-;3482:13;3441:8;:55::i;:::-;3434:62;;3281:222;;;;;:::o;3613:319::-;3778:4;3794:13;3838:1;3810:25;3814:8;3824:10;3810:3;:25::i;:::-;:29;;;;;;;;3794:45;;3920:5;3856:61;3865:33;3874:8;3884:13;3865:8;:33::i;:::-;3900:16;3856:8;:61::i;:::-;:69;;;;;;;;3849:76;;;3613:319;;;;;;:::o;152:302:6:-;248:13;277:23;313:2;303:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;303:13:6;;;;277:39;;331:9;326:87;346:2;342:1;:6;326:87;;;385:14;400:1;385:17;;;;;;;;;;;;369:10;380:1;369:13;;;;;;;;;;;;;;:33;;;;;;;;;;;350:3;;;;;;;326:87;;;;436:10;422:25;;;152:302;;;:::o;1320:159:5:-;1383:7;1415:1;1410;:6;;1402:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1471:1;1467;:5;1460:12;;1320:159;;;;:::o;866:245::-;929:7;957:1;952;:6;948:45;;;981:1;974:8;;;;948:45;1003:9;1019:1;1015;:5;1003:17;;1047:1;1042;1038;:5;;;;;;;;:10;1030:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:1;1096:8;;;866:245;;;;;:::o;1485:174::-;1543:7;1562:9;1578:1;1574;:5;1562:17;;1602:1;1597;:6;;1589:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1651:1;1644:8;;;1485:174;;;;:::o",
  "source": "/*\n    Copyright 2017-2019 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.2;\n\nimport '../MarketContract.sol';\n\n\n/// @title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractMPX is MarketContract {\n    address public ORACLE_HUB_ADDRESS;\n    string public ORACLE_URL;\n    string public ORACLE_STATISTIC;\n\n    /// @param contractNames bytes32 array of names\n    ///     contractName            name of the market contract\n    ///     longTokenSymbol         symbol for the long token\n    ///     shortTokenSymbol        symbol for the short token\n    /// @param baseAddresses array of 2 addresses needed for our contract including:\n    ///     ownerAddress                    address of the owner of these contracts.\n    ///     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n    ///     collateralPoolAddress           address of our collateral pool contract\n    /// @param oracleHubAddress     address of our oracle hub providing the callbacks\n    /// @param contractSpecs array of unsigned integers including:\n    ///     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n    ///     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n    ///     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n    ///                             an integer\n    ///     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n    ///     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n    ///     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n    ///     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n    /// @param oracleURL url of data\n    /// @param oracleStatistic statistic type (lastPrice, vwap, etc)\n    constructor(\n        bytes32[3] memory contractNames,\n        address[3] memory baseAddresses,\n        address oracleHubAddress,\n        uint[7] memory contractSpecs,\n        string memory oracleURL,\n        string memory oracleStatistic\n    ) public MarketContract(contractNames, baseAddresses, contractSpecs) {\n        ORACLE_URL = oracleURL;\n        ORACLE_STATISTIC = oracleStatistic;\n        ORACLE_HUB_ADDRESS = oracleHubAddress;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @dev called only by our oracle hub when a new price is available provided by our oracle.\n    /// @param price lastPrice provided by the oracle.\n    function oracleCallBack(uint256 price) public onlyOracleHub {\n        require(!isSettled);\n        lastPrice = price;\n        emit UpdatedLastPrice(price);\n        checkSettlement(); // Verify settlement at expiration or requested early settlement.\n    }\n\n    /// @dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n    /// delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n    /// if a dispute arises that we believe is best resolved by early settlement.\n    /// @param price settlement price\n    function arbitrateSettlement(uint256 price) public onlyOwner {\n        require(\n            price >= PRICE_FLOOR && price <= PRICE_CAP,\n            'arbitration price must be within contract bounds'\n        );\n        lastPrice = price;\n        emit UpdatedLastPrice(price);\n        settleContract(price);\n        isSettled = true;\n    }\n\n    /// @dev allows calls only from the oracle hub.\n    modifier onlyOracleHub() {\n        require(msg.sender == ORACLE_HUB_ADDRESS, 'only callable by the oracle hub');\n        _;\n    }\n\n    /// @dev allows for the owner of the contract to change the oracle hub address if needed\n    function setOracleHubAddress(address oracleHubAddress) public onlyOwner {\n        require(\n            oracleHubAddress != address(0),\n            'cannot set oracleHubAddress to null address'\n        );\n        ORACLE_HUB_ADDRESS = oracleHubAddress;\n    }\n}\n",
  "sourcePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol",
  "ast": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol",
    "exportedSymbols": {
      "MarketContractMPX": [
        3469
      ]
    },
    "id": 3470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3328,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:12"
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3329,
        "nodeType": "ImportDirective",
        "scope": 3470,
        "sourceUnit": 2940,
        "src": "632:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3330,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "848:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$2939",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3331,
            "nodeType": "InheritanceSpecifier",
            "src": "848:14:12"
          }
        ],
        "contractDependencies": [
          2939,
          4086
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3469,
        "linearizedBaseContracts": [
          3469,
          2939,
          4086
        ],
        "name": "MarketContractMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3333,
            "name": "ORACLE_HUB_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "869:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3332,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3335,
            "name": "ORACLE_URL",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "908:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3334,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3337,
            "name": "ORACLE_STATISTIC",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "938:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3336,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "938:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3375,
              "nodeType": "Block",
              "src": "2956:130:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3363,
                      "name": "ORACLE_URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3335,
                      "src": "2966:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3364,
                      "name": "oracleURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3353,
                      "src": "2979:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2966:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3366,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3367,
                      "name": "ORACLE_STATISTIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3337,
                      "src": "2998:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3368,
                      "name": "oracleStatistic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "3017:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2998:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3371,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "3042:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3372,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3063:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3042:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3374,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:37:12"
                }
              ]
            },
            "documentation": "@param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param baseAddresses array of 2 addresses needed for our contract including:\n     ownerAddress                    address of the owner of these contracts.\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n     collateralPoolAddress           address of our collateral pool contract\n @param oracleHubAddress     address of our oracle hub providing the callbacks\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3358,
                    "name": "contractNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3341,
                    "src": "2911:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                      "typeString": "bytes32[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3359,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3345,
                    "src": "2926:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3360,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3351,
                    "src": "2941:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                      "typeString": "uint256[7] memory"
                    }
                  }
                ],
                "id": 3361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3357,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2939,
                  "src": "2896:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$2939_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2896:59:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3341,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2666:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3338,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2666:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3340,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2674:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2666:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3345,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2707:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3342,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3344,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2707:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3347,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2748:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2782:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3348,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3350,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2787:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2782:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2820:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2853:29:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2656:232:12"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2956:0:12"
            },
            "scope": 3469,
            "src": "2645:441:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3399,
              "nodeType": "Block",
              "src": "3341:194:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3359:10:12",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 3384,
                          "name": "isSettled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "3360:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4821,
                      "src": "3351:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3387,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3388,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "3380:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3389,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "3392:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3380:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3391,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:17:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3393,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "3429:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3392,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "3412:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3412:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3395,
                  "nodeType": "EmitStatement",
                  "src": "3407:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3396,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "3445:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3398,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:17:12"
                }
              ]
            },
            "documentation": "@dev called only by our oracle hub when a new price is available provided by our oracle.\n @param price lastPrice provided by the oracle.",
            "id": 3400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3381,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3380,
                  "name": "onlyOracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3447,
                  "src": "3327:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3327:13:12"
              }
            ],
            "name": "oracleCallBack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3378,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "3305:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3304:15:12"
            },
            "returnParameters": {
              "id": 3382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3341:0:12"
            },
            "scope": 3469,
            "src": "3281:254:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "3942:276:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3408,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3402,
                            "src": "3973:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3409,
                            "name": "PRICE_FLOOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2563,
                            "src": "3982:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3973:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3411,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3402,
                            "src": "3997:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3412,
                            "name": "PRICE_CAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2561,
                            "src": "4006:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3997:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3973:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4029:50:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        },
                        "value": "arbitration price must be within contract bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        }
                      ],
                      "id": 3407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "3952:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3952:137:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:137:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3418,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "4099:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3419,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "4111:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4099:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3421,
                  "nodeType": "ExpressionStatement",
                  "src": "4099:17:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3423,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "4148:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3422,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "4131:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3425,
                  "nodeType": "EmitStatement",
                  "src": "4126:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3427,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "4179:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3426,
                      "name": "settleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2926,
                      "src": "4164:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3429,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:21:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3430,
                      "name": "isSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "4195:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4207:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4195:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:16:12"
                }
              ]
            },
            "documentation": "@dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n if a dispute arises that we believe is best resolved by early settlement.\n @param price settlement price",
            "id": 3435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3405,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3404,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "3932:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3932:9:12"
              }
            ],
            "name": "arbitrateSettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3402,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3435,
                  "src": "3910:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3909:15:12"
            },
            "returnParameters": {
              "id": 3406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3942:0:12"
            },
            "scope": 3469,
            "src": "3881:337:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3446,
              "nodeType": "Block",
              "src": "4301:104:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4818,
                            "src": "4319:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4319:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3440,
                          "name": "ORACLE_HUB_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3333,
                          "src": "4333:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4319:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792063616c6c61626c6520627920746865206f7261636c6520687562",
                        "id": 3442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4353:33:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        },
                        "value": "only callable by the oracle hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        }
                      ],
                      "id": 3437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "4311:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3444,
                  "nodeType": "ExpressionStatement",
                  "src": "4311:76:12"
                },
                {
                  "id": 3445,
                  "nodeType": "PlaceholderStatement",
                  "src": "4397:1:12"
                }
              ]
            },
            "documentation": "@dev allows calls only from the oracle hub.",
            "id": 3447,
            "name": "onlyOracleHub",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4298:2:12"
            },
            "src": "4276:129:12",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3467,
              "nodeType": "Block",
              "src": "4576:184:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3455,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3449,
                          "src": "4607:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4635:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4627:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4627:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4607:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c2061646472657373",
                        "id": 3460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:45:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        },
                        "value": "cannot set oracleHubAddress to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        }
                      ],
                      "id": 3454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "4586:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4586:120:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3462,
                  "nodeType": "ExpressionStatement",
                  "src": "4586:120:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3463,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "4716:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3464,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "4737:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4716:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3466,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:37:12"
                }
              ]
            },
            "documentation": "@dev allows for the owner of the contract to change the oracle hub address if needed",
            "id": 3468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3452,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3451,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "4566:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4566:9:12"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "4533:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4532:26:12"
            },
            "returnParameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4576:0:12"
            },
            "scope": 3469,
            "src": "4504:256:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3470,
        "src": "818:3944:12"
      }
    ],
    "src": "608:4155:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol",
    "exportedSymbols": {
      "MarketContractMPX": [
        3469
      ]
    },
    "id": 3470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3328,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:12"
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3329,
        "nodeType": "ImportDirective",
        "scope": 3470,
        "sourceUnit": 2940,
        "src": "632:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3330,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "848:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$2939",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3331,
            "nodeType": "InheritanceSpecifier",
            "src": "848:14:12"
          }
        ],
        "contractDependencies": [
          2939,
          4086
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3469,
        "linearizedBaseContracts": [
          3469,
          2939,
          4086
        ],
        "name": "MarketContractMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3333,
            "name": "ORACLE_HUB_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "869:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3332,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3335,
            "name": "ORACLE_URL",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "908:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3334,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3337,
            "name": "ORACLE_STATISTIC",
            "nodeType": "VariableDeclaration",
            "scope": 3469,
            "src": "938:30:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3336,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "938:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3375,
              "nodeType": "Block",
              "src": "2956:130:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3363,
                      "name": "ORACLE_URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3335,
                      "src": "2966:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3364,
                      "name": "oracleURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3353,
                      "src": "2979:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2966:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3366,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:22:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3367,
                      "name": "ORACLE_STATISTIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3337,
                      "src": "2998:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3368,
                      "name": "oracleStatistic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "3017:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2998:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3371,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "3042:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3372,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3347,
                      "src": "3063:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3042:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3374,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:37:12"
                }
              ]
            },
            "documentation": "@param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param baseAddresses array of 2 addresses needed for our contract including:\n     ownerAddress                    address of the owner of these contracts.\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n     collateralPoolAddress           address of our collateral pool contract\n @param oracleHubAddress     address of our oracle hub providing the callbacks\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3358,
                    "name": "contractNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3341,
                    "src": "2911:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                      "typeString": "bytes32[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3359,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3345,
                    "src": "2926:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3360,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3351,
                    "src": "2941:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                      "typeString": "uint256[7] memory"
                    }
                  }
                ],
                "id": 3361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3357,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2939,
                  "src": "2896:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$2939_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2896:59:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3341,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2666:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3338,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2666:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3340,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2674:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2666:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3345,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2707:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3342,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3344,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2707:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3347,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2748:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2782:28:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3348,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3350,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2787:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2782:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2820:23:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2853:29:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2656:232:12"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2956:0:12"
            },
            "scope": 3469,
            "src": "2645:441:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3399,
              "nodeType": "Block",
              "src": "3341:194:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3359:10:12",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 3384,
                          "name": "isSettled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "3360:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4821,
                      "src": "3351:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3387,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3388,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "3380:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3389,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "3392:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3380:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3391,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:17:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3393,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "3429:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3392,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "3412:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3412:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3395,
                  "nodeType": "EmitStatement",
                  "src": "3407:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3396,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "3445:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3398,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:17:12"
                }
              ]
            },
            "documentation": "@dev called only by our oracle hub when a new price is available provided by our oracle.\n @param price lastPrice provided by the oracle.",
            "id": 3400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3381,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3380,
                  "name": "onlyOracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3447,
                  "src": "3327:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3327:13:12"
              }
            ],
            "name": "oracleCallBack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3378,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3400,
                  "src": "3305:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3304:15:12"
            },
            "returnParameters": {
              "id": 3382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3341:0:12"
            },
            "scope": 3469,
            "src": "3281:254:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "3942:276:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3408,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3402,
                            "src": "3973:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3409,
                            "name": "PRICE_FLOOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2563,
                            "src": "3982:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3973:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3411,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3402,
                            "src": "3997:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3412,
                            "name": "PRICE_CAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2561,
                            "src": "4006:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3997:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3973:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4029:50:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        },
                        "value": "arbitration price must be within contract bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        }
                      ],
                      "id": 3407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "3952:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3952:137:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:137:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3418,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "4099:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3419,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3402,
                      "src": "4111:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4099:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3421,
                  "nodeType": "ExpressionStatement",
                  "src": "4099:17:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3423,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "4148:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3422,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2595,
                      "src": "4131:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3425,
                  "nodeType": "EmitStatement",
                  "src": "4126:28:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3427,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "4179:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3426,
                      "name": "settleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2926,
                      "src": "4164:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3429,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:21:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3430,
                      "name": "isSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "4195:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4207:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4195:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:16:12"
                }
              ]
            },
            "documentation": "@dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n if a dispute arises that we believe is best resolved by early settlement.\n @param price settlement price",
            "id": 3435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3405,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3404,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "3932:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3932:9:12"
              }
            ],
            "name": "arbitrateSettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3402,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3435,
                  "src": "3910:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3909:15:12"
            },
            "returnParameters": {
              "id": 3406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3942:0:12"
            },
            "scope": 3469,
            "src": "3881:337:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3446,
              "nodeType": "Block",
              "src": "4301:104:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4818,
                            "src": "4319:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4319:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3440,
                          "name": "ORACLE_HUB_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3333,
                          "src": "4333:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4319:32:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792063616c6c61626c6520627920746865206f7261636c6520687562",
                        "id": 3442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4353:33:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        },
                        "value": "only callable by the oracle hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        }
                      ],
                      "id": 3437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "4311:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3444,
                  "nodeType": "ExpressionStatement",
                  "src": "4311:76:12"
                },
                {
                  "id": 3445,
                  "nodeType": "PlaceholderStatement",
                  "src": "4397:1:12"
                }
              ]
            },
            "documentation": "@dev allows calls only from the oracle hub.",
            "id": 3447,
            "name": "onlyOracleHub",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4298:2:12"
            },
            "src": "4276:129:12",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3467,
              "nodeType": "Block",
              "src": "4576:184:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3455,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3449,
                          "src": "4607:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4635:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4627:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4627:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4607:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c2061646472657373",
                        "id": 3460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:45:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        },
                        "value": "cannot set oracleHubAddress to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        }
                      ],
                      "id": 3454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "4586:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4586:120:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3462,
                  "nodeType": "ExpressionStatement",
                  "src": "4586:120:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3463,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "4716:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3464,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3449,
                      "src": "4737:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4716:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3466,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:37:12"
                }
              ]
            },
            "documentation": "@dev allows for the owner of the contract to change the oracle hub address if needed",
            "id": 3468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3452,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3451,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "4566:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4566:9:12"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "4533:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4532:26:12"
            },
            "returnParameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4576:0:12"
            },
            "scope": 3469,
            "src": "4504:256:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3470,
        "src": "818:3944:12"
      }
    ],
    "src": "608:4155:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-19T06:22:48.627Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Phil Elsasser <phil@marketprotocol.io>",
    "methods": {
      "arbitrateSettlement(uint256)": {
        "details": "allows us to arbitrate a settlement price by updating the settlement value, and resetting the delay for funds to be released. Could also be used to allow us to force a contract into early settlement if a dispute arises that we believe is best resolved by early settlement.",
        "params": {
          "price": "settlement price"
        }
      },
      "constructor": {
        "params": {
          "baseAddresses": "array of 2 addresses needed for our contract including:     ownerAddress                    address of the owner of these contracts.     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing     collateralPoolAddress           address of our collateral pool contract",
          "contractNames": "bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token",
          "contractSpecs": "array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement",
          "oracleHubAddress": "address of our oracle hub providing the callbacks",
          "oracleStatistic": "statistic type (lastPrice, vwap, etc)",
          "oracleURL": "url of data"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mintPositionTokens(uint256,address)": {
        "params": {
          "minter": "address of minter to receive tokens",
          "qtyToMint": "qty in base units of how many short and long tokens to mint"
        }
      },
      "oracleCallBack(uint256)": {
        "details": "called only by our oracle hub when a new price is available provided by our oracle.",
        "params": {
          "price": "lastPrice provided by the oracle."
        }
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "redeemLongToken(uint256,address)": {
        "params": {
          "qtyToRedeem": "qty in base units of how many tokens to redeem",
          "redeemer": "address of person redeeming tokens"
        }
      },
      "redeemShortToken(uint256,address)": {
        "params": {
          "qtyToRedeem": "qty in base units of how many tokens to redeem",
          "redeemer": "address of person redeeming tokens"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setOracleHubAddress(address)": {
        "details": "allows for the owner of the contract to change the oracle hub address if needed"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "MarketContractMPX - a MarketContract designed to be used with our internal oracle service"
  },
  "userdoc": {
    "methods": {
      "isPostSettlementDelay()": {
        "notice": "checks to see if a contract is settled, and that the settlement delay has passed"
      },
      "mintPositionTokens(uint256,address)": {
        "notice": "called only by our collateral pool to create long and short position tokens"
      },
      "redeemLongToken(uint256,address)": {
        "notice": "called only by our collateral pool to redeem long position tokens"
      },
      "redeemShortToken(uint256,address)": {
        "notice": "called only by our collateral pool to redeem short position tokens"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}