{
  "contractName": "MinterBridge",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "marketContractProxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketContractProxyAddress",
          "type": "address"
        }
      ],
      "name": "setMarketContractProxyAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_0xBridgeProxyAddress",
          "type": "address"
        }
      ],
      "name": "set0xBridgeProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "bridgeData",
          "type": "bytes"
        }
      ],
      "name": "bridgeTransferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_0xBridgeProxyAddress\",\"type\":\"address\"}],\"name\":\"set0xBridgeProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketContractProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MARKET_CONTRACT_PROXY_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketContractProxyAddress\",\"type\":\"address\"}],\"name\":\"setMarketContractProxyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ERC20_BRIDGE_PROXY_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"bridgeData\",\"type\":\"bytes\"}],\"name\":\"bridgeTransferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeTransferFrom(address,address,address,uint256,bytes)\":{\"details\":\"can only be called if market contract proxy address is set.\",\"params\":{\"amount\":\"Amount of asset to transfer.\",\"bridgeData\":\"Arbitrary asset data needed by the bridge contract.\",\"from\":\"Address to transfer asset from.\",\"to\":\"Address to transfer asset to.\",\"tokenAddress\":\"in the standard 0x implementation this is the transferred token. In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform the MinterBridge of the latest perpetual token.\"},\"return\":\"success The magic bytes `0x37708e9b` if successful.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"set0xBridgeProxy(address)\":{\"details\":\"can only be called from contract owner address\",\"params\":{\"_0xBridgeProxyAddress\":\"0x minter bridge proxy address\"}},\"setMarketContractProxyAddress(address)\":{\"details\":\"can only be called from contract owner address\",\"params\":{\"_marketContractProxyAddress\":\"market contract address\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"bridgeTransferFrom(address,address,address,uint256,bytes)\":{\"notice\":\"Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set0xBridgeProxy(address)\":{\"notice\":\"set 0x minter bridge proxy address\"},\"setMarketContractProxyAddress(address)\":{\"notice\":\"set market contract proxy address\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MinterBridge.sol\":\"MinterBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/DSProxy.sol\":{\"keccak256\":\"0xcebb269237eefdd2e6dece758451577bb3bb67c6781da2eb2c83237bb10d355a\",\"urls\":[\"bzzr://bea13b1a3f20b6f5ae7f5b2ac151abb36bfa54726c7e95987cdbba16b9520a76\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MarketContractProxy.sol\":{\"keccak256\":\"0xfe55d2b0d9c0f91dbb18664f5d48c7f70d5dbdd9ef605adedd386bbdf2796b2a\",\"urls\":[\"bzzr://1a9b888bf239311259b8ef1e8ce2007a8496fc27dca1e9be9ac0a9362feb22b7\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MinterBridge.sol\":{\"keccak256\":\"0x49ede0d2b5e9781d17c9aca23d17ca683f65bea8c98996820f97e83bbde1ac7c\",\"urls\":[\"bzzr://8276011d6099486b521a1a9a8175c2ba18f1c6ce0873ea22e73c5ee5627cc0a2\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/MathLib.sol\":{\"keccak256\":\"0xbae297ccc539c1eb18e87a946380830d6fdfaf25a2cc2c10112900fc1541103c\",\"urls\":[\"bzzr://003d62cac550255758633d34a9f1df0b0669616c6d32e59923805fb8d512daa5\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/StringLib.sol\":{\"keccak256\":\"0xfe9df18e4239bd30aa3a257a7cf15665547ec0a47bd5ec05566ef0efe390b551\",\"urls\":[\"bzzr://763e42c56f8bbd8d091c17c754e1ab28e8d439d797827db9589f0a9fbf6a814b\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketCollateralPool.sol\":{\"keccak256\":\"0x2ef32393b2e89d746089cd07186d7981ba2a704e3b53b60f47df349af22fb6e3\",\"urls\":[\"bzzr://cddf3ec46bc86ce0c502b21c799c7fe63114176e00fbbb3aaa65264bd3fc618c\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContract.sol\":{\"keccak256\":\"0x1c02623d1a1bf39f8f7963f83502467050ae2e26937905726be67871611da3a1\",\"urls\":[\"bzzr://d96f210be6bdc29adf4ca117141ac82477db065e092188d11c39de22a3797388\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketContractRegistryInterface.sol\":{\"keccak256\":\"0xb0259d3f0dbf7f52df2274f66c01563f7ae3d3bdacc018fede764b4a78bc1dd9\",\"urls\":[\"bzzr://db91f063cb13da449814f8d7d990039b51cdef45110e735d7bebf116cf963735\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol\":{\"keccak256\":\"0x68f78580f41fc42c79712ec65e4d360213ef4fc548cc45213d8ea47b0c9385fc\",\"urls\":[\"bzzr://240e09683b42deaefe8d2355384c2367be7829bd258a890131d9471401b630e6\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol\":{\"keccak256\":\"0xa096ba856d05c91f7ce823b76d9c819a64ea3c5e4d57b66ac005b763d5985e75\",\"urls\":[\"bzzr://57733cd70cc7b2ebc6c9ceb665c24c1b349b40d73b454eba6ab810243f0464fe\"]},\"/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/tokens/PositionToken.sol\":{\"keccak256\":\"0xb2e1e7399d1fae3b246a2c519edf96dda398c0f6ad1eaedd5f8ed719decd7f9d\",\"urls\":[\"bzzr://764c8a160650bcaed27e1266922c0283b5181427834b9ccb14e26b39e352ba3d\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36110ed806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b146101ec578063a1d6a4a31461020e578063a95f84b914610252578063c2df82e61461029c578063f2fde38b146103d1576100bb565b8063090dc1cc146100c05780632e99f94e1461010457806368b43fbb1461014e578063715018a6146101985780638da5cb5b146101a2575b600080fd5b610102600480360360208110156100d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b005b61010c61046c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610156610492565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a06104b8565b005b6101aa61058a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f46105b3565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060a565b005b61025a6106c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d600480360360a08110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293905050506106ea565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3e565b005b61041d6105b3565b151561042857600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c06105b3565b15156104cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106126105b3565b151561061d57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156107b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d61726b6574436f6e747261637450726f7879206e6f7420736574000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e76616c69642063616c6c657200000000000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614151561093c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6261642070726f7879206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bb7756040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156109c257600080fd5b505afa1580156109d6573d6000803e3d6000fd5b505050506040513d60208110156109ec57600080fd5b810190808051906020019092919050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334931b4b876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610a9057600080fd5b505afa158015610aa4573d6000803e3d6000fd5b505050506040513d6020811015610aba57600080fd5b81019080805190602001909291905050509050610afa8830838573ffffffffffffffffffffffffffffffffffffffff16610d5d909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b505050506040513d6020811015610be957600080fd5b810190808051906020019092919050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d161ee787898b6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610cf457600080fd5b505af1158015610d08573d6000803e3d6000fd5b5050505063dc1600f37c010000000000000000000000000000000000000000000000000000000002925050509695505050505050565b610d466105b3565b1515610d5157600080fd5b610d5a81610e7f565b50565b610e79848573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f79565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ebb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f988273ffffffffffffffffffffffffffffffffffffffff166110ae565b1515610fa357600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083101515610ff45780518252602082019150602081019050602083039250610fcf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611056576040519150601f19603f3d011682016040523d82523d6000602084013e61105b565b606091505b509150915081151561106c57600080fd5b6000815111156110a85780806020019051602081101561108b57600080fd5b810190808051906020019092919050505015156110a757600080fd5b5b50505050565b600080823b90506000811191505091905056fea165627a7a72305820bffba8e7a216b5ecadc634142b19316fef2b2d446077d2e8cb120724791549900029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b146101ec578063a1d6a4a31461020e578063a95f84b914610252578063c2df82e61461029c578063f2fde38b146103d1576100bb565b8063090dc1cc146100c05780632e99f94e1461010457806368b43fbb1461014e578063715018a6146101985780638da5cb5b146101a2575b600080fd5b610102600480360360208110156100d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b005b61010c61046c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610156610492565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a06104b8565b005b6101aa61058a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f46105b3565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060a565b005b61025a6106c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d600480360360a08110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293905050506106ea565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3e565b005b61041d6105b3565b151561042857600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c06105b3565b15156104cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106126105b3565b151561061d57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156107b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d61726b6574436f6e747261637450726f7879206e6f7420736574000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e76616c69642063616c6c657200000000000000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614151561093c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6261642070726f7879206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bb7756040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156109c257600080fd5b505afa1580156109d6573d6000803e3d6000fd5b505050506040513d60208110156109ec57600080fd5b810190808051906020019092919050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334931b4b876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610a9057600080fd5b505afa158015610aa4573d6000803e3d6000fd5b505050506040513d6020811015610aba57600080fd5b81019080805190602001909291905050509050610afa8830838573ffffffffffffffffffffffffffffffffffffffff16610d5d909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b505050506040513d6020811015610be957600080fd5b810190808051906020019092919050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d161ee787898b6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610cf457600080fd5b505af1158015610d08573d6000803e3d6000fd5b5050505063dc1600f37c010000000000000000000000000000000000000000000000000000000002925050509695505050505050565b610d466105b3565b1515610d5157600080fd5b610d5a81610e7f565b50565b610e79848573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f79565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ebb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f988273ffffffffffffffffffffffffffffffffffffffff166110ae565b1515610fa357600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083101515610ff45780518252602082019150602081019050602083039250610fcf565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611056576040519150601f19603f3d011682016040523d82523d6000602084013e61105b565b606091505b509150915081151561106c57600080fd5b6000815111156110a85780806020019051602081101561108b57600080fd5b810190808051906020019092919050505015156110a757600080fd5b5b50505050565b600080823b90506000811191505091905056fea165627a7a72305820bffba8e7a216b5ecadc634142b19316fef2b2d446077d2e8cb120724791549900029",
  "sourceMap": "455:3558:3:-;;;524:10:21;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;455:3558:3;;;;;;",
  "deployedSourceMap": "455:3558:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:3558:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1987:141:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;581:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;740:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1423:137:21;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1518:271:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1518:271:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;790:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2836:1175;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2836:1175:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2836:1175:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2836:1175:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2836:1175:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1731:107:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;1987:141:3;863:9:21;:7;:9::i;:::-;855:18;;;;;;;;2100:21:3;2071:26;;:50;;;;;;;;;;;;;;;;;;1987:141;:::o;581:46::-;;;;;;;;;;;;;:::o;740:44::-;;;;;;;;;;;;;:::o;1423:137:21:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1518:271:3:-;863:9:21;:7;:9::i;:::-;855:18;;;;;;;;1673:27:3;1641:29;;:59;;;;;;;;;;;;;;;;;;1752:29;;;;;;;;;;;1710:19;;:72;;;;;;;;;;;;;;;;;;1518:271;:::o;790:41::-;;;;;;;;;;;;;:::o;2836:1175::-;3066:14;1249:1;1208:43;;:29;;;;;;;;;;;:43;;;;1187:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:26;;;;;;;;;;;968:40;;:10;:40;;;960:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:29;;;;;;;;;;;3379:45;;:12;:45;;;3371:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3496:21;3526:19;;;;;;;;;;;:44;;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3526:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3526:46:3;;;;;;;;;;;;;;;;3496:77;;3584:21;3608:19;;;;;;;;;;;:47;;;3656:6;3608:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3608:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3608:55:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3608:55:3;;;;;;;;;;;;;;;;3584:79;;3674:71;3707:4;3721;3728:16;3674:15;:32;;;;:71;;;;;;:::i;:::-;3755:15;:23;;;3779:29;;;;;;;;;;;3810:16;3755:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3755:72:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3755:72:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3755:72:3;;;;;;;;;;;;;;;;;3916:19;;;;;;;;;;;:38;;;3955:6;3963:2;3967:4;3916:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3916:56:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3916:56:3;;;;724:10;3990:14;;3983:21;;;;2836:1175;;;;;;;;:::o;1731:107:21:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;842:202:25:-;942:95;961:5;991;:18;;;:27;;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;968:68:25;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;968:68:25;942:18;:95::i;:::-;842:202;;;;:::o;1982:183:21:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;2487:869:25:-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:25;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:25;;;;3213:7;3205:16;;;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:25;;;;;;;;;;;;;;;;3300:39;;;;;;;;3232:118;2487:869;;;;:::o;463:616:26:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o",
  "source": "pragma solidity 0.5.2;\n\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\nimport '../libraries/MathLib.sol';\nimport '../marketprotocol/MarketCollateralPool.sol';\nimport '../marketprotocol/mpx/MarketContractMPX.sol';\nimport '../marketprotocol/tokens/PositionToken.sol';\n\nimport './MarketContractProxy.sol';\n\n\ncontract MinterBridge is Ownable {\n    using MathLib for uint;\n    using MathLib for int;\n    using SafeERC20 for ERC20;\n\n    MarketContractProxy public marketContractProxy;\n\n    ///@dev Result of a successful bridge call.\n    bytes4 internal constant BRIDGE_SUCCESS = 0xdc1600f3;\n    address public MARKET_CONTRACT_PROXY_ADDRESS;\n    address public ERC20_BRIDGE_PROXY_ADDRESS;\n\n    /**\n     * @notice check that called is 0x minter bridge proxy address\n     */\n    modifier only0xBridgeProxy() {\n        require(msg.sender == ERC20_BRIDGE_PROXY_ADDRESS, 'invalid caller');\n        _;\n    }\n    /**\n     * @notice check that market contract proxy address is initialized\n     */\n    modifier onlyIfSetMarketContractProxy() {\n        require(\n            MARKET_CONTRACT_PROXY_ADDRESS != address(0),\n            'MarketContractProxy not set'\n        );\n        _;\n    }\n\n    /**\n     * @notice set market contract proxy address\n     * @dev can only be called from contract owner address\n     * @param _marketContractProxyAddress market contract address\n     */\n    function setMarketContractProxyAddress(address _marketContractProxyAddress)\n        public\n        onlyOwner\n    {\n        MARKET_CONTRACT_PROXY_ADDRESS = _marketContractProxyAddress;\n        marketContractProxy = MarketContractProxy(MARKET_CONTRACT_PROXY_ADDRESS);\n    }\n\n    /**\n     * @notice set 0x minter bridge proxy address\n     * @dev can only be called from contract owner address\n     * @param _0xBridgeProxyAddress 0x minter bridge proxy address\n     */\n    function set0xBridgeProxy(address _0xBridgeProxyAddress) public onlyOwner {\n        ERC20_BRIDGE_PROXY_ADDRESS = _0xBridgeProxyAddress;\n    }\n\n    /**\n     * @notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n     * @dev can only be called if market contract proxy address is set.\n     * @param tokenAddress in the standard 0x implementation this is the transferred token.\n     * In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\n     * the MinterBridge of the latest perpetual token.\n     * @param from Address to transfer asset from.\n     * @param to Address to transfer asset to.\n     * @param amount Amount of asset to transfer.\n     * @param bridgeData Arbitrary asset data needed by the bridge contract.\n     * @return success The magic bytes `0x37708e9b` if successful.\n     */\n    function bridgeTransferFrom(\n        address tokenAddress,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata bridgeData\n    ) external onlyIfSetMarketContractProxy only0xBridgeProxy returns (bytes4 success) {\n        // The proxy acts as the taker token to make 0x think that the appropriate amount\n        // was transferred and accept the trade as passing. Under the hood the  marketContractProxy\n        // has minted long and short tokens and sent them to the the investor and miner.\n        require(tokenAddress == MARKET_CONTRACT_PROXY_ADDRESS, 'bad proxy address');\n\n        // (imBTC) sent from the miner\n        ERC20 collateralToken = ERC20(marketContractProxy.COLLATERAL_TOKEN_ADDRESS());\n\n        uint neededCollateral = marketContractProxy.calculateRequiredCollateral(amount);\n\n        collateralToken.safeTransferFrom(from, address(this), neededCollateral);\n        collateralToken.approve(MARKET_CONTRACT_PROXY_ADDRESS, neededCollateral);\n\n        // to: long & taker (investor)\n        // from: short & maker (miner)\n        marketContractProxy.mintPositionTokens(amount, to, from);\n\n        return BRIDGE_SUCCESS;\n    }\n}\n",
  "sourcePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MinterBridge.sol",
  "ast": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MinterBridge.sol",
    "exportedSymbols": {
      "MinterBridge": [
        1634
      ]
    },
    "id": 1635,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1481,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1482,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4087,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 1483,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4785,
        "src": "88:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1484,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4470,
        "src": "156:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 1485,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 1954,
        "src": "221:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketCollateralPool.sol",
        "file": "../marketprotocol/MarketCollateralPool.sol",
        "id": 1486,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 2544,
        "src": "256:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "../marketprotocol/mpx/MarketContractMPX.sol",
        "id": 1487,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 3470,
        "src": "309:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/tokens/PositionToken.sol",
        "file": "../marketprotocol/tokens/PositionToken.sol",
        "id": 1488,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 3722,
        "src": "363:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MarketContractProxy.sol",
        "file": "./MarketContractProxy.sol",
        "id": 1489,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 1480,
        "src": "417:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1490,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4086,
              "src": "480:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4086",
                "typeString": "contract Ownable"
              }
            },
            "id": 1491,
            "nodeType": "InheritanceSpecifier",
            "src": "480:7:3"
          }
        ],
        "contractDependencies": [
          4086
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1634,
        "linearizedBaseContracts": [
          1634,
          4086
        ],
        "name": "MinterBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1494,
            "libraryName": {
              "contractScope": null,
              "id": 1492,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1953,
              "src": "500:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1953",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "494:23:3",
            "typeName": {
              "id": 1493,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "512:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1497,
            "libraryName": {
              "contractScope": null,
              "id": 1495,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1953,
              "src": "528:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1953",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "522:22:3",
            "typeName": {
              "id": 1496,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "540:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 1500,
            "libraryName": {
              "contractScope": null,
              "id": 1498,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4784,
              "src": "555:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4784",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "549:26:3",
            "typeName": {
              "contractScope": null,
              "id": 1499,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4469,
              "src": "569:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4469",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1502,
            "name": "marketContractProxy",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "581:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
              "typeString": "contract MarketContractProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 1501,
              "name": "MarketContractProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1479,
              "src": "581:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                "typeString": "contract MarketContractProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1505,
            "name": "BRIDGE_SUCCESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "682:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1503,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "682:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786463313630306633",
              "id": 1504,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "724:10:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3692429555_by_1",
                "typeString": "int_const 3692429555"
              },
              "value": "0xdc1600f3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1507,
            "name": "MARKET_CONTRACT_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "740:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1506,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "740:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1509,
            "name": "ERC20_BRIDGE_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "790:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1508,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "950:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1512,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4818,
                            "src": "968:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "968:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1514,
                          "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1509,
                          "src": "982:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "968:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c69642063616c6c6572",
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:16:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        },
                        "value": "invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        }
                      ],
                      "id": 1511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "960:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "960:67:3"
                },
                {
                  "id": 1519,
                  "nodeType": "PlaceholderStatement",
                  "src": "1037:1:3"
                }
              ]
            },
            "documentation": "@notice check that called is 0x minter bridge proxy address",
            "id": 1521,
            "name": "only0xBridgeProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:3"
            },
            "src": "921:124:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1533,
              "nodeType": "Block",
              "src": "1177:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1524,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "1208:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1249:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1241:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1208:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574436f6e747261637450726f7879206e6f7420736574",
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1265:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        },
                        "value": "MarketContractProxy not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        }
                      ],
                      "id": 1523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "1187:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:117:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:117:3"
                },
                {
                  "id": 1532,
                  "nodeType": "PlaceholderStatement",
                  "src": "1314:1:3"
                }
              ]
            },
            "documentation": "@notice check that market contract proxy address is initialized",
            "id": 1534,
            "name": "onlyIfSetMarketContractProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:2:3"
            },
            "src": "1137:185:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1551,
              "nodeType": "Block",
              "src": "1631:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1541,
                      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "1641:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1542,
                      "name": "_marketContractProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1536,
                      "src": "1673:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1641:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1545,
                      "name": "marketContractProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1502,
                      "src": "1710:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1547,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "1752:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1546,
                        "name": "MarketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1732:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarketContractProxy_$1479_$",
                          "typeString": "type(contract MarketContractProxy)"
                        }
                      },
                      "id": 1548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1732:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "src": "1710:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                      "typeString": "contract MarketContractProxy"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:72:3"
                }
              ]
            },
            "documentation": "@notice set market contract proxy address\n@dev can only be called from contract owner address\n@param _marketContractProxyAddress market contract address",
            "id": 1552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1539,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1538,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "1617:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1617:9:3"
              }
            ],
            "name": "setMarketContractProxyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1536,
                  "name": "_marketContractProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1552,
                  "src": "1557:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1556:37:3"
            },
            "returnParameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1631:0:3"
            },
            "scope": 1634,
            "src": "1518:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "2061:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1559,
                      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "2071:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "_0xBridgeProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2100:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2071:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:50:3"
                }
              ]
            },
            "documentation": "@notice set 0x minter bridge proxy address\n@dev can only be called from contract owner address\n@param _0xBridgeProxyAddress 0x minter bridge proxy address",
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1557,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1556,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "2051:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2051:9:3"
              }
            ],
            "name": "set0xBridgeProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "name": "_0xBridgeProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2013:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2012:31:3"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:3"
            },
            "scope": 1634,
            "src": "1987:141:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1632,
              "nodeType": "Block",
              "src": "3082:929:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1584,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "3379:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1585,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "3395:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3379:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6261642070726f78792061646472657373",
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3426:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        },
                        "value": "bad proxy address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        }
                      ],
                      "id": 1583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "3371:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:75:3"
                },
                {
                  "assignments": [
                    1591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1591,
                      "name": "collateralToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1632,
                      "src": "3496:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$4469",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1590,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4469,
                        "src": "3496:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1597,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1593,
                            "name": "marketContractProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1502,
                            "src": "3526:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                              "typeString": "contract MarketContractProxy"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COLLATERAL_TOKEN_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 480,
                          "src": "3526:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3526:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1592,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4469,
                      "src": "3520:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$4469_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3520:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$4469",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3496:77:3"
                },
                {
                  "assignments": [
                    1599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1599,
                      "name": "neededCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 1632,
                      "src": "3584:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1598,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3584:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1602,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3656:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1600,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "3608:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRequiredCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 897,
                      "src": "3608:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3584:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1608,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3707:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1610,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4877,
                            "src": "3721:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MinterBridge_$1634",
                              "typeString": "contract MinterBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MinterBridge_$1634",
                              "typeString": "contract MinterBridge"
                            }
                          ],
                          "id": 1609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3713:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3713:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "3728:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1605,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "3674:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4627,
                      "src": "3674:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4569_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4569_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1614,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1618,
                        "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "3779:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "3810:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1615,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "3755:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4181,
                      "src": "3755:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3755:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3955:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "3963:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1627,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3967:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "3916:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintPositionTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1423,
                      "src": "3916:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3916:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "3916:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1630,
                    "name": "BRIDGE_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1505,
                    "src": "3990:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1582,
                  "id": 1631,
                  "nodeType": "Return",
                  "src": "3983:21:3"
                }
              ]
            },
            "documentation": "@notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n@dev can only be called if market contract proxy address is set.\n@param tokenAddress in the standard 0x implementation this is the transferred token.\nIn HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\nthe MinterBridge of the latest perpetual token.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer.\n@param bridgeData Arbitrary asset data needed by the bridge contract.\n@return success The magic bytes `0x37708e9b` if successful.",
            "id": 1633,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1577,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1576,
                  "name": "onlyIfSetMarketContractProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1534,
                  "src": "3010:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3010:28:3"
              },
              {
                "arguments": null,
                "id": 1579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1578,
                  "name": "only0xBridgeProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1521,
                  "src": "3039:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3039:17:3"
              }
            ],
            "name": "bridgeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2873:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2903:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2925:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2945:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "name": "bridgeData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2969:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2863:137:3"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1581,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "3066:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3065:16:3"
            },
            "scope": 1634,
            "src": "2836:1175:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1635,
        "src": "455:3558:3"
      }
    ],
    "src": "0:4014:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MinterBridge.sol",
    "exportedSymbols": {
      "MinterBridge": [
        1634
      ]
    },
    "id": 1635,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1481,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1482,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4087,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 1483,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4785,
        "src": "88:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1484,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 4470,
        "src": "156:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 1485,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 1954,
        "src": "221:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/MarketCollateralPool.sol",
        "file": "../marketprotocol/MarketCollateralPool.sol",
        "id": 1486,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 2544,
        "src": "256:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "../marketprotocol/mpx/MarketContractMPX.sol",
        "id": 1487,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 3470,
        "src": "309:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/marketprotocol/tokens/PositionToken.sol",
        "file": "../marketprotocol/tokens/PositionToken.sol",
        "id": 1488,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 3722,
        "src": "363:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/HoneyLemon/dapp.honeylemon.market/contracts/honeylemon/MarketContractProxy.sol",
        "file": "./MarketContractProxy.sol",
        "id": 1489,
        "nodeType": "ImportDirective",
        "scope": 1635,
        "sourceUnit": 1480,
        "src": "417:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1490,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4086,
              "src": "480:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4086",
                "typeString": "contract Ownable"
              }
            },
            "id": 1491,
            "nodeType": "InheritanceSpecifier",
            "src": "480:7:3"
          }
        ],
        "contractDependencies": [
          4086
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1634,
        "linearizedBaseContracts": [
          1634,
          4086
        ],
        "name": "MinterBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1494,
            "libraryName": {
              "contractScope": null,
              "id": 1492,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1953,
              "src": "500:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1953",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "494:23:3",
            "typeName": {
              "id": 1493,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "512:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1497,
            "libraryName": {
              "contractScope": null,
              "id": 1495,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1953,
              "src": "528:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1953",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "522:22:3",
            "typeName": {
              "id": 1496,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "540:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 1500,
            "libraryName": {
              "contractScope": null,
              "id": 1498,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4784,
              "src": "555:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4784",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "549:26:3",
            "typeName": {
              "contractScope": null,
              "id": 1499,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4469,
              "src": "569:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4469",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1502,
            "name": "marketContractProxy",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "581:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
              "typeString": "contract MarketContractProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 1501,
              "name": "MarketContractProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1479,
              "src": "581:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                "typeString": "contract MarketContractProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1505,
            "name": "BRIDGE_SUCCESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "682:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1503,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "682:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786463313630306633",
              "id": 1504,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "724:10:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3692429555_by_1",
                "typeString": "int_const 3692429555"
              },
              "value": "0xdc1600f3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1507,
            "name": "MARKET_CONTRACT_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "740:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1506,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "740:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1509,
            "name": "ERC20_BRIDGE_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1634,
            "src": "790:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1508,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "950:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1512,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4818,
                            "src": "968:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "968:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1514,
                          "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1509,
                          "src": "982:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "968:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c69642063616c6c6572",
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:16:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        },
                        "value": "invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        }
                      ],
                      "id": 1511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "960:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1518,
                  "nodeType": "ExpressionStatement",
                  "src": "960:67:3"
                },
                {
                  "id": 1519,
                  "nodeType": "PlaceholderStatement",
                  "src": "1037:1:3"
                }
              ]
            },
            "documentation": "@notice check that called is 0x minter bridge proxy address",
            "id": 1521,
            "name": "only0xBridgeProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:3"
            },
            "src": "921:124:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1533,
              "nodeType": "Block",
              "src": "1177:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1524,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "1208:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1249:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1241:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1208:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574436f6e747261637450726f7879206e6f7420736574",
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1265:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        },
                        "value": "MarketContractProxy not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        }
                      ],
                      "id": 1523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "1187:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1187:117:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:117:3"
                },
                {
                  "id": 1532,
                  "nodeType": "PlaceholderStatement",
                  "src": "1314:1:3"
                }
              ]
            },
            "documentation": "@notice check that market contract proxy address is initialized",
            "id": 1534,
            "name": "onlyIfSetMarketContractProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:2:3"
            },
            "src": "1137:185:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1551,
              "nodeType": "Block",
              "src": "1631:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1541,
                      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "1641:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1542,
                      "name": "_marketContractProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1536,
                      "src": "1673:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1641:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1545,
                      "name": "marketContractProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1502,
                      "src": "1710:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1547,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "1752:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1546,
                        "name": "MarketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1732:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarketContractProxy_$1479_$",
                          "typeString": "type(contract MarketContractProxy)"
                        }
                      },
                      "id": 1548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1732:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "src": "1710:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                      "typeString": "contract MarketContractProxy"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:72:3"
                }
              ]
            },
            "documentation": "@notice set market contract proxy address\n@dev can only be called from contract owner address\n@param _marketContractProxyAddress market contract address",
            "id": 1552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1539,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1538,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "1617:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1617:9:3"
              }
            ],
            "name": "setMarketContractProxyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1536,
                  "name": "_marketContractProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1552,
                  "src": "1557:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1556:37:3"
            },
            "returnParameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1631:0:3"
            },
            "scope": 1634,
            "src": "1518:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "2061:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1559,
                      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "2071:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "_0xBridgeProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2100:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2071:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:50:3"
                }
              ]
            },
            "documentation": "@notice set 0x minter bridge proxy address\n@dev can only be called from contract owner address\n@param _0xBridgeProxyAddress 0x minter bridge proxy address",
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1557,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1556,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4020,
                  "src": "2051:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2051:9:3"
              }
            ],
            "name": "set0xBridgeProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "name": "_0xBridgeProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "2013:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2012:31:3"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:3"
            },
            "scope": 1634,
            "src": "1987:141:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1632,
              "nodeType": "Block",
              "src": "3082:929:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1584,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "3379:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1585,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1507,
                          "src": "3395:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3379:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6261642070726f78792061646472657373",
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3426:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        },
                        "value": "bad proxy address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        }
                      ],
                      "id": 1583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4821,
                        4822
                      ],
                      "referencedDeclaration": 4822,
                      "src": "3371:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:75:3"
                },
                {
                  "assignments": [
                    1591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1591,
                      "name": "collateralToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1632,
                      "src": "3496:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$4469",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1590,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4469,
                        "src": "3496:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1597,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1593,
                            "name": "marketContractProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1502,
                            "src": "3526:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                              "typeString": "contract MarketContractProxy"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COLLATERAL_TOKEN_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 480,
                          "src": "3526:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3526:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1592,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4469,
                      "src": "3520:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$4469_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3520:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$4469",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3496:77:3"
                },
                {
                  "assignments": [
                    1599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1599,
                      "name": "neededCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 1632,
                      "src": "3584:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1598,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3584:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1602,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3656:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1600,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "3608:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRequiredCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 897,
                      "src": "3608:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3584:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1608,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3707:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1610,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4877,
                            "src": "3721:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MinterBridge_$1634",
                              "typeString": "contract MinterBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MinterBridge_$1634",
                              "typeString": "contract MinterBridge"
                            }
                          ],
                          "id": 1609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3713:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3713:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1612,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "3728:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1605,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "3674:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4627,
                      "src": "3674:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4569_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4569_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1614,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1618,
                        "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "3779:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "3810:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1615,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "3755:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4469",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4181,
                      "src": "3755:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3755:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3955:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1570,
                        "src": "3963:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1627,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "3967:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "3916:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1479",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintPositionTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1423,
                      "src": "3916:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3916:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "3916:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1630,
                    "name": "BRIDGE_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1505,
                    "src": "3990:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1582,
                  "id": 1631,
                  "nodeType": "Return",
                  "src": "3983:21:3"
                }
              ]
            },
            "documentation": "@notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n@dev can only be called if market contract proxy address is set.\n@param tokenAddress in the standard 0x implementation this is the transferred token.\nIn HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\nthe MinterBridge of the latest perpetual token.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer.\n@param bridgeData Arbitrary asset data needed by the bridge contract.\n@return success The magic bytes `0x37708e9b` if successful.",
            "id": 1633,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1577,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1576,
                  "name": "onlyIfSetMarketContractProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1534,
                  "src": "3010:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3010:28:3"
              },
              {
                "arguments": null,
                "id": 1579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1578,
                  "name": "only0xBridgeProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1521,
                  "src": "3039:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3039:17:3"
              }
            ],
            "name": "bridgeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2873:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2903:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2925:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2945:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "name": "bridgeData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "2969:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2863:137:3"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1581,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1633,
                  "src": "3066:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3065:16:3"
            },
            "scope": 1634,
            "src": "2836:1175:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1635,
        "src": "455:3558:3"
      }
    ],
    "src": "0:4014:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDc5897581bc24957c5632ceA0AB61730d1DD9951",
      "transactionHash": "0x1bc1ed9c9740f875645220a49208e69133abb9e6fc3e074d8d8a464696b8146f"
    },
    "1337": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8BcA38296C0A019C8e0db9E158fE27625b1E252b",
      "transactionHash": "0x3817507e452c291ac4051ba3017a5440d3e8900e9e4f160ab518d409b06f6126"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-19T06:24:29.384Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "bridgeTransferFrom(address,address,address,uint256,bytes)": {
        "details": "can only be called if market contract proxy address is set.",
        "params": {
          "amount": "Amount of asset to transfer.",
          "bridgeData": "Arbitrary asset data needed by the bridge contract.",
          "from": "Address to transfer asset from.",
          "to": "Address to transfer asset to.",
          "tokenAddress": "in the standard 0x implementation this is the transferred token. In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform the MinterBridge of the latest perpetual token."
        },
        "return": "success The magic bytes `0x37708e9b` if successful."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "set0xBridgeProxy(address)": {
        "details": "can only be called from contract owner address",
        "params": {
          "_0xBridgeProxyAddress": "0x minter bridge proxy address"
        }
      },
      "setMarketContractProxyAddress(address)": {
        "details": "can only be called from contract owner address",
        "params": {
          "_marketContractProxyAddress": "market contract address"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "bridgeTransferFrom(address,address,address,uint256,bytes)": {
        "notice": "Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "set0xBridgeProxy(address)": {
        "notice": "set 0x minter bridge proxy address"
      },
      "setMarketContractProxyAddress(address)": {
        "notice": "set market contract proxy address"
      }
    }
  }
}