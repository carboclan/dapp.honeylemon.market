// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AssetProxyRegistered extends ethereum.Event {
  get params(): AssetProxyRegistered__Params {
    return new AssetProxyRegistered__Params(this);
  }
}

export class AssetProxyRegistered__Params {
  _event: AssetProxyRegistered;

  constructor(event: AssetProxyRegistered) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetProxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Cancel extends ethereum.Event {
  get params(): Cancel__Params {
    return new Cancel__Params(this);
  }
}

export class Cancel__Params {
  _event: Cancel;

  constructor(event: Cancel) {
    this._event = event;
  }

  get makerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRecipientAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get makerAssetData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get takerAssetData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get senderAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get orderHash(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class CancelUpTo extends ethereum.Event {
  get params(): CancelUpTo__Params {
    return new CancelUpTo__Params(this);
  }
}

export class CancelUpTo__Params {
  _event: CancelUpTo;

  constructor(event: CancelUpTo) {
    this._event = event;
  }

  get makerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderSenderAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderEpoch(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Fill extends ethereum.Event {
  get params(): Fill__Params {
    return new Fill__Params(this);
  }
}

export class Fill__Params {
  _event: Fill;

  constructor(event: Fill) {
    this._event = event;
  }

  get makerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRecipientAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get makerAssetData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get takerAssetData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get orderHash(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get takerAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get senderAddress(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get makerAssetFilledAmount(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this._event.parameters[13].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolFeeCollectorAddress extends ethereum.Event {
  get params(): ProtocolFeeCollectorAddress__Params {
    return new ProtocolFeeCollectorAddress__Params(this);
  }
}

export class ProtocolFeeCollectorAddress__Params {
  _event: ProtocolFeeCollectorAddress;

  constructor(event: ProtocolFeeCollectorAddress) {
    this._event = event;
  }

  get oldProtocolFeeCollector(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get updatedProtocolFeeCollector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolFeeMultiplier extends ethereum.Event {
  get params(): ProtocolFeeMultiplier__Params {
    return new ProtocolFeeMultiplier__Params(this);
  }
}

export class ProtocolFeeMultiplier__Params {
  _event: ProtocolFeeMultiplier;

  constructor(event: ProtocolFeeMultiplier) {
    this._event = event;
  }

  get oldProtocolFeeMultiplier(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get updatedProtocolFeeMultiplier(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SignatureValidatorApproval extends ethereum.Event {
  get params(): SignatureValidatorApproval__Params {
    return new SignatureValidatorApproval__Params(this);
  }
}

export class SignatureValidatorApproval__Params {
  _event: SignatureValidatorApproval;

  constructor(event: SignatureValidatorApproval) {
    this._event = event;
  }

  get signerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get validatorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isApproved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class TransactionExecution extends ethereum.Event {
  get params(): TransactionExecution__Params {
    return new TransactionExecution__Params(this);
  }
}

export class TransactionExecution__Params {
  _event: TransactionExecution;

  constructor(event: TransactionExecution) {
    this._event = event;
  }

  get transactionHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ExchangeV3__getOrderInfoResultOrderInfoStruct extends ethereum.Tuple {
  get orderStatus(): i32 {
    return this[0].toI32();
  }

  get orderHash(): Bytes {
    return this[1].toBytes();
  }

  get orderTakerAssetFilledAmount(): BigInt {
    return this[2].toBigInt();
  }
}

export class ExchangeV3__getOrderInfoInputOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class ExchangeV3__isValidOrderSignatureInputOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class ExchangeV3__isValidTransactionSignatureInputTransactionStruct extends ethereum.Tuple {
  get salt(): BigInt {
    return this[0].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[1].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[2].toBigInt();
  }

  get signerAddress(): Address {
    return this[3].toAddress();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }
}

export class ExchangeV3 extends ethereum.SmartContract {
  static bind(address: Address): ExchangeV3 {
    return new ExchangeV3("ExchangeV3", address);
  }

  EIP1271_MAGIC_VALUE(): Bytes {
    let result = super.call(
      "EIP1271_MAGIC_VALUE",
      "EIP1271_MAGIC_VALUE():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_EIP1271_MAGIC_VALUE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EIP1271_MAGIC_VALUE",
      "EIP1271_MAGIC_VALUE():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  EIP712_EXCHANGE_DOMAIN_HASH(): Bytes {
    let result = super.call(
      "EIP712_EXCHANGE_DOMAIN_HASH",
      "EIP712_EXCHANGE_DOMAIN_HASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_EIP712_EXCHANGE_DOMAIN_HASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EIP712_EXCHANGE_DOMAIN_HASH",
      "EIP712_EXCHANGE_DOMAIN_HASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowedValidators(param0: Address, param1: Address): boolean {
    let result = super.call(
      "allowedValidators",
      "allowedValidators(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_allowedValidators(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowedValidators",
      "allowedValidators(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cancelled(param0: Bytes): boolean {
    let result = super.call("cancelled", "cancelled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_cancelled(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("cancelled", "cancelled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  currentContextAddress(): Address {
    let result = super.call(
      "currentContextAddress",
      "currentContextAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_currentContextAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "currentContextAddress",
      "currentContextAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  filled(param0: Bytes): BigInt {
    let result = super.call("filled", "filled(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBigInt();
  }

  try_filled(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("filled", "filled(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssetProxy(assetProxyId: Bytes): Address {
    let result = super.call(
      "getAssetProxy",
      "getAssetProxy(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(assetProxyId)]
    );

    return result[0].toAddress();
  }

  try_getAssetProxy(assetProxyId: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAssetProxy",
      "getAssetProxy(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(assetProxyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrderInfo(
    order: ExchangeV3__getOrderInfoInputOrderStruct
  ): ExchangeV3__getOrderInfoResultOrderInfoStruct {
    let result = super.call(
      "getOrderInfo",
      "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)):((uint8,bytes32,uint256))",
      [ethereum.Value.fromTuple(order)]
    );

    return result[0].toTuple() as ExchangeV3__getOrderInfoResultOrderInfoStruct;
  }

  try_getOrderInfo(
    order: ExchangeV3__getOrderInfoInputOrderStruct
  ): ethereum.CallResult<ExchangeV3__getOrderInfoResultOrderInfoStruct> {
    let result = super.tryCall(
      "getOrderInfo",
      "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)):((uint8,bytes32,uint256))",
      [ethereum.Value.fromTuple(order)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as ExchangeV3__getOrderInfoResultOrderInfoStruct
    );
  }

  isValidHashSignature(
    hash: Bytes,
    signerAddress: Address,
    signature: Bytes
  ): boolean {
    let result = super.call(
      "isValidHashSignature",
      "isValidHashSignature(bytes32,address,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(hash),
        ethereum.Value.fromAddress(signerAddress),
        ethereum.Value.fromBytes(signature)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidHashSignature(
    hash: Bytes,
    signerAddress: Address,
    signature: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidHashSignature",
      "isValidHashSignature(bytes32,address,bytes):(bool)",
      [
        ethereum.Value.fromFixedBytes(hash),
        ethereum.Value.fromAddress(signerAddress),
        ethereum.Value.fromBytes(signature)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidOrderSignature(
    order: ExchangeV3__isValidOrderSignatureInputOrderStruct,
    signature: Bytes
  ): boolean {
    let result = super.call(
      "isValidOrderSignature",
      "isValidOrderSignature((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes):(bool)",
      [ethereum.Value.fromTuple(order), ethereum.Value.fromBytes(signature)]
    );

    return result[0].toBoolean();
  }

  try_isValidOrderSignature(
    order: ExchangeV3__isValidOrderSignatureInputOrderStruct,
    signature: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidOrderSignature",
      "isValidOrderSignature((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes):(bool)",
      [ethereum.Value.fromTuple(order), ethereum.Value.fromBytes(signature)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidTransactionSignature(
    transaction: ExchangeV3__isValidTransactionSignatureInputTransactionStruct,
    signature: Bytes
  ): boolean {
    let result = super.call(
      "isValidTransactionSignature",
      "isValidTransactionSignature((uint256,uint256,uint256,address,bytes),bytes):(bool)",
      [
        ethereum.Value.fromTuple(transaction),
        ethereum.Value.fromBytes(signature)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidTransactionSignature(
    transaction: ExchangeV3__isValidTransactionSignatureInputTransactionStruct,
    signature: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidTransactionSignature",
      "isValidTransactionSignature((uint256,uint256,uint256,address,bytes),bytes):(bool)",
      [
        ethereum.Value.fromTuple(transaction),
        ethereum.Value.fromBytes(signature)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  orderEpoch(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "orderEpoch",
      "orderEpoch(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_orderEpoch(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "orderEpoch",
      "orderEpoch(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  preSigned(param0: Bytes, param1: Address): boolean {
    let result = super.call("preSigned", "preSigned(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_preSigned(param0: Bytes, param1: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "preSigned",
      "preSigned(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  protocolFeeCollector(): Address {
    let result = super.call(
      "protocolFeeCollector",
      "protocolFeeCollector():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeCollector",
      "protocolFeeCollector():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeMultiplier(): BigInt {
    let result = super.call(
      "protocolFeeMultiplier",
      "protocolFeeMultiplier():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_protocolFeeMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeeMultiplier",
      "protocolFeeMultiplier():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transactionsExecuted(param0: Bytes): boolean {
    let result = super.call(
      "transactionsExecuted",
      "transactionsExecuted(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBoolean();
  }

  try_transactionsExecuted(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transactionsExecuted",
      "transactionsExecuted(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get chainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BatchCancelOrdersCall extends ethereum.Call {
  get inputs(): BatchCancelOrdersCall__Inputs {
    return new BatchCancelOrdersCall__Inputs(this);
  }

  get outputs(): BatchCancelOrdersCall__Outputs {
    return new BatchCancelOrdersCall__Outputs(this);
  }
}

export class BatchCancelOrdersCall__Inputs {
  _call: BatchCancelOrdersCall;

  constructor(call: BatchCancelOrdersCall) {
    this._call = call;
  }

  get orders(): Array<BatchCancelOrdersCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchCancelOrdersCallOrdersStruct
    >();
  }
}

export class BatchCancelOrdersCall__Outputs {
  _call: BatchCancelOrdersCall;

  constructor(call: BatchCancelOrdersCall) {
    this._call = call;
  }
}

export class BatchCancelOrdersCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchExecuteTransactionsCall extends ethereum.Call {
  get inputs(): BatchExecuteTransactionsCall__Inputs {
    return new BatchExecuteTransactionsCall__Inputs(this);
  }

  get outputs(): BatchExecuteTransactionsCall__Outputs {
    return new BatchExecuteTransactionsCall__Outputs(this);
  }
}

export class BatchExecuteTransactionsCall__Inputs {
  _call: BatchExecuteTransactionsCall;

  constructor(call: BatchExecuteTransactionsCall) {
    this._call = call;
  }

  get transactions(): Array<BatchExecuteTransactionsCallTransactionsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchExecuteTransactionsCallTransactionsStruct
    >();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class BatchExecuteTransactionsCall__Outputs {
  _call: BatchExecuteTransactionsCall;

  constructor(call: BatchExecuteTransactionsCall) {
    this._call = call;
  }

  get returnData(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class BatchExecuteTransactionsCallTransactionsStruct extends ethereum.Tuple {
  get salt(): BigInt {
    return this[0].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[1].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[2].toBigInt();
  }

  get signerAddress(): Address {
    return this[3].toAddress();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }
}

export class BatchFillOrKillOrdersCall extends ethereum.Call {
  get inputs(): BatchFillOrKillOrdersCall__Inputs {
    return new BatchFillOrKillOrdersCall__Inputs(this);
  }

  get outputs(): BatchFillOrKillOrdersCall__Outputs {
    return new BatchFillOrKillOrdersCall__Outputs(this);
  }
}

export class BatchFillOrKillOrdersCall__Inputs {
  _call: BatchFillOrKillOrdersCall;

  constructor(call: BatchFillOrKillOrdersCall) {
    this._call = call;
  }

  get orders(): Array<BatchFillOrKillOrdersCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchFillOrKillOrdersCallOrdersStruct
    >();
  }

  get takerAssetFillAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class BatchFillOrKillOrdersCall__Outputs {
  _call: BatchFillOrKillOrdersCall;

  constructor(call: BatchFillOrKillOrdersCall) {
    this._call = call;
  }

  get fillResults(): Array<BatchFillOrKillOrdersCallFillResultsStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      BatchFillOrKillOrdersCallFillResultsStruct
    >();
  }
}

export class BatchFillOrKillOrdersCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchFillOrKillOrdersCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchFillOrdersCall extends ethereum.Call {
  get inputs(): BatchFillOrdersCall__Inputs {
    return new BatchFillOrdersCall__Inputs(this);
  }

  get outputs(): BatchFillOrdersCall__Outputs {
    return new BatchFillOrdersCall__Outputs(this);
  }
}

export class BatchFillOrdersCall__Inputs {
  _call: BatchFillOrdersCall;

  constructor(call: BatchFillOrdersCall) {
    this._call = call;
  }

  get orders(): Array<BatchFillOrdersCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchFillOrdersCallOrdersStruct
    >();
  }

  get takerAssetFillAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class BatchFillOrdersCall__Outputs {
  _call: BatchFillOrdersCall;

  constructor(call: BatchFillOrdersCall) {
    this._call = call;
  }

  get fillResults(): Array<BatchFillOrdersCallFillResultsStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      BatchFillOrdersCallFillResultsStruct
    >();
  }
}

export class BatchFillOrdersCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchFillOrdersCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchFillOrdersNoThrowCall extends ethereum.Call {
  get inputs(): BatchFillOrdersNoThrowCall__Inputs {
    return new BatchFillOrdersNoThrowCall__Inputs(this);
  }

  get outputs(): BatchFillOrdersNoThrowCall__Outputs {
    return new BatchFillOrdersNoThrowCall__Outputs(this);
  }
}

export class BatchFillOrdersNoThrowCall__Inputs {
  _call: BatchFillOrdersNoThrowCall;

  constructor(call: BatchFillOrdersNoThrowCall) {
    this._call = call;
  }

  get orders(): Array<BatchFillOrdersNoThrowCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchFillOrdersNoThrowCallOrdersStruct
    >();
  }

  get takerAssetFillAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class BatchFillOrdersNoThrowCall__Outputs {
  _call: BatchFillOrdersNoThrowCall;

  constructor(call: BatchFillOrdersNoThrowCall) {
    this._call = call;
  }

  get fillResults(): Array<BatchFillOrdersNoThrowCallFillResultsStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      BatchFillOrdersNoThrowCallFillResultsStruct
    >();
  }
}

export class BatchFillOrdersNoThrowCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchFillOrdersNoThrowCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchMatchOrdersCall extends ethereum.Call {
  get inputs(): BatchMatchOrdersCall__Inputs {
    return new BatchMatchOrdersCall__Inputs(this);
  }

  get outputs(): BatchMatchOrdersCall__Outputs {
    return new BatchMatchOrdersCall__Outputs(this);
  }
}

export class BatchMatchOrdersCall__Inputs {
  _call: BatchMatchOrdersCall;

  constructor(call: BatchMatchOrdersCall) {
    this._call = call;
  }

  get leftOrders(): Array<BatchMatchOrdersCallLeftOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchMatchOrdersCallLeftOrdersStruct
    >();
  }

  get rightOrders(): Array<BatchMatchOrdersCallRightOrdersStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      BatchMatchOrdersCallRightOrdersStruct
    >();
  }

  get leftSignatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get rightSignatures(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class BatchMatchOrdersCall__Outputs {
  _call: BatchMatchOrdersCall;

  constructor(call: BatchMatchOrdersCall) {
    this._call = call;
  }

  get batchMatchedFillResults(): BatchMatchOrdersCallBatchMatchedFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as BatchMatchOrdersCallBatchMatchedFillResultsStruct;
  }
}

export class BatchMatchOrdersCallLeftOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchMatchOrdersCallRightOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchMatchOrdersCallBatchMatchedFillResultsStruct extends ethereum.Tuple {
  get left(): Array<BatchMatchOrdersCallBatchMatchedFillResultsLeftStruct> {
    return this[0].toTupleArray<
      BatchMatchOrdersCallBatchMatchedFillResultsLeftStruct
    >();
  }

  get right(): Array<BatchMatchOrdersCallBatchMatchedFillResultsRightStruct> {
    return this[1].toTupleArray<
      BatchMatchOrdersCallBatchMatchedFillResultsRightStruct
    >();
  }

  get profitInLeftMakerAsset(): BigInt {
    return this[2].toBigInt();
  }

  get profitInRightMakerAsset(): BigInt {
    return this[3].toBigInt();
  }
}

export class BatchMatchOrdersCallBatchMatchedFillResultsLeftStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchMatchOrdersCallBatchMatchedFillResultsRightStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchMatchOrdersWithMaximalFillCall extends ethereum.Call {
  get inputs(): BatchMatchOrdersWithMaximalFillCall__Inputs {
    return new BatchMatchOrdersWithMaximalFillCall__Inputs(this);
  }

  get outputs(): BatchMatchOrdersWithMaximalFillCall__Outputs {
    return new BatchMatchOrdersWithMaximalFillCall__Outputs(this);
  }
}

export class BatchMatchOrdersWithMaximalFillCall__Inputs {
  _call: BatchMatchOrdersWithMaximalFillCall;

  constructor(call: BatchMatchOrdersWithMaximalFillCall) {
    this._call = call;
  }

  get leftOrders(): Array<BatchMatchOrdersWithMaximalFillCallLeftOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchMatchOrdersWithMaximalFillCallLeftOrdersStruct
    >();
  }

  get rightOrders(): Array<
    BatchMatchOrdersWithMaximalFillCallRightOrdersStruct
  > {
    return this._call.inputValues[1].value.toTupleArray<
      BatchMatchOrdersWithMaximalFillCallRightOrdersStruct
    >();
  }

  get leftSignatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get rightSignatures(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class BatchMatchOrdersWithMaximalFillCall__Outputs {
  _call: BatchMatchOrdersWithMaximalFillCall;

  constructor(call: BatchMatchOrdersWithMaximalFillCall) {
    this._call = call;
  }

  get batchMatchedFillResults(): BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsStruct;
  }
}

export class BatchMatchOrdersWithMaximalFillCallLeftOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchMatchOrdersWithMaximalFillCallRightOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsStruct extends ethereum.Tuple {
  get left(): Array<
    BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsLeftStruct
  > {
    return this[0].toTupleArray<
      BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsLeftStruct
    >();
  }

  get right(): Array<
    BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsRightStruct
  > {
    return this[1].toTupleArray<
      BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsRightStruct
    >();
  }

  get profitInLeftMakerAsset(): BigInt {
    return this[2].toBigInt();
  }

  get profitInRightMakerAsset(): BigInt {
    return this[3].toBigInt();
  }
}

export class BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsLeftStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class BatchMatchOrdersWithMaximalFillCallBatchMatchedFillResultsRightStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get order(): CancelOrderCallOrderStruct {
    return this._call.inputValues[0].value.toTuple() as CancelOrderCallOrderStruct;
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CancelOrderCallOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class CancelOrdersUpToCall extends ethereum.Call {
  get inputs(): CancelOrdersUpToCall__Inputs {
    return new CancelOrdersUpToCall__Inputs(this);
  }

  get outputs(): CancelOrdersUpToCall__Outputs {
    return new CancelOrdersUpToCall__Outputs(this);
  }
}

export class CancelOrdersUpToCall__Inputs {
  _call: CancelOrdersUpToCall;

  constructor(call: CancelOrdersUpToCall) {
    this._call = call;
  }

  get targetOrderEpoch(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrdersUpToCall__Outputs {
  _call: CancelOrdersUpToCall;

  constructor(call: CancelOrdersUpToCall) {
    this._call = call;
  }
}

export class DetachProtocolFeeCollectorCall extends ethereum.Call {
  get inputs(): DetachProtocolFeeCollectorCall__Inputs {
    return new DetachProtocolFeeCollectorCall__Inputs(this);
  }

  get outputs(): DetachProtocolFeeCollectorCall__Outputs {
    return new DetachProtocolFeeCollectorCall__Outputs(this);
  }
}

export class DetachProtocolFeeCollectorCall__Inputs {
  _call: DetachProtocolFeeCollectorCall;

  constructor(call: DetachProtocolFeeCollectorCall) {
    this._call = call;
  }
}

export class DetachProtocolFeeCollectorCall__Outputs {
  _call: DetachProtocolFeeCollectorCall;

  constructor(call: DetachProtocolFeeCollectorCall) {
    this._call = call;
  }
}

export class ExecuteTransactionCall extends ethereum.Call {
  get inputs(): ExecuteTransactionCall__Inputs {
    return new ExecuteTransactionCall__Inputs(this);
  }

  get outputs(): ExecuteTransactionCall__Outputs {
    return new ExecuteTransactionCall__Outputs(this);
  }
}

export class ExecuteTransactionCall__Inputs {
  _call: ExecuteTransactionCall;

  constructor(call: ExecuteTransactionCall) {
    this._call = call;
  }

  get transaction(): ExecuteTransactionCallTransactionStruct {
    return this._call.inputValues[0].value.toTuple() as ExecuteTransactionCallTransactionStruct;
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ExecuteTransactionCall__Outputs {
  _call: ExecuteTransactionCall;

  constructor(call: ExecuteTransactionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ExecuteTransactionCallTransactionStruct extends ethereum.Tuple {
  get salt(): BigInt {
    return this[0].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[1].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[2].toBigInt();
  }

  get signerAddress(): Address {
    return this[3].toAddress();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }
}

export class FillOrKillOrderCall extends ethereum.Call {
  get inputs(): FillOrKillOrderCall__Inputs {
    return new FillOrKillOrderCall__Inputs(this);
  }

  get outputs(): FillOrKillOrderCall__Outputs {
    return new FillOrKillOrderCall__Outputs(this);
  }
}

export class FillOrKillOrderCall__Inputs {
  _call: FillOrKillOrderCall;

  constructor(call: FillOrKillOrderCall) {
    this._call = call;
  }

  get order(): FillOrKillOrderCallOrderStruct {
    return this._call.inputValues[0].value.toTuple() as FillOrKillOrderCallOrderStruct;
  }

  get takerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class FillOrKillOrderCall__Outputs {
  _call: FillOrKillOrderCall;

  constructor(call: FillOrKillOrderCall) {
    this._call = call;
  }

  get fillResults(): FillOrKillOrderCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as FillOrKillOrderCallFillResultsStruct;
  }
}

export class FillOrKillOrderCallOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class FillOrKillOrderCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class FillOrderCall extends ethereum.Call {
  get inputs(): FillOrderCall__Inputs {
    return new FillOrderCall__Inputs(this);
  }

  get outputs(): FillOrderCall__Outputs {
    return new FillOrderCall__Outputs(this);
  }
}

export class FillOrderCall__Inputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get order(): FillOrderCallOrderStruct {
    return this._call.inputValues[0].value.toTuple() as FillOrderCallOrderStruct;
  }

  get takerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class FillOrderCall__Outputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get fillResults(): FillOrderCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as FillOrderCallFillResultsStruct;
  }
}

export class FillOrderCallOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class FillOrderCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MarketBuyOrdersFillOrKillCall extends ethereum.Call {
  get inputs(): MarketBuyOrdersFillOrKillCall__Inputs {
    return new MarketBuyOrdersFillOrKillCall__Inputs(this);
  }

  get outputs(): MarketBuyOrdersFillOrKillCall__Outputs {
    return new MarketBuyOrdersFillOrKillCall__Outputs(this);
  }
}

export class MarketBuyOrdersFillOrKillCall__Inputs {
  _call: MarketBuyOrdersFillOrKillCall;

  constructor(call: MarketBuyOrdersFillOrKillCall) {
    this._call = call;
  }

  get orders(): Array<MarketBuyOrdersFillOrKillCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MarketBuyOrdersFillOrKillCallOrdersStruct
    >();
  }

  get makerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class MarketBuyOrdersFillOrKillCall__Outputs {
  _call: MarketBuyOrdersFillOrKillCall;

  constructor(call: MarketBuyOrdersFillOrKillCall) {
    this._call = call;
  }

  get fillResults(): MarketBuyOrdersFillOrKillCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MarketBuyOrdersFillOrKillCallFillResultsStruct;
  }
}

export class MarketBuyOrdersFillOrKillCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MarketBuyOrdersFillOrKillCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MarketBuyOrdersNoThrowCall extends ethereum.Call {
  get inputs(): MarketBuyOrdersNoThrowCall__Inputs {
    return new MarketBuyOrdersNoThrowCall__Inputs(this);
  }

  get outputs(): MarketBuyOrdersNoThrowCall__Outputs {
    return new MarketBuyOrdersNoThrowCall__Outputs(this);
  }
}

export class MarketBuyOrdersNoThrowCall__Inputs {
  _call: MarketBuyOrdersNoThrowCall;

  constructor(call: MarketBuyOrdersNoThrowCall) {
    this._call = call;
  }

  get orders(): Array<MarketBuyOrdersNoThrowCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MarketBuyOrdersNoThrowCallOrdersStruct
    >();
  }

  get makerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class MarketBuyOrdersNoThrowCall__Outputs {
  _call: MarketBuyOrdersNoThrowCall;

  constructor(call: MarketBuyOrdersNoThrowCall) {
    this._call = call;
  }

  get fillResults(): MarketBuyOrdersNoThrowCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MarketBuyOrdersNoThrowCallFillResultsStruct;
  }
}

export class MarketBuyOrdersNoThrowCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MarketBuyOrdersNoThrowCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MarketSellOrdersFillOrKillCall extends ethereum.Call {
  get inputs(): MarketSellOrdersFillOrKillCall__Inputs {
    return new MarketSellOrdersFillOrKillCall__Inputs(this);
  }

  get outputs(): MarketSellOrdersFillOrKillCall__Outputs {
    return new MarketSellOrdersFillOrKillCall__Outputs(this);
  }
}

export class MarketSellOrdersFillOrKillCall__Inputs {
  _call: MarketSellOrdersFillOrKillCall;

  constructor(call: MarketSellOrdersFillOrKillCall) {
    this._call = call;
  }

  get orders(): Array<MarketSellOrdersFillOrKillCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MarketSellOrdersFillOrKillCallOrdersStruct
    >();
  }

  get takerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class MarketSellOrdersFillOrKillCall__Outputs {
  _call: MarketSellOrdersFillOrKillCall;

  constructor(call: MarketSellOrdersFillOrKillCall) {
    this._call = call;
  }

  get fillResults(): MarketSellOrdersFillOrKillCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MarketSellOrdersFillOrKillCallFillResultsStruct;
  }
}

export class MarketSellOrdersFillOrKillCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MarketSellOrdersFillOrKillCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MarketSellOrdersNoThrowCall extends ethereum.Call {
  get inputs(): MarketSellOrdersNoThrowCall__Inputs {
    return new MarketSellOrdersNoThrowCall__Inputs(this);
  }

  get outputs(): MarketSellOrdersNoThrowCall__Outputs {
    return new MarketSellOrdersNoThrowCall__Outputs(this);
  }
}

export class MarketSellOrdersNoThrowCall__Inputs {
  _call: MarketSellOrdersNoThrowCall;

  constructor(call: MarketSellOrdersNoThrowCall) {
    this._call = call;
  }

  get orders(): Array<MarketSellOrdersNoThrowCallOrdersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MarketSellOrdersNoThrowCallOrdersStruct
    >();
  }

  get takerAssetFillAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class MarketSellOrdersNoThrowCall__Outputs {
  _call: MarketSellOrdersNoThrowCall;

  constructor(call: MarketSellOrdersNoThrowCall) {
    this._call = call;
  }

  get fillResults(): MarketSellOrdersNoThrowCallFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MarketSellOrdersNoThrowCallFillResultsStruct;
  }
}

export class MarketSellOrdersNoThrowCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MarketSellOrdersNoThrowCallFillResultsStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchOrdersCall extends ethereum.Call {
  get inputs(): MatchOrdersCall__Inputs {
    return new MatchOrdersCall__Inputs(this);
  }

  get outputs(): MatchOrdersCall__Outputs {
    return new MatchOrdersCall__Outputs(this);
  }
}

export class MatchOrdersCall__Inputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get leftOrder(): MatchOrdersCallLeftOrderStruct {
    return this._call.inputValues[0].value.toTuple() as MatchOrdersCallLeftOrderStruct;
  }

  get rightOrder(): MatchOrdersCallRightOrderStruct {
    return this._call.inputValues[1].value.toTuple() as MatchOrdersCallRightOrderStruct;
  }

  get leftSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get rightSignature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MatchOrdersCall__Outputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get matchedFillResults(): MatchOrdersCallMatchedFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MatchOrdersCallMatchedFillResultsStruct;
  }
}

export class MatchOrdersCallLeftOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MatchOrdersCallRightOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MatchOrdersCallMatchedFillResultsStruct extends ethereum.Tuple {
  get left(): MatchOrdersCallMatchedFillResultsLeftStruct {
    return this[0].toTuple() as MatchOrdersCallMatchedFillResultsLeftStruct;
  }

  get right(): MatchOrdersCallMatchedFillResultsRightStruct {
    return this[1].toTuple() as MatchOrdersCallMatchedFillResultsRightStruct;
  }

  get profitInLeftMakerAsset(): BigInt {
    return this[2].toBigInt();
  }

  get profitInRightMakerAsset(): BigInt {
    return this[3].toBigInt();
  }
}

export class MatchOrdersCallMatchedFillResultsLeftStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchOrdersCallMatchedFillResultsRightStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchOrdersWithMaximalFillCall extends ethereum.Call {
  get inputs(): MatchOrdersWithMaximalFillCall__Inputs {
    return new MatchOrdersWithMaximalFillCall__Inputs(this);
  }

  get outputs(): MatchOrdersWithMaximalFillCall__Outputs {
    return new MatchOrdersWithMaximalFillCall__Outputs(this);
  }
}

export class MatchOrdersWithMaximalFillCall__Inputs {
  _call: MatchOrdersWithMaximalFillCall;

  constructor(call: MatchOrdersWithMaximalFillCall) {
    this._call = call;
  }

  get leftOrder(): MatchOrdersWithMaximalFillCallLeftOrderStruct {
    return this._call.inputValues[0].value.toTuple() as MatchOrdersWithMaximalFillCallLeftOrderStruct;
  }

  get rightOrder(): MatchOrdersWithMaximalFillCallRightOrderStruct {
    return this._call.inputValues[1].value.toTuple() as MatchOrdersWithMaximalFillCallRightOrderStruct;
  }

  get leftSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get rightSignature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class MatchOrdersWithMaximalFillCall__Outputs {
  _call: MatchOrdersWithMaximalFillCall;

  constructor(call: MatchOrdersWithMaximalFillCall) {
    this._call = call;
  }

  get matchedFillResults(): MatchOrdersWithMaximalFillCallMatchedFillResultsStruct {
    return this._call.outputValues[0].value.toTuple() as MatchOrdersWithMaximalFillCallMatchedFillResultsStruct;
  }
}

export class MatchOrdersWithMaximalFillCallLeftOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MatchOrdersWithMaximalFillCallRightOrderStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class MatchOrdersWithMaximalFillCallMatchedFillResultsStruct extends ethereum.Tuple {
  get left(): MatchOrdersWithMaximalFillCallMatchedFillResultsLeftStruct {
    return this[0].toTuple() as MatchOrdersWithMaximalFillCallMatchedFillResultsLeftStruct;
  }

  get right(): MatchOrdersWithMaximalFillCallMatchedFillResultsRightStruct {
    return this[1].toTuple() as MatchOrdersWithMaximalFillCallMatchedFillResultsRightStruct;
  }

  get profitInLeftMakerAsset(): BigInt {
    return this[2].toBigInt();
  }

  get profitInRightMakerAsset(): BigInt {
    return this[3].toBigInt();
  }
}

export class MatchOrdersWithMaximalFillCallMatchedFillResultsLeftStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class MatchOrdersWithMaximalFillCallMatchedFillResultsRightStruct extends ethereum.Tuple {
  get makerAssetFilledAmount(): BigInt {
    return this[0].toBigInt();
  }

  get takerAssetFilledAmount(): BigInt {
    return this[1].toBigInt();
  }

  get makerFeePaid(): BigInt {
    return this[2].toBigInt();
  }

  get takerFeePaid(): BigInt {
    return this[3].toBigInt();
  }

  get protocolFeePaid(): BigInt {
    return this[4].toBigInt();
  }
}

export class PreSignCall extends ethereum.Call {
  get inputs(): PreSignCall__Inputs {
    return new PreSignCall__Inputs(this);
  }

  get outputs(): PreSignCall__Outputs {
    return new PreSignCall__Outputs(this);
  }
}

export class PreSignCall__Inputs {
  _call: PreSignCall;

  constructor(call: PreSignCall) {
    this._call = call;
  }

  get hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PreSignCall__Outputs {
  _call: PreSignCall;

  constructor(call: PreSignCall) {
    this._call = call;
  }
}

export class RegisterAssetProxyCall extends ethereum.Call {
  get inputs(): RegisterAssetProxyCall__Inputs {
    return new RegisterAssetProxyCall__Inputs(this);
  }

  get outputs(): RegisterAssetProxyCall__Outputs {
    return new RegisterAssetProxyCall__Outputs(this);
  }
}

export class RegisterAssetProxyCall__Inputs {
  _call: RegisterAssetProxyCall;

  constructor(call: RegisterAssetProxyCall) {
    this._call = call;
  }

  get assetProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterAssetProxyCall__Outputs {
  _call: RegisterAssetProxyCall;

  constructor(call: RegisterAssetProxyCall) {
    this._call = call;
  }
}

export class SetProtocolFeeCollectorAddressCall extends ethereum.Call {
  get inputs(): SetProtocolFeeCollectorAddressCall__Inputs {
    return new SetProtocolFeeCollectorAddressCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeCollectorAddressCall__Outputs {
    return new SetProtocolFeeCollectorAddressCall__Outputs(this);
  }
}

export class SetProtocolFeeCollectorAddressCall__Inputs {
  _call: SetProtocolFeeCollectorAddressCall;

  constructor(call: SetProtocolFeeCollectorAddressCall) {
    this._call = call;
  }

  get updatedProtocolFeeCollector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProtocolFeeCollectorAddressCall__Outputs {
  _call: SetProtocolFeeCollectorAddressCall;

  constructor(call: SetProtocolFeeCollectorAddressCall) {
    this._call = call;
  }
}

export class SetProtocolFeeMultiplierCall extends ethereum.Call {
  get inputs(): SetProtocolFeeMultiplierCall__Inputs {
    return new SetProtocolFeeMultiplierCall__Inputs(this);
  }

  get outputs(): SetProtocolFeeMultiplierCall__Outputs {
    return new SetProtocolFeeMultiplierCall__Outputs(this);
  }
}

export class SetProtocolFeeMultiplierCall__Inputs {
  _call: SetProtocolFeeMultiplierCall;

  constructor(call: SetProtocolFeeMultiplierCall) {
    this._call = call;
  }

  get updatedProtocolFeeMultiplier(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProtocolFeeMultiplierCall__Outputs {
  _call: SetProtocolFeeMultiplierCall;

  constructor(call: SetProtocolFeeMultiplierCall) {
    this._call = call;
  }
}

export class SetSignatureValidatorApprovalCall extends ethereum.Call {
  get inputs(): SetSignatureValidatorApprovalCall__Inputs {
    return new SetSignatureValidatorApprovalCall__Inputs(this);
  }

  get outputs(): SetSignatureValidatorApprovalCall__Outputs {
    return new SetSignatureValidatorApprovalCall__Outputs(this);
  }
}

export class SetSignatureValidatorApprovalCall__Inputs {
  _call: SetSignatureValidatorApprovalCall;

  constructor(call: SetSignatureValidatorApprovalCall) {
    this._call = call;
  }

  get validatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approval(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSignatureValidatorApprovalCall__Outputs {
  _call: SetSignatureValidatorApprovalCall;

  constructor(call: SetSignatureValidatorApprovalCall) {
    this._call = call;
  }
}

export class SimulateDispatchTransferFromCallsCall extends ethereum.Call {
  get inputs(): SimulateDispatchTransferFromCallsCall__Inputs {
    return new SimulateDispatchTransferFromCallsCall__Inputs(this);
  }

  get outputs(): SimulateDispatchTransferFromCallsCall__Outputs {
    return new SimulateDispatchTransferFromCallsCall__Outputs(this);
  }
}

export class SimulateDispatchTransferFromCallsCall__Inputs {
  _call: SimulateDispatchTransferFromCallsCall;

  constructor(call: SimulateDispatchTransferFromCallsCall) {
    this._call = call;
  }

  get assetData(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get fromAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get toAddresses(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class SimulateDispatchTransferFromCallsCall__Outputs {
  _call: SimulateDispatchTransferFromCallsCall;

  constructor(call: SimulateDispatchTransferFromCallsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
