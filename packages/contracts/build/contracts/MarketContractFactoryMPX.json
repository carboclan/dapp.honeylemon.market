{
  "contractName": "MarketContractFactoryMPX",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracleHub",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MARKET_COLLATERAL_POOL",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketContractRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        },
        {
          "name": "collateralPoolAddress",
          "type": "address"
        },
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "MarketContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractNames",
          "type": "bytes32[3]"
        },
        {
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[7]"
        },
        {
          "name": "oracleURL",
          "type": "string"
        },
        {
          "name": "oracleStatistic",
          "type": "string"
        }
      ],
      "name": "deployMarketContractMPX",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "name": "setOracleHubAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"contractNames\",\"type\":\"bytes32[3]\"},{\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"name\":\"contractSpecs\",\"type\":\"uint256[7]\"},{\"name\":\"oracleURL\",\"type\":\"string\"},{\"name\":\"oracleStatistic\",\"type\":\"string\"}],\"name\":\"deployMarketContractMPX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracleHub\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oracleHubAddress\",\"type\":\"address\"}],\"name\":\"setOracleHubAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MARKET_COLLATERAL_POOL\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketContractRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"},{\"name\":\"collateralPoolAddress\",\"type\":\"address\"},{\"name\":\"oracleHubAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"MarketContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Phil Elsasser <phil@marketprotocol.io>\",\"methods\":{\"constructor\":{\"details\":\"deploys our factory and ties it to the supplied registry address\",\"params\":{\"collateralPoolAddress\":\"- address of our MARKET Collateral pool\",\"oracleHubAddress\":\"- address of the MPX oracle\",\"registryAddress\":\"- address of our MARKET registry\"}},\"deployMarketContractMPX(bytes32[3],address,uint256[7],string,string)\":{\"details\":\"Deploys a new instance of a market contract and adds it to the whitelist.\",\"params\":{\"collateralTokenAddress\":\"address of the ERC20 token that will be used for collateral and pricing\",\"contractNames\":\"bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token\",\"contractSpecs\":\"array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\",\"oracleStatistic\":\"statistic type (lastPrice, vwap, etc)\",\"oracleURL\":\"url of data\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setOracleHubAddress(address)\":{\"details\":\"allows for the owner to set a new oracle hub address which is responsible for providing data to our contracts\",\"params\":{\"oracleHubAddress\":\"address of the oracle hub, cannot be null address\"}},\"setRegistryAddress(address)\":{\"details\":\"allows for the owner to set the desired registry for contract creation.\",\"params\":{\"registryAddress\":\"desired registry address.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"MarketContractFactoryMPX\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol\":\"MarketContractFactoryMPX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/MathLib.sol\":{\"keccak256\":\"0xe7069fcd38bcd09a3ed7e0aecbeb9e4fd5c7ac7b1bdd2f6865e26b97bbe0b679\",\"urls\":[\"bzzr://3e349a8352b3d4f25ec8e684a36c2cbf8fc4cda9d230a5331b101a8c80ac23ee\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/StringLib.sol\":{\"keccak256\":\"0xfe9df18e4239bd30aa3a257a7cf15665547ec0a47bd5ec05566ef0efe390b551\",\"urls\":[\"bzzr://763e42c56f8bbd8d091c17c754e1ab28e8d439d797827db9589f0a9fbf6a814b\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContract.sol\":{\"keccak256\":\"0xf5654f0e62eb7cf41bb48e5c069b03efefe33778c9e2ba867c5a616891ad1ce3\",\"urls\":[\"bzzr://1c1860bb8f0de2ab378d0e8a0c0b697c4f2b06dd2157472aa934f115e266fbf2\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContractRegistryInterface.sol\":{\"keccak256\":\"0xb0259d3f0dbf7f52df2274f66c01563f7ae3d3bdacc018fede764b4a78bc1dd9\",\"urls\":[\"bzzr://db91f063cb13da449814f8d7d990039b51cdef45110e735d7bebf116cf963735\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol\":{\"keccak256\":\"0x4ac0f29eb9086b97321c1e869e33ac87f722ae16be8f3ed54149bf7315cc284c\",\"urls\":[\"bzzr://b7ad3017637447edf14091b9eb674108836b34795b1a95fa2c404cb6d158e0b6\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol\":{\"keccak256\":\"0x98a1140ed6c43831e3e2dff78d0851996ab9c0200d1d5dfcabe1fd23c40a3932\",\"urls\":[\"bzzr://f4fa7017ace12d45a391e9e7278a346eb87c7e50d97d95cc9eadc6c404e38b74\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/tokens/PositionToken.sol\":{\"keccak256\":\"0xb27773c7601c1ca550ce926cbaa0fb94aca6d3a9dbcf63555187449154d0481d\",\"urls\":[\"bzzr://4e178aac5b6bde395c90ae516f0319ffe62608bd8eb8a92027161f200c5d3026\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405160608061324c8339810180604052606081101561003057600080fd5b508051602082015160409283015160008054600160a060020a03191633178082559451939492939192600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160a060020a03831615156100ff57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f7265676973747279416464726573732063616e206e6f74206265206e756c6c00604482015290519081900360640190fd5b600160a060020a0382161515610160576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806132276025913960400191505060405180910390fd5b600160a060020a03811615156101d757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c604482015290519081900360640190fd5b60018054600160a060020a03948516600160a060020a031991821617909155600380549385169382169390931790925560028054919093169116179055613004806102236000396000f3fe60806040523480156200001157600080fd5b5060043610620000c9576000357c010000000000000000000000000000000000000000000000000000000090048063a8a5d270116200008c578063a8a5d270146200020d578063ab7b49931462000236578063c6f8d5f0146200025f578063ceaaa9151462000269578063f2fde38b146200027357620000c9565b80637077b04714620000ce578063715018a614620001cf57806373d62b4614620001db5780638da5cb5b14620001e55780638f32d59b14620001ef575b600080fd5b620001b360048036036101a0811015620000e757600080fd5b600160a060020a0360608301351690608083019083018361018081016101608201356401000000008111156200011c57600080fd5b8201836020820111156200012f57600080fd5b803590602001918460018302840111640100000000831117156200015257600080fd5b9193909290916020810190356401000000008111156200017157600080fd5b8201836020820111156200018457600080fd5b80359060200191846001830284011164010000000083111715620001a757600080fd5b5090925090506200029c565b60408051600160a060020a039092168252519081900360200190f35b620001d9620004bc565b005b620001b362000529565b620001b362000538565b620001f962000547565b604080519115158252519081900360200190f35b620001d9600480360360208110156200022557600080fd5b5035600160a060020a031662000558565b620001d9600480360360208110156200024e57600080fd5b5035600160a060020a031662000615565b620001b3620006d2565b620001b3620006e1565b620001d9600480360360208110156200028b57600080fd5b5035600160a060020a0316620006f0565b6000620002a862000547565b1515620002b457600080fd5b600088606060405190810160405280620002cd62000538565b600160a060020a0390811682528b8116602083015260035481166040909201919091526002541689898989896200030362000792565b8089606080828437600081840152601f19601f82011690508083019250505088600360200280838360005b83811015620003485781810151838201526020016200032e565b50505050600160a060020a038a169201918252506020018660e080828437600083820152601f01601f191690910182810360409081018252810186905290506020810160608201878780828437600083820152601f01601f1916909101848103835285815260200190508585808284376000838201819052604051601f909201601f19169093018190039d509b50909950505050505050505050f080158015620003f6573d6000803e3d6000fd5b50600154604080517f9244f496000000000000000000000000000000000000000000000000000000008152600160a060020a0380851660048301529151939450911691639244f4969160248082019260009290919082900301818387803b1580156200046157600080fd5b505af115801562000476573d6000803e3d6000fd5b5050604051600160a060020a03841692503391507f38ee3ff13b5d3453452a79e0799d83b2c8207bf126b2798fa512343680f643ee90600090a398975050505050505050565b620004c662000547565b1515620004d257600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600254600160a060020a031681565b600054600160a060020a031690565b600054600160a060020a0316331490565b6200056262000547565b15156200056e57600080fd5b600160a060020a0381161515620005e657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c604482015290519081900360640190fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6200061f62000547565b15156200062b57600080fd5b600160a060020a0381161515620006a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f7265676973747279416464726573732063616e206e6f74206265206e756c6c00604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600354600160a060020a031681565b600154600160a060020a031681565b620006fa62000547565b15156200070657600080fd5b620007118162000714565b50565b600160a060020a03811615156200072a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60405161283580620007a48339019056fe608060405262015180600c556012805460ff191690553480156200002257600080fd5b50604051620028353803806200283583398101806040526102008110156200004957600080fd5b60c08201516101c083018051606085019360e0860192908601918691906401000000008111156200007957600080fd5b820160208101848111156200008d57600080fd5b8151640100000000811182820187101715620000a857600080fd5b50509291906020018051640100000000811115620000c557600080fd5b82016020810184811115620000d957600080fd5b8151640100000000811182820187101715620000f457600080fd5b505060008054600160a060020a03191633178082556040519295508a94508993508792600160a060020a03919091169190600080516020620027f2833981519152908290a3805160058190556020820151600481905511620001a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180620027c8602a913960400191505060405180910390fd5b6040810151600655606081015160075560c0810151600b81905542106200022a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45585049524154494f4e206d75737420626520696e2074686520667574757265604482015290519081900360640190fd5b60075415156200029b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5154595f4d554c5449504c4945522063616e6e6f742062652030000000000000604482015290519081900360640190fd5b602082015160028054600160a060020a03928316600160a060020a031991821617909155604084015160038054919093169116179055600554600454600754620002f592919064010000000062000da2620005d082021704565b6008556005546004805460075462000324939285905b602002015164010000000062000dbf6200060382021704565b600955600580546004546007546200033e9385906200030b565b600a55620003628360005b602002015164010000000062000e046200066b82021704565b8051620003789160019160209091019062000935565b5060006200038884600162000349565b600062000394620009ba565b8080602001806020018460ff1660ff168152602001838103835260238152602001806200281260239139604001838103825285818151815260200191508051906020019080838360005b83811015620003f8578181015183820152602001620003de565b50505050905090810190601f168015620004265780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156200044a573d6000803e3d6000fd5b50905060006200045c85600262000349565b600162000468620009ba565b8080602001806020018460ff1660ff16815260200183810383526024815260200180620027a460249139604001838103825285818151815260200191508051906020019080838360005b83811015620004cc578181015183820152602001620004b2565b50505050905090810190601f168015620004fa5780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156200051e573d6000803e3d6000fd5b50600d8054600160a060020a03808616600160a060020a031992831617909255600e80549284169290911691909117905590506200056c846000602002015164010000000062000703810204565b505084516200058693506013925060208601915062000935565b5080516200059c90601490602084019062000935565b505060128054600160a060020a039094166101000261010060a860020a03199094169390931790925550620009e892505050565b6000620005fb620005eb848664010000000062000739810204565b83640100000000620007b6810204565b949350505050565b60008060026200061d86886401000000006200084e810204565b8115156200062757fe5b04905061271062000656620006468387640100000000620007b6810204565b85640100000000620007b6810204565b8115156200066057fe5b049695505050505050565b60408051602080825281830190925260609182919060208201818038833901905050905060005b6020811015620006fc57838160208110620006a957fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028282815181101515620006db57fe5b906020010190600160f860020a031916908160001a90535060010162000692565b5092915050565b62000716640100000000620008c3810204565b15156200072257600080fd5b6200073681640100000000620008d5810204565b50565b600082821115620007ab57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d6174684c69623a207375627472616374696f6e206f766572666c6f77000000604482015290519081900360640190fd5b508082035b92915050565b6000821515620007c957506000620007b0565b828202828482811515620007d957fe5b04146200084757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f77604482015290519081900360640190fd5b9392505050565b6000828201838110156200084757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d6174684c69623a206164646974696f6e206f766572666c6f77000000000000604482015290519081900360640190fd5b600054600160a060020a031633145b90565b600160a060020a0381161515620008eb57600080fd5b60008054604051600160a060020a0380851693921691600080516020620027f283398151915291a360008054600160a060020a031916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200097857805160ff1916838001178555620009a8565b82800160010185558215620009a8579182015b82811115620009a85782518255916020019190600101906200098b565b50620009b6929150620009cb565b5090565b604051610d108062001a9483390190565b620008d291905b80821115620009b65760008155600101620009d2565b61109c80620009f86000396000f3fe608060405234801561001057600080fd5b506004361061020d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161012c578063c32b1dfa116100bf578063e158e02d1161008e578063e158e02d1461045f578063eaafb4fa14610467578063f2fde38b1461046f578063f348e8b2146104955761020d565b8063c32b1dfa1461041b578063ca361d6714610423578063cabd58341461042b578063db3fa771146104575761020d565b8063b5471dee116100fb578063b5471dee146103d7578063bb4b5734146103df578063bd220dae146103e7578063c25c4444146103ef5761020d565b80638da5cb5b146103995780638f32d59b146103a1578063986c2063146103a9578063a8a5d270146103b15761020d565b80635b3f1e3f116101a45780636fbce940116101735780636fbce9401461034f578063715018a61461036c5780637df237531461037457806386aa7cdc146103915761020d565b80635b3f1e3f146103095780635c7c705914610311578063614d08f8146103195780636d359467146103215761020d565b80633270bb5b116101e05780633270bb5b146102605780633d168eda1461027c5780634ac77f22146102f957806357d1ba25146103015761020d565b8063053f14da1461021257806322d1c35e1461022c5780632fed1b0014610250578063323bb77514610258575b600080fd5b61021a61049d565b60408051918252519081900360200190f35b6102346104a3565b60408051600160a060020a039092168252519081900360200190f35b61021a6104b2565b6102346104b8565b6102686104c7565b604080519115158252519081900360200190f35b6102846104d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61028461055e565b61021a6105b9565b6102346105bf565b61021a6105ce565b6102846105d4565b61034d6004803603604081101561033757600080fd5b5080359060200135600160a060020a031661062e565b005b61034d6004803603602081101561036557600080fd5b5035610704565b61034d6107be565b61034d6004803603602081101561038a57600080fd5b5035610828565b61021a6108e0565b6102346108e6565b6102686108f5565b610234610906565b61034d600480360360208110156103c757600080fd5b5035600160a060020a031661091a565b61021a6109ac565b61021a6109b2565b6102686109b8565b61034d6004803603604081101561040557600080fd5b5080359060200135600160a060020a03166109d8565b61021a610a92565b61021a610a98565b61034d6004803603604081101561044157600080fd5b5080359060200135600160a060020a0316610a9e565b61021a610bde565b61021a610be4565b610234610bea565b61034d6004803603602081101561048557600080fd5b5035600160a060020a0316610bf9565b61021a610c15565b600f5481565b600d54600160a060020a031681565b60065481565b600254600160a060020a031681565b60125460ff1681565b6013805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b505050505081565b6014805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b600c5481565b600e54600160a060020a031681565b60095481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b600354600160a060020a0316331461067a5760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600e54604080517fc3501ff600000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a0384811660248301529151919092169163c3501ff691604480830192600092919082900301818387803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b505050505050565b6012546101009004600160a060020a0316331461076b576040805160e560020a62461bcd02815260206004820152601f60248201527f6f6e6c792063616c6c61626c6520627920746865206f7261636c652068756200604482015290519081900360640190fd5b60125460ff161561077b57600080fd5b600f8190556040805182815290517f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4829181900360200190a16107bb610c1b565b50565b6107c66108f5565b15156107d157600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6108306108f5565b151561083b57600080fd5b600554811015801561084f57506004548111155b151561088f5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806110416030913960400191505060405180910390fd5b600f8190556040805182815290517f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4829181900360200190a16108d081610ce6565b506012805460ff19166001179055565b60115481565b600054600160a060020a031690565b600054600160a060020a0316331490565b6012546101009004600160a060020a031681565b6109226108f5565b151561092d57600080fd5b600160a060020a03811615156109775760405160e560020a62461bcd02815260040180806020018281038252602b815260200180611016602b913960400191505060405180910390fd5b60128054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60045481565b600b5481565b60125460009060ff1680156109d35750600c54601154014210155b905090565b600354600160a060020a03163314610a245760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600d54604080517fc3501ff600000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a0384811660248301529151919092169163c3501ff691604480830192600092919082900301818387803b1580156106e857600080fd5b60055481565b60075481565b600354600160a060020a03163314610aea5760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600d54604080517f7251cd0200000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a03848116602483015291519190921691637251cd0291604480830192600092919082900301818387803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050600e54604080517f7251cd0200000000000000000000000000000000000000000000000000000000815260048101879052600160a060020a0386811660248301529151919092169350637251cd029250604480830192600092919082900301818387803b1580156106e857600080fd5b600a5481565b60085481565b600354600160a060020a031681565b610c016108f5565b1515610c0c57600080fd5b6107bb81610d25565b60105481565b60125460ff1615610c76576040805160e560020a62461bcd02815260206004820152601b60248201527f436f6e747261637420697320616c726561647920736574746c65640000000000604482015290519081900360640190fd5b6000600b54421115610c9857506012805460ff19166001179055600f54610cd6565b600454600f5410610cb957506012805460ff19166001179055600454610cd6565b600554600f5411610cd657506012805460ff191660011790556005545b60125460ff16156107bb576107bb815b4260115560108190556040805182815290517f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c9181900360200190a150565b600160a060020a0381161515610d3a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000610db7610db18486610eb0565b83610f15565b949350505050565b6000806002610dce8688610f92565b811515610dd757fe5b049050612710610df0610dea8387610f15565b85610f15565b811515610df957fe5b049695505050505050565b60408051602080825281830190925260609182919060208201818038833901905050905060005b6020811015610ea957838160208110610e4057fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028282815181101515610e7157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610e2b565b5092915050565b600082821115610f0a576040805160e560020a62461bcd02815260206004820152601d60248201527f4d6174684c69623a207375627472616374696f6e206f766572666c6f77000000604482015290519081900360640190fd5b508082035b92915050565b6000821515610f2657506000610f0f565b828202828482811515610f3557fe5b0414610f8b576040805160e560020a62461bcd02815260206004820181905260248201527f4d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f77604482015290519081900360640190fd5b9392505050565b600082820183811015610f8b576040805160e560020a62461bcd02815260206004820152601a60248201527f4d6174684c69623a206164646974696f6e206f766572666c6f77000000000000604482015290519081900360640190fdfe4f6e6c792063616c6c61626c652066726f6d2074686520636f6c6c61746572616c20706f6f6c63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c20616464726573736172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473a165627a7a723058200db6e23f95aaf176d6bb7ed1e61c4eddcee255e64921de0c1df32be464113826002960806040523480156200001157600080fd5b5060405162000d1038038062000d10833981018060405260608110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b505060209091015160038054600160a060020a031916331790819055604051929450909250600160a060020a0316906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38251620001379060049060208601906200018f565b5081516200014d9060059060208501906200018f565b506006805460ff1916905560ff811660018111156200016857fe5b6006805461ff0019166101008360018111156200018157fe5b021790555050505062000234565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d257805160ff191683800117855562000202565b8280016001018555821562000202579182015b8281111562000202578251825591602001919060010190620001e5565b506200021092915062000214565b5090565b6200023191905b808211156200021057600081556001016200021b565b90565b610acc80620002446000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100bf578063a9059cbb1161008e578063a9059cbb1461034b578063b003b12714610377578063c3501ff6146103a3578063dd62ed3e146103cf578063f2fde38b146103fd57610133565b80638da5cb5b146102eb5780638f32d59b1461030f57806395d89b4114610317578063a457c2d71461031f57610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806370a082311461028f578063715018a6146102b55780637251cd02146102bf57610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610423565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104b1565b604080519115158252519081900360200190f35b6101fd6104c7565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a038135811691602081013590911690604001356104cd565b61024d610524565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a03813516906020013561052d565b6101fd600480360360208110156102a557600080fd5b5035600160a060020a0316610569565b6102bd610584565b005b6102bd600480360360408110156102d557600080fd5b5080359060200135600160a060020a03166105ee565b6102f361060f565b60408051600160a060020a039092168252519081900360200190f35b6101e161061e565b61014061062f565b6101e16004803603604081101561033557600080fd5b50600160a060020a03813516906020013561068a565b6101e16004803603604081101561036157600080fd5b50600160a060020a0381351690602001356106c6565b61037f6106d3565b6040518082600181111561038f57fe5b60ff16815260200191505060405180910390f35b6102bd600480360360408110156103b957600080fd5b5080359060200135600160a060020a03166106e1565b6101fd600480360360408110156103e557600080fd5b50600160a060020a03813581169160200135166106fe565b6102bd6004803603602081101561041357600080fd5b5035600160a060020a0316610729565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b505050505081565b60006104be338484610748565b50600192915050565b60025490565b60006104da8484846107d4565b600160a060020a03841660009081526001602090815260408083203380855292529091205461051a918691610515908663ffffffff6108a116565b610748565b5060019392505050565b60065460ff1681565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104be918590610515908663ffffffff6108b616565b600160a060020a031660009081526020819052604090205490565b61058c61061e565b151561059757600080fd5b600354604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36003805473ffffffffffffffffffffffffffffffffffffffff19169055565b6105f661061e565b151561060157600080fd5b61060b81836108cf565b5050565b600354600160a060020a031690565b600354600160a060020a0316331490565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a95780601f1061047e576101008083540402835291602001916104a9565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104be918590610515908663ffffffff6108a116565b60006104be3384846107d4565b600654610100900460ff1681565b6106e961061e565b15156106f457600080fd5b61060b8183610979565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61073161061e565b151561073c57600080fd5b61074581610a22565b50565b600160a060020a038216151561075d57600080fd5b600160a060020a038316151561077257600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156107e957600080fd5b600160a060020a038316600090815260208190526040902054610812908263ffffffff6108a116565b600160a060020a038085166000908152602081905260408082209390935590841681522054610847908263ffffffff6108b616565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156108b057600080fd5b50900390565b6000828201838110156108c857600080fd5b9392505050565b600160a060020a03821615156108e457600080fd5b6002546108f7908263ffffffff6108b616565b600255600160a060020a038216600090815260208190526040902054610923908263ffffffff6108b616565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216151561098e57600080fd5b6002546109a1908263ffffffff6108a116565b600255600160a060020a0382166000908152602081905260409020546109cd908263ffffffff6108a116565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a0381161515610a3757600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820e84632a21e1d3c1dfeda16193bfa4e314be3c997609c800669b52f32d961d3e800294d41524b45542050726f746f636f6c2053686f727420506f736974696f6e20546f6b656e50524943455f434150206d7573742062652067726561746572207468616e2050524943455f464c4f4f528be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04d41524b45542050726f746f636f6c204c6f6e6720506f736974696f6e20546f6b656ea165627a7a723058200b95253da87435c05ca1779cbfeae68bacdfc4b74ea587ccae8002af503e98dc0029636f6c6c61746572616c506f6f6c416464726573732063616e206e6f74206265206e756c6c",
  "deployedBytecode": "",
  "sourceMap": "869:4127:13:-;;;1408:580;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:580:13;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1408:580:13;;;;;;;;;;;515:6:23;:19;;-1:-1:-1;;;;;;515:19:23;524:10;515:19;;;;549:40;;1408:580:13;;;;;;-1:-1:-1;;;;;582:6:23;;549:40;;515:6;;549:40;-1:-1:-1;;;;;1557:29:13;;;;1549:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1653:35:13;;;;1632:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1769:30:13;;;;1761:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:22;:40;;-1:-1:-1;;;;;1847:40:13;;;-1:-1:-1;;;;;;1847:40:13;;;;;;;1897:22;:46;;;;;;;;;;;;;;;1953:9;:28;;;;;;;;;;;869:4127;;;;;;",
  "deployedSourceMap": "869:4127:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:4127:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:804;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;3405:804:13;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3405:804:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3405:804:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3405:804:13;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3405:804:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3405:804:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3405:804:13;;-1:-1:-1;3405:804:13;-1:-1:-1;3405:804:13;:::i;:::-;;;;-1:-1:-1;;;;;3405:804:13;;;;;;;;;;;;;;1423:137:23;;;:::i;:::-;;963:24:13;;;:::i;659:77:23:-;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;4790:204:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4790:204:13;-1:-1:-1;;;;;4790:204:13;;:::i;4357:212::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4357:212:13;-1:-1:-1;;;;;4357:212:13;;:::i;993:37::-;;;:::i;920:::-;;;:::i;1731:107:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:23;-1:-1:-1;;;;;1731:107:23;;:::i;3405:804:13:-;3674:7;863:9:23;:7;:9::i;:::-;855:18;;;;;;;;3693:29:13;3760:13;3725:238;;;;;;;;;3788:7;:5;:7::i;:::-;-1:-1:-1;;;;;3725:238:13;;;;;;;;;;;;3821:22;;;;3725:238;;;;;;;;3858:9;;;3888:13;3915:9;;3938:15;;3725:238;;:::i;:::-;;;;;;;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3725:238:13;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;-1:-1;;;;;;;;;3725:238:13;;;;;;;-1:-1:-1;3725:238:13;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;3725:238:13;;;;;;;;;;;;;;157:16:-1;-1:-1;3725:238:13;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;3725:238:13;;;;;;;;;;;-1:-1:-1;3725:238:13;;;;;1:33:-1;99:1;81:16;;;74:27;;;3725:238:13;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3725:238:13;;;;-1:-1:-1;3725:238:13;-1:-1:-1;99:1;;-1:-1;;;;;;;;;;3725:238:13;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4006:22:13;;3974:121;;;;;;-1:-1:-1;;;;;3974:121:13;;;;;;;;;3693:270;;-1:-1:-1;4006:22:13;;;3974:77;;:121;;;;;4006:22;;3974:121;;;;;;;;4006:22;;3974:121;;;5:2:-1;;;;30:1;27;20:12;5:2;3974:121:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4110:55:13;;-1:-1:-1;;;;;4110:55:13;;;-1:-1:-1;4132:10:13;;-1:-1:-1;4110:55:13;;;;;4190:11;3405:804;-1:-1:-1;;;;;;;;3405:804:13:o;1423:137:23:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:23;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;1534:19:23;;;1423:137::o;963:24:13:-;;;-1:-1:-1;;;;;963:24:13;;:::o;659:77:23:-;697:7;723:6;-1:-1:-1;;;;;723:6:23;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:23;1042:10;:20;;979:90::o;4790:204:13:-;863:9:23;:7;:9::i;:::-;855:18;;;;;;;;-1:-1:-1;;;;;4882:30:13;;;;4874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4959:9;:28;;-1:-1:-1;;4959:28:13;-1:-1:-1;;;;;4959:28:13;;;;;;;;;;4790:204::o;4357:212::-;863:9:23;:7;:9::i;:::-;855:18;;;;;;;;-1:-1:-1;;;;;4447:29:13;;;;4439:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:22;:40;;-1:-1:-1;;4522:40:13;-1:-1:-1;;;;;4522:40:13;;;;;;;;;;4357:212::o;993:37::-;;;-1:-1:-1;;;;;993:37:13;;:::o;920:::-;;;-1:-1:-1;;;;;920:37:13;;:::o;1731:107:23:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1982:183::-;-1:-1:-1;;;;;2055:22:23;;;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:23;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;2141:17:23;-1:-1:-1;;;;;2141:17:23;;;;;;;;;;1982:183::o;869:4127:13:-;;;;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2019 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.2;\n\nimport \"./MarketContractMPX.sol\";\nimport \"../MarketContractRegistryInterface.sol\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/// @title MarketContractFactoryMPX\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractFactoryMPX is Ownable {\n    address public marketContractRegistry;\n    address public oracleHub;\n    address public MARKET_COLLATERAL_POOL;\n\n    event MarketContractCreated(address indexed creator, address indexed contractAddress);\n\n    /// @dev deploys our factory and ties it to the supplied registry address\n    /// @param registryAddress - address of our MARKET registry\n    /// @param collateralPoolAddress - address of our MARKET Collateral pool\n    /// @param oracleHubAddress - address of the MPX oracle\n    constructor(\n        address registryAddress,\n        address collateralPoolAddress,\n        address oracleHubAddress\n    ) public {\n        require(registryAddress != address(0), \"registryAddress can not be null\");\n        require(\n            collateralPoolAddress != address(0),\n            \"collateralPoolAddress can not be null\"\n        );\n        require(oracleHubAddress != address(0), \"oracleHubAddress can not be null\");\n\n        marketContractRegistry = registryAddress;\n        MARKET_COLLATERAL_POOL = collateralPoolAddress;\n        oracleHub = oracleHubAddress;\n    }\n\n    /// @dev Deploys a new instance of a market contract and adds it to the whitelist.\n    /// @param contractNames bytes32 array of names\n    ///     contractName            name of the market contract\n    ///     longTokenSymbol         symbol for the long token\n    ///     shortTokenSymbol        symbol for the short token\n    /// @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n    /// @param contractSpecs array of unsigned integers including:\n    ///     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n    ///     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n    ///     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n    ///                             an integer\n    ///     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n    ///     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n    ///     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n    ///     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n    /// @param oracleURL url of data\n    /// @param oracleStatistic statistic type (lastPrice, vwap, etc)\n    function deployMarketContractMPX(\n        bytes32[3] calldata contractNames,\n        address collateralTokenAddress,\n        uint256[7] calldata contractSpecs,\n        string calldata oracleURL,\n        string calldata oracleStatistic\n    ) external onlyOwner returns (address) {\n        MarketContractMPX mktContract = new MarketContractMPX(\n            contractNames,\n            [owner(), collateralTokenAddress, MARKET_COLLATERAL_POOL],\n            oracleHub, /*  */\n            contractSpecs,\n            oracleURL,\n            oracleStatistic\n        );\n\n        MarketContractRegistryInterface(marketContractRegistry).addAddressToWhiteList(\n            address(mktContract)\n        );\n        emit MarketContractCreated(msg.sender, address(mktContract));\n        return address(mktContract);\n    }\n\n    /// @dev allows for the owner to set the desired registry for contract creation.\n    /// @param registryAddress desired registry address.\n    function setRegistryAddress(address registryAddress) external onlyOwner {\n        require(registryAddress != address(0), \"registryAddress can not be null\");\n        marketContractRegistry = registryAddress;\n    }\n\n    /// @dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n    /// contracts\n    /// @param oracleHubAddress   address of the oracle hub, cannot be null address\n    function setOracleHubAddress(address oracleHubAddress) external onlyOwner {\n        require(oracleHubAddress != address(0), \"oracleHubAddress can not be null\");\n        oracleHub = oracleHubAddress;\n    }\n}\n",
  "sourcePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol",
  "ast": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol",
    "exportedSymbols": {
      "MarketContractFactoryMPX": [
        3518
      ]
    },
    "id": 3519,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3350,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:13"
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "./MarketContractMPX.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 3662,
        "src": "632:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContractRegistryInterface.sol",
        "file": "../MarketContractRegistryInterface.sol",
        "id": 3352,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 3349,
        "src": "666:48:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3353,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 4279,
        "src": "716:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3354,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4278,
              "src": "906:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4278",
                "typeString": "contract Ownable"
              }
            },
            "id": 3355,
            "nodeType": "InheritanceSpecifier",
            "src": "906:7:13"
          }
        ],
        "contractDependencies": [
          3661,
          4278
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractFactoryMPX\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3518,
        "linearizedBaseContracts": [
          3518,
          4278
        ],
        "name": "MarketContractFactoryMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3357,
            "name": "marketContractRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "920:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3359,
            "name": "oracleHub",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "963:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3358,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3361,
            "name": "MARKET_COLLATERAL_POOL",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "993:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3360,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "993:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3367,
            "name": "MarketContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3363,
                  "indexed": true,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1065:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3365,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1090:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:58:13"
            },
            "src": "1037:86:13"
          },
          {
            "body": {
              "id": 3415,
              "nodeType": "Block",
              "src": "1539:449:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3377,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3369,
                          "src": "1557:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1584:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1576:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1557:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265676973747279416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:33:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        },
                        "value": "registryAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        }
                      ],
                      "id": 3376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1549:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:73:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3386,
                          "name": "collateralPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3371,
                          "src": "1653:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1686:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1678:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1678:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1653:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6c6c61746572616c506f6f6c416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1702:39:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ad8df12ca8d0b1bf13b49b6113597e40467fc30fc884b50cd27df3fbc337295",
                          "typeString": "literal_string \"collateralPoolAddress can not be null\""
                        },
                        "value": "collateralPoolAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ad8df12ca8d0b1bf13b49b6113597e40467fc30fc884b50cd27df3fbc337295",
                          "typeString": "literal_string \"collateralPoolAddress can not be null\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1632:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:119:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:119:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3395,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3373,
                          "src": "1769:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1797:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1789:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1789:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1769:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:34:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        },
                        "value": "oracleHubAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        }
                      ],
                      "id": 3394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1761:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:75:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3403,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "1847:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3404,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3369,
                      "src": "1872:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1847:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3406,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:40:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3407,
                      "name": "MARKET_COLLATERAL_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3361,
                      "src": "1897:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3408,
                      "name": "collateralPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3371,
                      "src": "1922:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1897:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3410,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3411,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "1953:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3412,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3373,
                      "src": "1965:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1953:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3414,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:28:13"
                }
              ]
            },
            "documentation": "@dev deploys our factory and ties it to the supplied registry address\n @param registryAddress - address of our MARKET registry\n @param collateralPoolAddress - address of our MARKET Collateral pool\n @param oracleHubAddress - address of the MPX oracle",
            "id": 3416,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3369,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1429:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3371,
                  "name": "collateralPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1462:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3373,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1501:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:112:13"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:13"
            },
            "scope": 3518,
            "src": "1408:580:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "3683:526:13",
              "statements": [
                {
                  "assignments": [
                    3438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3438,
                      "name": "mktContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "3693:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                        "typeString": "contract MarketContractMPX"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3437,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3661,
                        "src": "3693:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3441,
                        "name": "contractNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "3760:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                          "typeString": "bytes32[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4203,
                              "src": "3788:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3788:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3444,
                            "name": "collateralTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3422,
                            "src": "3797:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3445,
                            "name": "MARKET_COLLATERAL_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3361,
                            "src": "3821:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3446,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3787:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3447,
                        "name": "oracleHub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "3858:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3448,
                        "name": "contractSpecs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "3888:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3449,
                        "name": "oracleURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3428,
                        "src": "3915:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3450,
                        "name": "oracleStatistic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "3938:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                          "typeString": "bytes32[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3725:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_bytes32_$3_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MarketContractMPX_$3661_$",
                        "typeString": "function (bytes32[3] memory,address[3] memory,address,uint256[7] memory,string memory,string memory) returns (contract MarketContractMPX)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3439,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3661,
                        "src": "3729:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:238:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                      "typeString": "contract MarketContractMPX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3693:270:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3458,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4073:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 3457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4065:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4065:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3454,
                            "name": "marketContractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3357,
                            "src": "4006:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3453,
                          "name": "MarketContractRegistryInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3348,
                          "src": "3974:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MarketContractRegistryInterface_$3348_$",
                            "typeString": "type(contract MarketContractRegistryInterface)"
                          }
                        },
                        "id": 3455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3974:55:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$3348",
                          "typeString": "contract MarketContractRegistryInterface"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAddressToWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3340,
                      "src": "3974:77:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:121:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:121:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5041,
                          "src": "4132:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4132:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3466,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4152:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 3465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4144:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4144:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3462,
                      "name": "MarketContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3367,
                      "src": "4110:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:55:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3469,
                  "nodeType": "EmitStatement",
                  "src": "4105:60:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3471,
                        "name": "mktContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3438,
                        "src": "4190:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      ],
                      "id": 3470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4182:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3436,
                  "id": 3473,
                  "nodeType": "Return",
                  "src": "4175:27:13"
                }
              ]
            },
            "documentation": "@dev Deploys a new instance of a market contract and adds it to the whitelist.\n @param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3433,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3432,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "3655:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3655:9:13"
              }
            ],
            "name": "deployMarketContractMPX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3420,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3447:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3417,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3447:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3419,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3455:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3447:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3422,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3490:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3490:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3426,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3530:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3423,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3530:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3425,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3538:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3530:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3573:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3430,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3608:31:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3429,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3437:208:13"
            },
            "returnParameters": {
              "id": 3436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3674:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3674:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3673:9:13"
            },
            "scope": 3518,
            "src": "3405:804:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3495,
              "nodeType": "Block",
              "src": "4429:140:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3483,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3477,
                          "src": "4447:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4474:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4466:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4466:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4447:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265676973747279416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:33:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        },
                        "value": "registryAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        }
                      ],
                      "id": 3482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4439:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4439:73:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "4439:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3491,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "4522:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3492,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3477,
                      "src": "4547:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4522:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3494,
                  "nodeType": "ExpressionStatement",
                  "src": "4522:40:13"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set the desired registry for contract creation.\n @param registryAddress desired registry address.",
            "id": 3496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3480,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3479,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4419:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4419:9:13"
              }
            ],
            "name": "setRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "4385:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4384:25:13"
            },
            "returnParameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4429:0:13"
            },
            "scope": 3518,
            "src": "4357:212:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3516,
              "nodeType": "Block",
              "src": "4864:130:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3504,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3498,
                          "src": "4882:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4910:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4902:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4882:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:34:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        },
                        "value": "oracleHubAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        }
                      ],
                      "id": 3503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4874:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "4874:75:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3512,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "4959:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3513,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "4971:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4959:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3515,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:28:13"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n contracts\n @param oracleHubAddress   address of the oracle hub, cannot be null address",
            "id": 3517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3501,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3500,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4854:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4854:9:13"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3517,
                  "src": "4819:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4818:26:13"
            },
            "returnParameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:0:13"
            },
            "scope": 3518,
            "src": "4790:204:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3519,
        "src": "869:4127:13"
      }
    ],
    "src": "608:4389:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol",
    "exportedSymbols": {
      "MarketContractFactoryMPX": [
        3518
      ]
    },
    "id": 3519,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3350,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:13"
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "./MarketContractMPX.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 3662,
        "src": "632:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContractRegistryInterface.sol",
        "file": "../MarketContractRegistryInterface.sol",
        "id": 3352,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 3349,
        "src": "666:48:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3353,
        "nodeType": "ImportDirective",
        "scope": 3519,
        "sourceUnit": 4279,
        "src": "716:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3354,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4278,
              "src": "906:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4278",
                "typeString": "contract Ownable"
              }
            },
            "id": 3355,
            "nodeType": "InheritanceSpecifier",
            "src": "906:7:13"
          }
        ],
        "contractDependencies": [
          3661,
          4278
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractFactoryMPX\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3518,
        "linearizedBaseContracts": [
          3518,
          4278
        ],
        "name": "MarketContractFactoryMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3357,
            "name": "marketContractRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "920:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "920:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3359,
            "name": "oracleHub",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "963:24:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3358,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3361,
            "name": "MARKET_COLLATERAL_POOL",
            "nodeType": "VariableDeclaration",
            "scope": 3518,
            "src": "993:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3360,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "993:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3367,
            "name": "MarketContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3363,
                  "indexed": true,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1065:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3365,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "1090:31:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:58:13"
            },
            "src": "1037:86:13"
          },
          {
            "body": {
              "id": 3415,
              "nodeType": "Block",
              "src": "1539:449:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3377,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3369,
                          "src": "1557:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1584:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1576:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1557:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265676973747279416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:33:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        },
                        "value": "registryAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        }
                      ],
                      "id": 3376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1549:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:73:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3386,
                          "name": "collateralPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3371,
                          "src": "1653:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1686:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1678:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1678:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1653:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6c6c61746572616c506f6f6c416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1702:39:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ad8df12ca8d0b1bf13b49b6113597e40467fc30fc884b50cd27df3fbc337295",
                          "typeString": "literal_string \"collateralPoolAddress can not be null\""
                        },
                        "value": "collateralPoolAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ad8df12ca8d0b1bf13b49b6113597e40467fc30fc884b50cd27df3fbc337295",
                          "typeString": "literal_string \"collateralPoolAddress can not be null\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1632:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:119:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:119:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3395,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3373,
                          "src": "1769:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1797:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1789:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1789:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1769:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:34:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        },
                        "value": "oracleHubAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        }
                      ],
                      "id": 3394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "1761:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:75:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3403,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "1847:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3404,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3369,
                      "src": "1872:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1847:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3406,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:40:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3407,
                      "name": "MARKET_COLLATERAL_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3361,
                      "src": "1897:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3408,
                      "name": "collateralPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3371,
                      "src": "1922:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1897:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3410,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3411,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "1953:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3412,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3373,
                      "src": "1965:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1953:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3414,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:28:13"
                }
              ]
            },
            "documentation": "@dev deploys our factory and ties it to the supplied registry address\n @param registryAddress - address of our MARKET registry\n @param collateralPoolAddress - address of our MARKET Collateral pool\n @param oracleHubAddress - address of the MPX oracle",
            "id": 3416,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3369,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1429:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3371,
                  "name": "collateralPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1462:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3373,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3416,
                  "src": "1501:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1419:112:13"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:13"
            },
            "scope": 3518,
            "src": "1408:580:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "3683:526:13",
              "statements": [
                {
                  "assignments": [
                    3438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3438,
                      "name": "mktContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "3693:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                        "typeString": "contract MarketContractMPX"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3437,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3661,
                        "src": "3693:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3441,
                        "name": "contractNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "3760:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                          "typeString": "bytes32[3] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4203,
                              "src": "3788:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3788:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3444,
                            "name": "collateralTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3422,
                            "src": "3797:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3445,
                            "name": "MARKET_COLLATERAL_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3361,
                            "src": "3821:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 3446,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3787:57:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3447,
                        "name": "oracleHub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "3858:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3448,
                        "name": "contractSpecs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "3888:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3449,
                        "name": "oracleURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3428,
                        "src": "3915:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3450,
                        "name": "oracleStatistic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3430,
                        "src": "3938:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                          "typeString": "bytes32[3] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3725:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_bytes32_$3_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MarketContractMPX_$3661_$",
                        "typeString": "function (bytes32[3] memory,address[3] memory,address,uint256[7] memory,string memory,string memory) returns (contract MarketContractMPX)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3439,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3661,
                        "src": "3729:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:238:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                      "typeString": "contract MarketContractMPX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3693:270:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3458,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4073:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 3457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4065:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4065:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3454,
                            "name": "marketContractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3357,
                            "src": "4006:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3453,
                          "name": "MarketContractRegistryInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3348,
                          "src": "3974:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MarketContractRegistryInterface_$3348_$",
                            "typeString": "type(contract MarketContractRegistryInterface)"
                          }
                        },
                        "id": 3455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3974:55:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$3348",
                          "typeString": "contract MarketContractRegistryInterface"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAddressToWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3340,
                      "src": "3974:77:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:121:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:121:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5041,
                          "src": "4132:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4132:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3466,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3438,
                            "src": "4152:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 3465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4144:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4144:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3462,
                      "name": "MarketContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3367,
                      "src": "4110:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:55:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3469,
                  "nodeType": "EmitStatement",
                  "src": "4105:60:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3471,
                        "name": "mktContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3438,
                        "src": "4190:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$3661",
                          "typeString": "contract MarketContractMPX"
                        }
                      ],
                      "id": 3470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4182:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3436,
                  "id": 3473,
                  "nodeType": "Return",
                  "src": "4175:27:13"
                }
              ]
            },
            "documentation": "@dev Deploys a new instance of a market contract and adds it to the whitelist.\n @param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3433,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3432,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "3655:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3655:9:13"
              }
            ],
            "name": "deployMarketContractMPX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3420,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3447:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3417,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3447:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3419,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3455:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3447:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3422,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3490:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3490:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3426,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3530:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3423,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3530:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3425,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3538:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3530:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3573:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3430,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3608:31:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3429,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3437:208:13"
            },
            "returnParameters": {
              "id": 3436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "3674:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3674:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3673:9:13"
            },
            "scope": 3518,
            "src": "3405:804:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3495,
              "nodeType": "Block",
              "src": "4429:140:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3483,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3477,
                          "src": "4447:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4474:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4466:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4466:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4447:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265676973747279416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:33:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        },
                        "value": "registryAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b37b1b0d2a7fb6860dd3df3cc2b4e00dd1023d97d39abf266ee6ab06a1fffb62",
                          "typeString": "literal_string \"registryAddress can not be null\""
                        }
                      ],
                      "id": 3482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4439:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4439:73:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "4439:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3491,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "4522:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3492,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3477,
                      "src": "4547:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4522:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3494,
                  "nodeType": "ExpressionStatement",
                  "src": "4522:40:13"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set the desired registry for contract creation.\n @param registryAddress desired registry address.",
            "id": 3496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3480,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3479,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4419:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4419:9:13"
              }
            ],
            "name": "setRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "4385:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4384:25:13"
            },
            "returnParameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4429:0:13"
            },
            "scope": 3518,
            "src": "4357:212:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3516,
              "nodeType": "Block",
              "src": "4864:130:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3504,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3498,
                          "src": "4882:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4910:1:13",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4902:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4882:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f7261636c65487562416464726573732063616e206e6f74206265206e756c6c",
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:34:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        },
                        "value": "oracleHubAddress can not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da04db9fad2a4a1b5f22ca8f2de59d209d3052e637980215c2c69043e3c5772b",
                          "typeString": "literal_string \"oracleHubAddress can not be null\""
                        }
                      ],
                      "id": 3503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4874:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:75:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "4874:75:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3512,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "4959:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3513,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "4971:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4959:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3515,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:28:13"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n contracts\n @param oracleHubAddress   address of the oracle hub, cannot be null address",
            "id": 3517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3501,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3500,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4854:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4854:9:13"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3517,
                  "src": "4819:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4818:26:13"
            },
            "returnParameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4864:0:13"
            },
            "scope": 3518,
            "src": "4790:204:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3519,
        "src": "869:4127:13"
      }
    ],
    "src": "608:4389:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x38ee3ff13b5d3453452a79e0799d83b2c8207bf126b2798fa512343680f643ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "MarketContractCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x979C9a70516C665B75CC05f701303f730f47c089",
      "transactionHash": "0xc68e2f93be4d4b1a665d874762e09534bd09925e18a087805b419fe3f697ace8"
    },
    "42": {
      "events": {
        "0x38ee3ff13b5d3453452a79e0799d83b2c8207bf126b2798fa512343680f643ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "MarketContractCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1d9F4ba40922d21E3f833AbeD0d6fA9aB74dbb96",
      "transactionHash": "0x54b9ba395c12a2057f23757fa144eb375440741d24a9ac3c899a084fb173be56"
    },
    "1337": {
      "events": {
        "0x38ee3ff13b5d3453452a79e0799d83b2c8207bf126b2798fa512343680f643ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "MarketContractCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x33DeF1aA867Be09809F3a01CE41d5eC1888846c9",
      "transactionHash": "0x0cef1f489753ee0f89214e3454ce52e654fddc9b3b11eee76de95f3d25085dbd"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-17T15:27:13.582Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Phil Elsasser <phil@marketprotocol.io>",
    "methods": {
      "constructor": {
        "details": "deploys our factory and ties it to the supplied registry address",
        "params": {
          "collateralPoolAddress": "- address of our MARKET Collateral pool",
          "oracleHubAddress": "- address of the MPX oracle",
          "registryAddress": "- address of our MARKET registry"
        }
      },
      "deployMarketContractMPX(bytes32[3],address,uint256[7],string,string)": {
        "details": "Deploys a new instance of a market contract and adds it to the whitelist.",
        "params": {
          "collateralTokenAddress": "address of the ERC20 token that will be used for collateral and pricing",
          "contractNames": "bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token",
          "contractSpecs": "array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement",
          "oracleStatistic": "statistic type (lastPrice, vwap, etc)",
          "oracleURL": "url of data"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setOracleHubAddress(address)": {
        "details": "allows for the owner to set a new oracle hub address which is responsible for providing data to our contracts",
        "params": {
          "oracleHubAddress": "address of the oracle hub, cannot be null address"
        }
      },
      "setRegistryAddress(address)": {
        "details": "allows for the owner to set the desired registry for contract creation.",
        "params": {
          "registryAddress": "desired registry address."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "MarketContractFactoryMPX"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}