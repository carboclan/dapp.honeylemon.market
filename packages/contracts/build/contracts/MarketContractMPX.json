{
  "contractName": "MarketContractMPX",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "LONG_POSITION_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_URL",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_STATISTIC",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SETTLEMENT_DELAY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SHORT_POSITION_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_FEE_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToRedeem",
          "type": "uint256"
        },
        {
          "name": "redeemer",
          "type": "address"
        }
      ],
      "name": "redeemShortToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementTimeStamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_HUB_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPostSettlementDelay",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToRedeem",
          "type": "uint256"
        },
        {
          "name": "redeemer",
          "type": "address"
        }
      ],
      "name": "redeemLongToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "qtyToMint",
          "type": "uint256"
        },
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "mintPositionTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKT_TOKEN_FEE_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_PER_UNIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_POOL_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractNames",
          "type": "bytes32[3]"
        },
        {
          "name": "baseAddresses",
          "type": "address[3]"
        },
        {
          "name": "oracleHubAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[7]"
        },
        {
          "name": "oracleURL",
          "type": "string"
        },
        {
          "name": "oracleStatistic",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "oracleCallBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "arbitrateSettlement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "name": "setOracleHubAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LONG_POSITION_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_DECIMAL_PLACES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_TOKEN_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSettled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_URL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_STATISTIC\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SETTLEMENT_DELAY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SHORT_POSITION_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_TOKEN_FEE_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToRedeem\",\"type\":\"uint256\"},{\"name\":\"redeemer\",\"type\":\"address\"}],\"name\":\"redeemShortToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"oracleCallBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"arbitrateSettlement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlementTimeStamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLE_HUB_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oracleHubAddress\",\"type\":\"address\"}],\"name\":\"setOracleHubAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXPIRATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPostSettlementDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToRedeem\",\"type\":\"uint256\"},{\"name\":\"redeemer\",\"type\":\"address\"}],\"name\":\"redeemLongToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_FLOOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QTY_MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"qtyToMint\",\"type\":\"uint256\"},{\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"mintPositionTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MKT_TOKEN_FEE_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_PER_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLATERAL_POOL_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlementPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"contractNames\",\"type\":\"bytes32[3]\"},{\"name\":\"baseAddresses\",\"type\":\"address[3]\"},{\"name\":\"oracleHubAddress\",\"type\":\"address\"},{\"name\":\"contractSpecs\",\"type\":\"uint256[7]\"},{\"name\":\"oracleURL\",\"type\":\"string\"},{\"name\":\"oracleStatistic\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdatedLastPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"settlePrice\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Phil Elsasser <phil@marketprotocol.io>\",\"methods\":{\"arbitrateSettlement(uint256)\":{\"details\":\"allows us to arbitrate a settlement price by updating the settlement value, and resetting the delay for funds to be released. Could also be used to allow us to force a contract into early settlement if a dispute arises that we believe is best resolved by early settlement.\",\"params\":{\"price\":\"settlement price\"}},\"constructor\":{\"params\":{\"baseAddresses\":\"array of 2 addresses needed for our contract including:     ownerAddress                    address of the owner of these contracts.     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing     collateralPoolAddress           address of our collateral pool contract\",\"contractNames\":\"bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token\",\"contractSpecs\":\"array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\",\"oracleHubAddress\":\"address of our oracle hub providing the callbacks\",\"oracleStatistic\":\"statistic type (lastPrice, vwap, etc)\",\"oracleURL\":\"url of data\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mintPositionTokens(uint256,address)\":{\"params\":{\"minter\":\"address of minter to receive tokens\",\"qtyToMint\":\"qty in base units of how many short and long tokens to mint\"}},\"oracleCallBack(uint256)\":{\"details\":\"called only by our oracle hub when a new price is available provided by our oracle.\",\"params\":{\"price\":\"lastPrice provided by the oracle.\"}},\"owner()\":{\"return\":\"the address of the owner.\"},\"redeemLongToken(uint256,address)\":{\"params\":{\"qtyToRedeem\":\"qty in base units of how many tokens to redeem\",\"redeemer\":\"address of person redeeming tokens\"}},\"redeemShortToken(uint256,address)\":{\"params\":{\"qtyToRedeem\":\"qty in base units of how many tokens to redeem\",\"redeemer\":\"address of person redeeming tokens\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setOracleHubAddress(address)\":{\"details\":\"allows for the owner of the contract to change the oracle hub address if needed\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"MarketContractMPX - a MarketContract designed to be used with our internal oracle service\"},\"userdoc\":{\"methods\":{\"isPostSettlementDelay()\":{\"notice\":\"checks to see if a contract is settled, and that the settlement delay has passed\"},\"mintPositionTokens(uint256,address)\":{\"notice\":\"called only by our collateral pool to create long and short position tokens\"},\"redeemLongToken(uint256,address)\":{\"notice\":\"called only by our collateral pool to redeem long position tokens\"},\"redeemShortToken(uint256,address)\":{\"notice\":\"called only by our collateral pool to redeem short position tokens\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol\":\"MarketContractMPX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/MathLib.sol\":{\"keccak256\":\"0xe7069fcd38bcd09a3ed7e0aecbeb9e4fd5c7ac7b1bdd2f6865e26b97bbe0b679\",\"urls\":[\"bzzr://3e349a8352b3d4f25ec8e684a36c2cbf8fc4cda9d230a5331b101a8c80ac23ee\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/StringLib.sol\":{\"keccak256\":\"0xfe9df18e4239bd30aa3a257a7cf15665547ec0a47bd5ec05566ef0efe390b551\",\"urls\":[\"bzzr://763e42c56f8bbd8d091c17c754e1ab28e8d439d797827db9589f0a9fbf6a814b\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContract.sol\":{\"keccak256\":\"0xf5654f0e62eb7cf41bb48e5c069b03efefe33778c9e2ba867c5a616891ad1ce3\",\"urls\":[\"bzzr://1c1860bb8f0de2ab378d0e8a0c0b697c4f2b06dd2157472aa934f115e266fbf2\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol\":{\"keccak256\":\"0x98a1140ed6c43831e3e2dff78d0851996ab9c0200d1d5dfcabe1fd23c40a3932\",\"urls\":[\"bzzr://f4fa7017ace12d45a391e9e7278a346eb87c7e50d97d95cc9eadc6c404e38b74\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/tokens/PositionToken.sol\":{\"keccak256\":\"0xb27773c7601c1ca550ce926cbaa0fb94aca6d3a9dbcf63555187449154d0481d\",\"urls\":[\"bzzr://4e178aac5b6bde395c90ae516f0319ffe62608bd8eb8a92027161f200c5d3026\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x608060405262015180600c556012805460ff191690553480156200002257600080fd5b50604051620028353803806200283583398101806040526102008110156200004957600080fd5b60c08201516101c083018051606085019360e0860192908601918691906401000000008111156200007957600080fd5b820160208101848111156200008d57600080fd5b8151640100000000811182820187101715620000a857600080fd5b50509291906020018051640100000000811115620000c557600080fd5b82016020810184811115620000d957600080fd5b8151640100000000811182820187101715620000f457600080fd5b505060008054600160a060020a03191633178082556040519295508a94508993508792600160a060020a03919091169190600080516020620027f2833981519152908290a3805160058190556020820151600481905511620001a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180620027c8602a913960400191505060405180910390fd5b6040810151600655606081015160075560c0810151600b81905542106200022a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f45585049524154494f4e206d75737420626520696e2074686520667574757265604482015290519081900360640190fd5b60075415156200029b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5154595f4d554c5449504c4945522063616e6e6f742062652030000000000000604482015290519081900360640190fd5b602082015160028054600160a060020a03928316600160a060020a031991821617909155604084015160038054919093169116179055600554600454600754620002f592919064010000000062000da2620005d082021704565b6008556005546004805460075462000324939285905b602002015164010000000062000dbf6200060382021704565b600955600580546004546007546200033e9385906200030b565b600a55620003628360005b602002015164010000000062000e046200066b82021704565b8051620003789160019160209091019062000935565b5060006200038884600162000349565b600062000394620009ba565b8080602001806020018460ff1660ff168152602001838103835260238152602001806200281260239139604001838103825285818151815260200191508051906020019080838360005b83811015620003f8578181015183820152602001620003de565b50505050905090810190601f168015620004265780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156200044a573d6000803e3d6000fd5b50905060006200045c85600262000349565b600162000468620009ba565b8080602001806020018460ff1660ff16815260200183810383526024815260200180620027a460249139604001838103825285818151815260200191508051906020019080838360005b83811015620004cc578181015183820152602001620004b2565b50505050905090810190601f168015620004fa5780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156200051e573d6000803e3d6000fd5b50600d8054600160a060020a03808616600160a060020a031992831617909255600e80549284169290911691909117905590506200056c846000602002015164010000000062000703810204565b505084516200058693506013925060208601915062000935565b5080516200059c90601490602084019062000935565b505060128054600160a060020a039094166101000261010060a860020a03199094169390931790925550620009e892505050565b6000620005fb620005eb848664010000000062000739810204565b83640100000000620007b6810204565b949350505050565b60008060026200061d86886401000000006200084e810204565b8115156200062757fe5b04905061271062000656620006468387640100000000620007b6810204565b85640100000000620007b6810204565b8115156200066057fe5b049695505050505050565b60408051602080825281830190925260609182919060208201818038833901905050905060005b6020811015620006fc57838160208110620006a957fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028282815181101515620006db57fe5b906020010190600160f860020a031916908160001a90535060010162000692565b5092915050565b62000716640100000000620008c3810204565b15156200072257600080fd5b6200073681640100000000620008d5810204565b50565b600082821115620007ab57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d6174684c69623a207375627472616374696f6e206f766572666c6f77000000604482015290519081900360640190fd5b508082035b92915050565b6000821515620007c957506000620007b0565b828202828482811515620007d957fe5b04146200084757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f77604482015290519081900360640190fd5b9392505050565b6000828201838110156200084757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d6174684c69623a206164646974696f6e206f766572666c6f77000000000000604482015290519081900360640190fd5b600054600160a060020a031633145b90565b600160a060020a0381161515620008eb57600080fd5b60008054604051600160a060020a0380851693921691600080516020620027f283398151915291a360008054600160a060020a031916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200097857805160ff1916838001178555620009a8565b82800160010185558215620009a8579182015b82811115620009a85782518255916020019190600101906200098b565b50620009b6929150620009cb565b5090565b604051610d108062001a9483390190565b620008d291905b80821115620009b65760008155600101620009d2565b61109c80620009f86000396000f3fe608060405234801561001057600080fd5b506004361061020d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161012c578063c32b1dfa116100bf578063e158e02d1161008e578063e158e02d1461045f578063eaafb4fa14610467578063f2fde38b1461046f578063f348e8b2146104955761020d565b8063c32b1dfa1461041b578063ca361d6714610423578063cabd58341461042b578063db3fa771146104575761020d565b8063b5471dee116100fb578063b5471dee146103d7578063bb4b5734146103df578063bd220dae146103e7578063c25c4444146103ef5761020d565b80638da5cb5b146103995780638f32d59b146103a1578063986c2063146103a9578063a8a5d270146103b15761020d565b80635b3f1e3f116101a45780636fbce940116101735780636fbce9401461034f578063715018a61461036c5780637df237531461037457806386aa7cdc146103915761020d565b80635b3f1e3f146103095780635c7c705914610311578063614d08f8146103195780636d359467146103215761020d565b80633270bb5b116101e05780633270bb5b146102605780633d168eda1461027c5780634ac77f22146102f957806357d1ba25146103015761020d565b8063053f14da1461021257806322d1c35e1461022c5780632fed1b0014610250578063323bb77514610258575b600080fd5b61021a61049d565b60408051918252519081900360200190f35b6102346104a3565b60408051600160a060020a039092168252519081900360200190f35b61021a6104b2565b6102346104b8565b6102686104c7565b604080519115158252519081900360200190f35b6102846104d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61028461055e565b61021a6105b9565b6102346105bf565b61021a6105ce565b6102846105d4565b61034d6004803603604081101561033757600080fd5b5080359060200135600160a060020a031661062e565b005b61034d6004803603602081101561036557600080fd5b5035610704565b61034d6107be565b61034d6004803603602081101561038a57600080fd5b5035610828565b61021a6108e0565b6102346108e6565b6102686108f5565b610234610906565b61034d600480360360208110156103c757600080fd5b5035600160a060020a031661091a565b61021a6109ac565b61021a6109b2565b6102686109b8565b61034d6004803603604081101561040557600080fd5b5080359060200135600160a060020a03166109d8565b61021a610a92565b61021a610a98565b61034d6004803603604081101561044157600080fd5b5080359060200135600160a060020a0316610a9e565b61021a610bde565b61021a610be4565b610234610bea565b61034d6004803603602081101561048557600080fd5b5035600160a060020a0316610bf9565b61021a610c15565b600f5481565b600d54600160a060020a031681565b60065481565b600254600160a060020a031681565b60125460ff1681565b6013805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b505050505081565b6014805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b600c5481565b600e54600160a060020a031681565b60095481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105565780601f1061052b57610100808354040283529160200191610556565b600354600160a060020a0316331461067a5760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600e54604080517fc3501ff600000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a0384811660248301529151919092169163c3501ff691604480830192600092919082900301818387803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b505050505050565b6012546101009004600160a060020a0316331461076b576040805160e560020a62461bcd02815260206004820152601f60248201527f6f6e6c792063616c6c61626c6520627920746865206f7261636c652068756200604482015290519081900360640190fd5b60125460ff161561077b57600080fd5b600f8190556040805182815290517f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4829181900360200190a16107bb610c1b565b50565b6107c66108f5565b15156107d157600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6108306108f5565b151561083b57600080fd5b600554811015801561084f57506004548111155b151561088f5760405160e560020a62461bcd0281526004018080602001828103825260308152602001806110416030913960400191505060405180910390fd5b600f8190556040805182815290517f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4829181900360200190a16108d081610ce6565b506012805460ff19166001179055565b60115481565b600054600160a060020a031690565b600054600160a060020a0316331490565b6012546101009004600160a060020a031681565b6109226108f5565b151561092d57600080fd5b600160a060020a03811615156109775760405160e560020a62461bcd02815260040180806020018281038252602b815260200180611016602b913960400191505060405180910390fd5b60128054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60045481565b600b5481565b60125460009060ff1680156109d35750600c54601154014210155b905090565b600354600160a060020a03163314610a245760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600d54604080517fc3501ff600000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a0384811660248301529151919092169163c3501ff691604480830192600092919082900301818387803b1580156106e857600080fd5b60055481565b60075481565b600354600160a060020a03163314610aea5760405160e560020a62461bcd028152600401808060200182810382526026815260200180610ff06026913960400191505060405180910390fd5b600d54604080517f7251cd0200000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a03848116602483015291519190921691637251cd0291604480830192600092919082900301818387803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050600e54604080517f7251cd0200000000000000000000000000000000000000000000000000000000815260048101879052600160a060020a0386811660248301529151919092169350637251cd029250604480830192600092919082900301818387803b1580156106e857600080fd5b600a5481565b60085481565b600354600160a060020a031681565b610c016108f5565b1515610c0c57600080fd5b6107bb81610d25565b60105481565b60125460ff1615610c76576040805160e560020a62461bcd02815260206004820152601b60248201527f436f6e747261637420697320616c726561647920736574746c65640000000000604482015290519081900360640190fd5b6000600b54421115610c9857506012805460ff19166001179055600f54610cd6565b600454600f5410610cb957506012805460ff19166001179055600454610cd6565b600554600f5411610cd657506012805460ff191660011790556005545b60125460ff16156107bb576107bb815b4260115560108190556040805182815290517f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c9181900360200190a150565b600160a060020a0381161515610d3a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000610db7610db18486610eb0565b83610f15565b949350505050565b6000806002610dce8688610f92565b811515610dd757fe5b049050612710610df0610dea8387610f15565b85610f15565b811515610df957fe5b049695505050505050565b60408051602080825281830190925260609182919060208201818038833901905050905060005b6020811015610ea957838160208110610e4057fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028282815181101515610e7157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610e2b565b5092915050565b600082821115610f0a576040805160e560020a62461bcd02815260206004820152601d60248201527f4d6174684c69623a207375627472616374696f6e206f766572666c6f77000000604482015290519081900360640190fd5b508082035b92915050565b6000821515610f2657506000610f0f565b828202828482811515610f3557fe5b0414610f8b576040805160e560020a62461bcd02815260206004820181905260248201527f4d6174684c69623a206d756c7469706c69636174696f6e206f766572666c6f77604482015290519081900360640190fd5b9392505050565b600082820183811015610f8b576040805160e560020a62461bcd02815260206004820152601a60248201527f4d6174684c69623a206164646974696f6e206f766572666c6f77000000000000604482015290519081900360640190fdfe4f6e6c792063616c6c61626c652066726f6d2074686520636f6c6c61746572616c20706f6f6c63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c20616464726573736172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473a165627a7a723058200db6e23f95aaf176d6bb7ed1e61c4eddcee255e64921de0c1df32be464113826002960806040523480156200001157600080fd5b5060405162000d1038038062000d10833981018060405260608110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b505060209091015160038054600160a060020a031916331790819055604051929450909250600160a060020a0316906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38251620001379060049060208601906200018f565b5081516200014d9060059060208501906200018f565b506006805460ff1916905560ff811660018111156200016857fe5b6006805461ff0019166101008360018111156200018157fe5b021790555050505062000234565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d257805160ff191683800117855562000202565b8280016001018555821562000202579182015b8281111562000202578251825591602001919060010190620001e5565b506200021092915062000214565b5090565b6200023191905b808211156200021057600081556001016200021b565b90565b610acc80620002446000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100bf578063a9059cbb1161008e578063a9059cbb1461034b578063b003b12714610377578063c3501ff6146103a3578063dd62ed3e146103cf578063f2fde38b146103fd57610133565b80638da5cb5b146102eb5780638f32d59b1461030f57806395d89b4114610317578063a457c2d71461031f57610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806370a082311461028f578063715018a6146102b55780637251cd02146102bf57610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610423565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104b1565b604080519115158252519081900360200190f35b6101fd6104c7565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a038135811691602081013590911690604001356104cd565b61024d610524565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a03813516906020013561052d565b6101fd600480360360208110156102a557600080fd5b5035600160a060020a0316610569565b6102bd610584565b005b6102bd600480360360408110156102d557600080fd5b5080359060200135600160a060020a03166105ee565b6102f361060f565b60408051600160a060020a039092168252519081900360200190f35b6101e161061e565b61014061062f565b6101e16004803603604081101561033557600080fd5b50600160a060020a03813516906020013561068a565b6101e16004803603604081101561036157600080fd5b50600160a060020a0381351690602001356106c6565b61037f6106d3565b6040518082600181111561038f57fe5b60ff16815260200191505060405180910390f35b6102bd600480360360408110156103b957600080fd5b5080359060200135600160a060020a03166106e1565b6101fd600480360360408110156103e557600080fd5b50600160a060020a03813581169160200135166106fe565b6102bd6004803603602081101561041357600080fd5b5035600160a060020a0316610729565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b505050505081565b60006104be338484610748565b50600192915050565b60025490565b60006104da8484846107d4565b600160a060020a03841660009081526001602090815260408083203380855292529091205461051a918691610515908663ffffffff6108a116565b610748565b5060019392505050565b60065460ff1681565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104be918590610515908663ffffffff6108b616565b600160a060020a031660009081526020819052604090205490565b61058c61061e565b151561059757600080fd5b600354604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36003805473ffffffffffffffffffffffffffffffffffffffff19169055565b6105f661061e565b151561060157600080fd5b61060b81836108cf565b5050565b600354600160a060020a031690565b600354600160a060020a0316331490565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104a95780601f1061047e576101008083540402835291602001916104a9565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104be918590610515908663ffffffff6108a116565b60006104be3384846107d4565b600654610100900460ff1681565b6106e961061e565b15156106f457600080fd5b61060b8183610979565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61073161061e565b151561073c57600080fd5b61074581610a22565b50565b600160a060020a038216151561075d57600080fd5b600160a060020a038316151561077257600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156107e957600080fd5b600160a060020a038316600090815260208190526040902054610812908263ffffffff6108a116565b600160a060020a038085166000908152602081905260408082209390935590841681522054610847908263ffffffff6108b616565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156108b057600080fd5b50900390565b6000828201838110156108c857600080fd5b9392505050565b600160a060020a03821615156108e457600080fd5b6002546108f7908263ffffffff6108b616565b600255600160a060020a038216600090815260208190526040902054610923908263ffffffff6108b616565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038216151561098e57600080fd5b6002546109a1908263ffffffff6108a116565b600255600160a060020a0382166000908152602081905260409020546109cd908263ffffffff6108a116565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a0381161515610a3757600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820e84632a21e1d3c1dfeda16193bfa4e314be3c997609c800669b52f32d961d3e800294d41524b45542050726f746f636f6c2053686f727420506f736974696f6e20546f6b656e50524943455f434150206d7573742062652067726561746572207468616e2050524943455f464c4f4f528be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04d41524b45542050726f746f636f6c204c6f6e6720506f736974696f6e20546f6b656e",
  "deployedBytecode": "",
  "sourceMap": "818:3947:14:-;;;1829:6:10;1795:40;;2052:29;;;-1:-1:-1;;2052:29:10;;;2645:444:14;5:2:-1;;;;30:1;27;20:12;5:2;2645:444:14;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2645:444:14;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;2645:444:14;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;515:6:23;:19;;-1:-1:-1;;;;;;515:19:23;524:10;515:19;;;;549:40;;2645:444:14;;-1:-1:-1;2914:13:14;;-1:-1:-1;2929:13:14;;-1:-1:-1;2944:13:14;;-1:-1:-1;;;;;582:6:23;;;;;515;-1:-1:-1;;;;;;;;;;;549:40:23;515:6;;549:40;3820:16:10;;3806:11;:30;;;3820:16;3858;;;3846:9;:28;;;-1:-1:-1;3884:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:16;;;;3973:20;:39;4039:16;;;;4022:14;:33;4078:16;;;;4065:10;:29;;;4125:3;-1:-1:-1;4104:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4183:14;;:19;;4175:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4271:16;;;;4244:24;:43;;-1:-1:-1;;;;;4244:43:10;;;-1:-1:-1;;;;;;4244:43:10;;;;;;;4323:16;;;;4297:23;:42;;;;;;;;;;;4417:11;;4442:9;;4465:14;;4371:118;;4417:11;4442:9;4371:32;;;;;;:118;:::i;:::-;4349:19;:140;4572:11;;4597:9;;;4620:14;;4531:143;;4572:11;4648:13;;:16;;;;;4531:27;;;;;;:143;:::i;:::-;4499:29;:175;4750:11;;;4775:9;;4798:14;;4709:143;;4826:13;;:16;;4709:143;4684:22;:168;4919:34;:13;4933:1;4919:16;;;;;:32;;;;;;:34;:::i;:::-;4903:50;;;;:13;;:50;;;;;;:::i;:::-;-1:-1:-1;4963:26:10;5074:34;:13;5088:1;5074:16;;:34;5128:29;4992:176;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4992:176:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4963:205:10;-1:-1:-1;5178:27:10;5291:34;:13;5305:1;5291:16;;:34;5345:30;5208:178;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5208:178:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5397:19:10;:43;;-1:-1:-1;;;;;5397:43:10;;;-1:-1:-1;;;;;;5397:43:10;;;;;;;5450:20;:45;;;;;;;;;;;;;;;5178:208;-1:-1:-1;5506:35:10;5524:13;5397:19;5524:16;;;;5506:17;;;;:35;:::i;:::-;-1:-1:-1;;2969:22:14;;;;-1:-1:-1;2969:10:14;;-1:-1:-1;2969:22:14;;;;-1:-1:-1;2969:22:14;:::i;:::-;-1:-1:-1;3001:34:14;;;;:16;;:34;;;;;:::i;:::-;-1:-1:-1;;3045:18:14;:37;;-1:-1:-1;;;;;3045:37:14;;;;;-1:-1:-1;;;;;;3045:37:14;;;;;;;;;;-1:-1:-1;818:3947:14;;-1:-1:-1;;;818:3947:14;3310:236:6;3458:7;3484:55;3493:30;3502:8;3512:10;3493:8;;;;:30;:::i;:::-;3525:13;3484:8;;;;:55;:::i;:::-;3477:62;3310:236;-1:-1:-1;;;;3310:236:6:o;3656:337::-;3833:7;;3899:1;3871:25;3875:8;3885:10;3871:3;;;;:25;:::i;:::-;:29;;;;;;;;;-1:-1:-1;3981:5:6;3917:61;3926:33;3871:29;3945:13;3926:8;;;;:33;:::i;:::-;3961:16;3917:8;;;;:61;:::i;:::-;:69;;;;;;;;;3656:337;-1:-1:-1;;;;;;3656:337:6:o;152:302:7:-;303:13;;;313:2;303:13;;;;;;;;;248;;;;303;;;;21:6:-1;;104:10;303:13:7;87:34:-1;135:17;;-1:-1;303:13:7;277:39;;331:9;326:87;346:2;342:1;:6;326:87;;;385:14;400:1;385:17;;;;;;;;;;369:10;380:1;369:13;;;;;;;;;;;;;;:33;-1:-1:-1;;;;;369:33:7;;;;;;;;-1:-1:-1;350:3:7;;326:87;;;-1:-1:-1;436:10:7;152:302;-1:-1:-1;;152:302:7:o;1731:107:23:-;863:9;:7;;;;:9;:::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;;;;:28;:::i;:::-;1731:107;:::o;1322:159:6:-;1385:7;1412:6;;;;1404:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1469:5:6;;;1322:159;;;;;:::o;866:245::-;929:7;952:6;;948:45;;;-1:-1:-1;981:1:6;974:8;;948:45;1015:5;;;1019:1;1015;:5;1038;;;;;;;;:10;1030:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:1;866:245;-1:-1:-1;;;866:245:6:o;1487:174::-;1545:7;1576:5;;;1599:6;;;;1591:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90:23;1019:4;1056:6;-1:-1:-1;;;;;1056:6:23;1042:10;:20;979:90;;:::o;1982:183::-;-1:-1:-1;;;;;2055:22:23;;;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:23;;;;2114:6;;;-1:-1:-1;;;;;;;;;;;2093:38:23;;2141:6;:17;;-1:-1:-1;;;;;;2141:17:23;-1:-1:-1;;;;;2141:17:23;;;;;;;;;;1982:183::o;818:3947:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;818:3947:14;;;-1:-1:-1;818:3947:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "818:3947:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;818:3947:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1946:24:10;;;:::i;:::-;;;;;;;;;;;;;;;;1841:34;;;:::i;:::-;;;;-1:-1:-1;;;;;1841:34:10;;;;;;;;;;;;;;1331:35;;;:::i;1180:39::-;;;:::i;2052:29::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;908:24:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;908:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:30;;;:::i;1795:40:10:-;;;:::i;1881:35::-;;;:::i;1671:44::-;;;:::i;1147:27::-;;;:::i;6940:276::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6940:276:10;;;;;;-1:-1:-1;;;;;6940:276:10;;:::i;:::-;;3284:254:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3284:254:14;;:::i;1423:137:23:-;;;:::i;3884:337:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3884:337:14;;:::i;2012:34:10:-;;;:::i;659:77:23:-;;;:::i;979:90::-;;;:::i;869:33:14:-;;;:::i;4507:256::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4507:256:14;-1:-1:-1;;;;;4507:256:14;;:::i;1269:24:10:-;;;:::i;1764:25::-;;;:::i;7356:146::-;;;:::i;6439:274::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6439:274:10;;;;;;-1:-1:-1;;;;;6439:274:10;;:::i;1299:26::-;;;:::i;1444:29::-;;;:::i;5858:355::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5858:355:10;;;;;;-1:-1:-1;;;;;5858:355:10;;:::i;1721:37::-;;;:::i;1564:34::-;;;:::i;1225:38::-;;;:::i;1731:107:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:23;-1:-1:-1;;;;;1731:107:23;;:::i;1976:30:10:-;;;:::i;1946:24::-;;;;:::o;1841:34::-;;;-1:-1:-1;;;;;1841:34:10;;:::o;1331:35::-;;;;:::o;1180:39::-;;;-1:-1:-1;;;;;1180:39:10;;:::o;2052:29::-;;;;;;:::o;908:24:14:-;;;;;;;;;;;;;;;-1:-1:-1;;908:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;938:30::-;;;;;;;;;;;;;;;-1:-1:-1;;938:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:40:10;;;;:::o;1881:35::-;;;-1:-1:-1;;;;;1881:35:10;;:::o;1671:44::-;;;;:::o;1147:27::-;;;;;;;;;;;;;;;-1:-1:-1;;1147:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6940:276;9173:23;;-1:-1:-1;;;;;9173:23:10;9159:10;:37;9138:122;;;;-1:-1:-1;;;;;9138:122:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7153:20;;7139:70;;;;;;;;;;;;-1:-1:-1;;;;;7139:70:10;;;;;;;;;7153:20;;;;;7139:47;;:70;;;;;-1:-1:-1;;7139:70:10;;;;;;;-1:-1:-1;7153:20:10;7139:70;;;5:2:-1;;;;30:1;27;20:12;5:2;7139:70:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7139:70:10;;;;6940:276;;:::o;3284:254:14:-;4336:18;;;;;-1:-1:-1;;;;;4336:18:14;4322:10;:32;4314:76;;;;;-1:-1:-1;;;;;4314:76:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3363:9;;;;3362:10;3354:19;;;;;;3383:9;:17;;;3415:23;;;;;;;;;;;;;;;;;3448:17;:15;:17::i;:::-;3284:254;:::o;1423:137:23:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:23;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;1534:19:23;;;1423:137::o;3884:337:14:-;863:9:23;:7;:9::i;:::-;855:18;;;;;;;;3985:11:14;;3976:5;:20;;:42;;;;;4009:9;;4000:5;:18;;3976:42;3955:137;;;;;;-1:-1:-1;;;;;3955:137:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4102:9;:17;;;4134:23;;;;;;;;;;;;;;;;;4167:21;4182:5;4167:14;:21::i;:::-;-1:-1:-1;4198:9:14;:16;;-1:-1:-1;;4198:16:14;4210:4;4198:16;;;3884:337::o;2012:34:10:-;;;;:::o;659:77:23:-;697:7;723:6;-1:-1:-1;;;;;723:6:23;;659:77::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:23;1042:10;:20;;979:90::o;869:33:14:-;;;;;;-1:-1:-1;;;;;869:33:14;;:::o;4507:256::-;863:9:23;:7;:9::i;:::-;855:18;;;;;;;;-1:-1:-1;;;;;4610:30:14;;;;4589:120;;;;-1:-1:-1;;;;;4589:120:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4719:18;:37;;-1:-1:-1;;;;;4719:37:14;;;;;;-1:-1:-1;;4719:37:14;;;;;;;;;4507:256::o;1269:24:10:-;;;;:::o;1764:25::-;;;;:::o;7356:146::-;7433:9;;7410:4;;7433:9;;:62;;;;;7477:16;;7455:19;;:38;7447:3;:47;;7433:62;7426:69;;7356:146;:::o;6439:274::-;9173:23;;-1:-1:-1;;;;;9173:23:10;9159:10;:37;9138:122;;;;-1:-1:-1;;;;;9138:122:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6651:19;;6637:69;;;;;;;;;;;;-1:-1:-1;;;;;6637:69:10;;;;;;;;;6651:19;;;;;6637:46;;:69;;;;;-1:-1:-1;;6637:69:10;;;;;;;-1:-1:-1;6651:19:10;6637:69;;;5:2:-1;;;;30:1;27;20:12;1299:26:10;;;;:::o;1444:29::-;;;;:::o;5858:355::-;9173:23;;-1:-1:-1;;;;;9173:23:10;9159:10;:37;9138:122;;;;-1:-1:-1;;;;;9138:122:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6069:19;;6055:70;;;;;;;;;;;;-1:-1:-1;;;;;6055:70:10;;;;;;;;;6069:19;;;;;6055:51;;:70;;;;;-1:-1:-1;;6055:70:10;;;;;;;-1:-1:-1;6069:19:10;6055:70;;;5:2:-1;;;;30:1;27;20:12;5:2;6055:70:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6149:20:10;;6135:71;;;;;;;;;;;;-1:-1:-1;;;;;6135:71:10;;;;;;;;;6149:20;;;;;-1:-1:-1;6135:52:10;;-1:-1:-1;6135:71:10;;;;;-1:-1:-1;;6135:71:10;;;;;;;-1:-1:-1;6149:20:10;6135:71;;;5:2:-1;;;;30:1;27;20:12;1721:37:10;;;;:::o;1564:34::-;;;;:::o;1225:38::-;;;-1:-1:-1;;;;;1225:38:10;;:::o;1731:107:23:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;1976:30:10:-;;;;:::o;7719:882::-;7774:9;;;;7773:10;7765:50;;;;;-1:-1:-1;;;;;7765:50:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;7846:26;7892:10;;7886:3;:16;7882:629;;;-1:-1:-1;8010:9:10;:16;;-1:-1:-1;;8010:16:10;8022:4;8010:16;;;8100:9;;7882:629;;;8143:9;;8130;;:22;8126:385;;-1:-1:-1;8241:9:10;:16;;-1:-1:-1;;8241:16:10;8253:4;8241:16;;;8292:9;;8126:385;;;8335:11;;8322:9;;:24;8318:193;;-1:-1:-1;8438:9:10;:16;;-1:-1:-1;;8438:16:10;8450:4;8438:16;;;8489:11;;8318:193;8525:9;;;;8521:74;;;8550:34;8565:18;8756:205;8851:3;8829:19;:25;8864:15;:38;;;8917:37;;;;;;;;;;;;;;;;;8756:205;:::o;1982:183:23:-;-1:-1:-1;;;;;2055:22:23;;;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:23;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;2141:17:23;-1:-1:-1;;;;;2141:17:23;;;;;;;;;;1982:183::o;3310:236:6:-;3458:7;3484:55;3493:30;3502:8;3512:10;3493:8;:30::i;:::-;3525:13;3484:8;:55::i;:::-;3477:62;3310:236;-1:-1:-1;;;;3310:236:6:o;3656:337::-;3833:7;3852:16;3899:1;3871:25;3875:8;3885:10;3871:3;:25::i;:::-;:29;;;;;;;;3852:48;;3981:5;3917:61;3926:33;3935:8;3945:13;3926:8;:33::i;:::-;3961:16;3917:8;:61::i;:::-;:69;;;;;;;;;3656:337;-1:-1:-1;;;;;;3656:337:6:o;152:302:7:-;303:13;;;313:2;303:13;;;;;;;;;248;;;;303;;;;21:6:-1;;104:10;303:13:7;87:34:-1;135:17;;-1:-1;303:13:7;277:39;;331:9;326:87;346:2;342:1;:6;326:87;;;385:14;400:1;385:17;;;;;;;;;;369:10;380:1;369:13;;;;;;;;;;;;;;:33;;;;;;;;;;-1:-1:-1;350:3:7;;326:87;;;-1:-1:-1;436:10:7;152:302;-1:-1:-1;;152:302:7:o;1322:159:6:-;1385:7;1412:6;;;;1404:48;;;;;-1:-1:-1;;;;;1404:48:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1469:5:6;;;1322:159;;;;;:::o;866:245::-;929:7;952:6;;948:45;;;-1:-1:-1;981:1:6;974:8;;948:45;1015:5;;;1019:1;1015;:5;1038;;;;;;;;:10;1030:55;;;;;-1:-1:-1;;;;;1030:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:1;866:245;-1:-1:-1;;;866:245:6:o;1487:174::-;1545:7;1576:5;;;1599:6;;;;1591:45;;;;;-1:-1:-1;;;;;1591:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "/*\n    Copyright 2017-2019 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.2;\n\nimport \"../MarketContract.sol\";\n\n\n/// @title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractMPX is MarketContract {\n    address public ORACLE_HUB_ADDRESS;\n    string public ORACLE_URL;\n    string public ORACLE_STATISTIC;\n\n    /// @param contractNames bytes32 array of names\n    ///     contractName            name of the market contract\n    ///     longTokenSymbol         symbol for the long token\n    ///     shortTokenSymbol        symbol for the short token\n    /// @param baseAddresses array of 2 addresses needed for our contract including:\n    ///     ownerAddress                    address of the owner of these contracts.\n    ///     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n    ///     collateralPoolAddress           address of our collateral pool contract\n    /// @param oracleHubAddress     address of our oracle hub providing the callbacks\n    /// @param contractSpecs array of unsigned integers including:\n    ///     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n    ///     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n    ///     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n    ///                             an integer\n    ///     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n    ///     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n    ///     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n    ///     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n    /// @param oracleURL url of data\n    /// @param oracleStatistic statistic type (lastPrice, vwap, etc)\n    constructor(\n        bytes32[3] memory contractNames,\n        address[3] memory baseAddresses,\n        address oracleHubAddress,\n        uint256[7] memory contractSpecs,\n        string memory oracleURL,\n        string memory oracleStatistic\n    ) public MarketContract(contractNames, baseAddresses, contractSpecs) {\n        ORACLE_URL = oracleURL;\n        ORACLE_STATISTIC = oracleStatistic;\n        ORACLE_HUB_ADDRESS = oracleHubAddress;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @dev called only by our oracle hub when a new price is available provided by our oracle.\n    /// @param price lastPrice provided by the oracle.\n    function oracleCallBack(uint256 price) public onlyOracleHub {\n        require(!isSettled);\n        lastPrice = price;\n        emit UpdatedLastPrice(price);\n        checkSettlement(); // Verify settlement at expiration or requested early settlement.\n    }\n\n    /// @dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n    /// delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n    /// if a dispute arises that we believe is best resolved by early settlement.\n    /// @param price settlement price\n    function arbitrateSettlement(uint256 price) public onlyOwner {\n        require(\n            price >= PRICE_FLOOR && price <= PRICE_CAP,\n            \"arbitration price must be within contract bounds\"\n        );\n        lastPrice = price;\n        emit UpdatedLastPrice(price);\n        settleContract(price);\n        isSettled = true;\n    }\n\n    /// @dev allows calls only from the oracle hub.\n    modifier onlyOracleHub() {\n        require(msg.sender == ORACLE_HUB_ADDRESS, \"only callable by the oracle hub\");\n        _;\n    }\n\n    /// @dev allows for the owner of the contract to change the oracle hub address if needed\n    function setOracleHubAddress(address oracleHubAddress) public onlyOwner {\n        require(\n            oracleHubAddress != address(0),\n            \"cannot set oracleHubAddress to null address\"\n        );\n        ORACLE_HUB_ADDRESS = oracleHubAddress;\n    }\n}\n",
  "sourcePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
  "ast": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
    "exportedSymbols": {
      "MarketContractMPX": [
        3661
      ]
    },
    "id": 3662,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3520,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:14"
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3521,
        "nodeType": "ImportDirective",
        "scope": 3662,
        "sourceUnit": 3132,
        "src": "632:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3522,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3131,
              "src": "848:14:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$3131",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3523,
            "nodeType": "InheritanceSpecifier",
            "src": "848:14:14"
          }
        ],
        "contractDependencies": [
          3131,
          4278
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3661,
        "linearizedBaseContracts": [
          3661,
          3131,
          4278
        ],
        "name": "MarketContractMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3525,
            "name": "ORACLE_HUB_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "869:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3524,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3527,
            "name": "ORACLE_URL",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "908:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3526,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3529,
            "name": "ORACLE_STATISTIC",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "938:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3528,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "938:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3567,
              "nodeType": "Block",
              "src": "2959:130:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3555,
                      "name": "ORACLE_URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3527,
                      "src": "2969:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3556,
                      "name": "oracleURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3545,
                      "src": "2982:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2969:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3558,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:22:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3559,
                      "name": "ORACLE_STATISTIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3529,
                      "src": "3001:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3560,
                      "name": "oracleStatistic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "3020:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3001:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3562,
                  "nodeType": "ExpressionStatement",
                  "src": "3001:34:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3563,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "3045:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3564,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3539,
                      "src": "3066:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3045:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3566,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:37:14"
                }
              ]
            },
            "documentation": "@param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param baseAddresses array of 2 addresses needed for our contract including:\n     ownerAddress                    address of the owner of these contracts.\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n     collateralPoolAddress           address of our collateral pool contract\n @param oracleHubAddress     address of our oracle hub providing the callbacks\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3568,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3550,
                    "name": "contractNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3533,
                    "src": "2914:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                      "typeString": "bytes32[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3551,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3537,
                    "src": "2929:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3552,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3543,
                    "src": "2944:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                      "typeString": "uint256[7] memory"
                    }
                  }
                ],
                "id": 3553,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3549,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3131,
                  "src": "2899:14:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$3131_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2899:59:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2666:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3530,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2666:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3532,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2674:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2666:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3537,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2707:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3534,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3536,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2707:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3539,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2748:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3543,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2782:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3542,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2790:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2782:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3545,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2823:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3547,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2856:29:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2656:235:14"
            },
            "returnParameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2959:0:14"
            },
            "scope": 3661,
            "src": "2645:444:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3591,
              "nodeType": "Block",
              "src": "3344:194:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3362:10:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 3576,
                          "name": "isSettled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2783,
                          "src": "3363:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5044,
                      "src": "3354:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3579,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:19:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3580,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "3383:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3581,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3570,
                      "src": "3395:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3383:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3583,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:17:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3585,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "3432:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3584,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "3415:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3587,
                  "nodeType": "EmitStatement",
                  "src": "3410:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3588,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3100,
                      "src": "3448:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3590,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:17:14"
                }
              ]
            },
            "documentation": "@dev called only by our oracle hub when a new price is available provided by our oracle.\n @param price lastPrice provided by the oracle.",
            "id": 3592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3573,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3572,
                  "name": "onlyOracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3639,
                  "src": "3330:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3330:13:14"
              }
            ],
            "name": "oracleCallBack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3570,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3592,
                  "src": "3308:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3307:15:14"
            },
            "returnParameters": {
              "id": 3574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3344:0:14"
            },
            "scope": 3661,
            "src": "3284:254:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3626,
              "nodeType": "Block",
              "src": "3945:276:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3600,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3594,
                            "src": "3976:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3601,
                            "name": "PRICE_FLOOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2755,
                            "src": "3985:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3976:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3603,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3594,
                            "src": "4000:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3604,
                            "name": "PRICE_CAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2753,
                            "src": "4009:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4000:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3976:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473",
                        "id": 3607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4032:50:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        },
                        "value": "arbitration price must be within contract bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        }
                      ],
                      "id": 3599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "3955:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3955:137:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3609,
                  "nodeType": "ExpressionStatement",
                  "src": "3955:137:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3610,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "4102:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3611,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3594,
                      "src": "4114:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4102:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3613,
                  "nodeType": "ExpressionStatement",
                  "src": "4102:17:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3615,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "4151:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3614,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "4134:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4134:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3617,
                  "nodeType": "EmitStatement",
                  "src": "4129:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3619,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "4182:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3618,
                      "name": "settleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3118,
                      "src": "4167:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3622,
                      "name": "isSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "4198:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4210:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4198:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3625,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:16:14"
                }
              ]
            },
            "documentation": "@dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n if a dispute arises that we believe is best resolved by early settlement.\n @param price settlement price",
            "id": 3627,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3597,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3596,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "3935:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3935:9:14"
              }
            ],
            "name": "arbitrateSettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3594,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3627,
                  "src": "3913:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3912:15:14"
            },
            "returnParameters": {
              "id": 3598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3945:0:14"
            },
            "scope": 3661,
            "src": "3884:337:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "4304:104:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3630,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5041,
                            "src": "4322:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4322:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3632,
                          "name": "ORACLE_HUB_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3525,
                          "src": "4336:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4322:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792063616c6c61626c6520627920746865206f7261636c6520687562",
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4356:33:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        },
                        "value": "only callable by the oracle hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        }
                      ],
                      "id": 3629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4314:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4314:76:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3636,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:76:14"
                },
                {
                  "id": 3637,
                  "nodeType": "PlaceholderStatement",
                  "src": "4400:1:14"
                }
              ]
            },
            "documentation": "@dev allows calls only from the oracle hub.",
            "id": 3639,
            "name": "onlyOracleHub",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:2:14"
            },
            "src": "4279:129:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3659,
              "nodeType": "Block",
              "src": "4579:184:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3647,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3641,
                          "src": "4610:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4638:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4630:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4630:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4610:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c2061646472657373",
                        "id": 3652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4654:45:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        },
                        "value": "cannot set oracleHubAddress to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        }
                      ],
                      "id": 3646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4589:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:120:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3654,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:120:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3655,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "4719:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3656,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3641,
                      "src": "4740:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4719:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3658,
                  "nodeType": "ExpressionStatement",
                  "src": "4719:37:14"
                }
              ]
            },
            "documentation": "@dev allows for the owner of the contract to change the oracle hub address if needed",
            "id": 3660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3643,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4569:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4569:9:14"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3641,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3660,
                  "src": "4536:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4536:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4535:26:14"
            },
            "returnParameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4579:0:14"
            },
            "scope": 3661,
            "src": "4507:256:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3662,
        "src": "818:3947:14"
      }
    ],
    "src": "608:4158:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
    "exportedSymbols": {
      "MarketContractMPX": [
        3661
      ]
    },
    "id": 3662,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3520,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:22:14"
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3521,
        "nodeType": "ImportDirective",
        "scope": 3662,
        "sourceUnit": 3132,
        "src": "632:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3522,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3131,
              "src": "848:14:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$3131",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3523,
            "nodeType": "InheritanceSpecifier",
            "src": "848:14:14"
          }
        ],
        "contractDependencies": [
          3131,
          4278
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractMPX - a MarketContract designed to be used with our internal oracle service\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3661,
        "linearizedBaseContracts": [
          3661,
          3131,
          4278
        ],
        "name": "MarketContractMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3525,
            "name": "ORACLE_HUB_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "869:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3524,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3527,
            "name": "ORACLE_URL",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "908:24:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3526,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "908:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3529,
            "name": "ORACLE_STATISTIC",
            "nodeType": "VariableDeclaration",
            "scope": 3661,
            "src": "938:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3528,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "938:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3567,
              "nodeType": "Block",
              "src": "2959:130:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3555,
                      "name": "ORACLE_URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3527,
                      "src": "2969:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3556,
                      "name": "oracleURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3545,
                      "src": "2982:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2969:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3558,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:22:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3559,
                      "name": "ORACLE_STATISTIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3529,
                      "src": "3001:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3560,
                      "name": "oracleStatistic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "3020:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3001:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3562,
                  "nodeType": "ExpressionStatement",
                  "src": "3001:34:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3563,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "3045:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3564,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3539,
                      "src": "3066:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3045:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3566,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:37:14"
                }
              ]
            },
            "documentation": "@param contractNames bytes32 array of names\n     contractName            name of the market contract\n     longTokenSymbol         symbol for the long token\n     shortTokenSymbol        symbol for the short token\n @param baseAddresses array of 2 addresses needed for our contract including:\n     ownerAddress                    address of the owner of these contracts.\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n     collateralPoolAddress           address of our collateral pool contract\n @param oracleHubAddress     address of our oracle hub providing the callbacks\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 3568,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3550,
                    "name": "contractNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3533,
                    "src": "2914:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                      "typeString": "bytes32[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3551,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3537,
                    "src": "2929:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3552,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3543,
                    "src": "2944:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                      "typeString": "uint256[7] memory"
                    }
                  }
                ],
                "id": 3553,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3549,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3131,
                  "src": "2899:14:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$3131_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2899:59:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2666:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_memory_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3530,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2666:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3532,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2674:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2666:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3537,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2707:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3534,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3536,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2707:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3539,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2748:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3543,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2782:31:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_memory_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3542,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 3541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2790:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2782:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3545,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2823:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3544,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3547,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "2856:29:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2656:235:14"
            },
            "returnParameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2959:0:14"
            },
            "scope": 3661,
            "src": "2645:444:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3591,
              "nodeType": "Block",
              "src": "3344:194:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3362:10:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 3576,
                          "name": "isSettled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2783,
                          "src": "3363:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5044,
                      "src": "3354:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3579,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:19:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3580,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "3383:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3581,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3570,
                      "src": "3395:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3383:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3583,
                  "nodeType": "ExpressionStatement",
                  "src": "3383:17:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3585,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "3432:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3584,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "3415:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3587,
                  "nodeType": "EmitStatement",
                  "src": "3410:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3588,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3100,
                      "src": "3448:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3590,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:17:14"
                }
              ]
            },
            "documentation": "@dev called only by our oracle hub when a new price is available provided by our oracle.\n @param price lastPrice provided by the oracle.",
            "id": 3592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3573,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3572,
                  "name": "onlyOracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3639,
                  "src": "3330:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3330:13:14"
              }
            ],
            "name": "oracleCallBack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3570,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3592,
                  "src": "3308:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3307:15:14"
            },
            "returnParameters": {
              "id": 3574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3344:0:14"
            },
            "scope": 3661,
            "src": "3284:254:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3626,
              "nodeType": "Block",
              "src": "3945:276:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3600,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3594,
                            "src": "3976:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3601,
                            "name": "PRICE_FLOOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2755,
                            "src": "3985:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3976:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3603,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3594,
                            "src": "4000:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3604,
                            "name": "PRICE_CAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2753,
                            "src": "4009:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4000:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3976:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172626974726174696f6e207072696365206d7573742062652077697468696e20636f6e747261637420626f756e6473",
                        "id": 3607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4032:50:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        },
                        "value": "arbitration price must be within contract bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d408f6a5b63b00e78c73928d072827a1f4a49b1581034272927f4efba681c699",
                          "typeString": "literal_string \"arbitration price must be within contract bounds\""
                        }
                      ],
                      "id": 3599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "3955:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3955:137:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3609,
                  "nodeType": "ExpressionStatement",
                  "src": "3955:137:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3610,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "4102:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3611,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3594,
                      "src": "4114:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4102:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3613,
                  "nodeType": "ExpressionStatement",
                  "src": "4102:17:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3615,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "4151:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3614,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "4134:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4134:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3617,
                  "nodeType": "EmitStatement",
                  "src": "4129:28:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3619,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "4182:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3618,
                      "name": "settleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3118,
                      "src": "4167:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3622,
                      "name": "isSettled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "4198:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4210:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4198:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3625,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:16:14"
                }
              ]
            },
            "documentation": "@dev allows us to arbitrate a settlement price by updating the settlement value, and resetting the\n delay for funds to be released. Could also be used to allow us to force a contract into early settlement\n if a dispute arises that we believe is best resolved by early settlement.\n @param price settlement price",
            "id": 3627,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3597,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3596,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "3935:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3935:9:14"
              }
            ],
            "name": "arbitrateSettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3594,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 3627,
                  "src": "3913:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3912:15:14"
            },
            "returnParameters": {
              "id": 3598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3945:0:14"
            },
            "scope": 3661,
            "src": "3884:337:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "4304:104:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3630,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5041,
                            "src": "4322:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4322:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3632,
                          "name": "ORACLE_HUB_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3525,
                          "src": "4336:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4322:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792063616c6c61626c6520627920746865206f7261636c6520687562",
                        "id": 3634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4356:33:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        },
                        "value": "only callable by the oracle hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d2c92cd6cdc1904a64689410a1a18395c370bbc8bfda5eee10d10dfdc65cc24",
                          "typeString": "literal_string \"only callable by the oracle hub\""
                        }
                      ],
                      "id": 3629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4314:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4314:76:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3636,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:76:14"
                },
                {
                  "id": 3637,
                  "nodeType": "PlaceholderStatement",
                  "src": "4400:1:14"
                }
              ]
            },
            "documentation": "@dev allows calls only from the oracle hub.",
            "id": 3639,
            "name": "onlyOracleHub",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:2:14"
            },
            "src": "4279:129:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3659,
              "nodeType": "Block",
              "src": "4579:184:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3647,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3641,
                          "src": "4610:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4638:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4630:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4630:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4610:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f7420736574206f7261636c654875624164647265737320746f206e756c6c2061646472657373",
                        "id": 3652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4654:45:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        },
                        "value": "cannot set oracleHubAddress to null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e9499f85d14146cdef5042393e55297cbf87b607e54f4c65e3e1dffa5c2a89",
                          "typeString": "literal_string \"cannot set oracleHubAddress to null address\""
                        }
                      ],
                      "id": 3646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5044,
                        5045
                      ],
                      "referencedDeclaration": 5045,
                      "src": "4589:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:120:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3654,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:120:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3655,
                      "name": "ORACLE_HUB_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3525,
                      "src": "4719:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3656,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3641,
                      "src": "4740:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4719:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3658,
                  "nodeType": "ExpressionStatement",
                  "src": "4719:37:14"
                }
              ]
            },
            "documentation": "@dev allows for the owner of the contract to change the oracle hub address if needed",
            "id": 3660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3644,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3643,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4212,
                  "src": "4569:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4569:9:14"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3641,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3660,
                  "src": "4536:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4536:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4535:26:14"
            },
            "returnParameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4579:0:14"
            },
            "scope": 3661,
            "src": "4507:256:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3662,
        "src": "818:3947:14"
      }
    ],
    "src": "608:4158:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-17T15:26:01.835Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Phil Elsasser <phil@marketprotocol.io>",
    "methods": {
      "arbitrateSettlement(uint256)": {
        "details": "allows us to arbitrate a settlement price by updating the settlement value, and resetting the delay for funds to be released. Could also be used to allow us to force a contract into early settlement if a dispute arises that we believe is best resolved by early settlement.",
        "params": {
          "price": "settlement price"
        }
      },
      "constructor": {
        "params": {
          "baseAddresses": "array of 2 addresses needed for our contract including:     ownerAddress                    address of the owner of these contracts.     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing     collateralPoolAddress           address of our collateral pool contract",
          "contractNames": "bytes32 array of names     contractName            name of the market contract     longTokenSymbol         symbol for the long token     shortTokenSymbol        symbol for the short token",
          "contractSpecs": "array of unsigned integers including:     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached     capPrice                maximum tradeable price of this contract, contract enters settlement if breached     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to                             an integer     qtyMultiplier           multiply traded qty by this value from base units of collateral token.     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement",
          "oracleHubAddress": "address of our oracle hub providing the callbacks",
          "oracleStatistic": "statistic type (lastPrice, vwap, etc)",
          "oracleURL": "url of data"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mintPositionTokens(uint256,address)": {
        "params": {
          "minter": "address of minter to receive tokens",
          "qtyToMint": "qty in base units of how many short and long tokens to mint"
        }
      },
      "oracleCallBack(uint256)": {
        "details": "called only by our oracle hub when a new price is available provided by our oracle.",
        "params": {
          "price": "lastPrice provided by the oracle."
        }
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "redeemLongToken(uint256,address)": {
        "params": {
          "qtyToRedeem": "qty in base units of how many tokens to redeem",
          "redeemer": "address of person redeeming tokens"
        }
      },
      "redeemShortToken(uint256,address)": {
        "params": {
          "qtyToRedeem": "qty in base units of how many tokens to redeem",
          "redeemer": "address of person redeeming tokens"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setOracleHubAddress(address)": {
        "details": "allows for the owner of the contract to change the oracle hub address if needed"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "MarketContractMPX - a MarketContract designed to be used with our internal oracle service"
  },
  "userdoc": {
    "methods": {
      "isPostSettlementDelay()": {
        "notice": "checks to see if a contract is settled, and that the settlement delay has passed"
      },
      "mintPositionTokens(uint256,address)": {
        "notice": "called only by our collateral pool to create long and short position tokens"
      },
      "redeemLongToken(uint256,address)": {
        "notice": "called only by our collateral pool to redeem long position tokens"
      },
      "redeemShortToken(uint256,address)": {
        "notice": "called only by our collateral pool to redeem short position tokens"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}