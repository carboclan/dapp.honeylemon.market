{
  "contractName": "MinterBridge",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "marketContractProxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketContractProxyAddress",
          "type": "address"
        }
      ],
      "name": "setMarketContractProxyAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_0xBridgeProxyAddress",
          "type": "address"
        }
      ],
      "name": "set0xBridgeProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "bridgeData",
          "type": "bytes"
        }
      ],
      "name": "bridgeTransferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_0xBridgeProxyAddress\",\"type\":\"address\"}],\"name\":\"set0xBridgeProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketContractProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MARKET_CONTRACT_PROXY_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketContractProxyAddress\",\"type\":\"address\"}],\"name\":\"setMarketContractProxyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ERC20_BRIDGE_PROXY_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"bridgeData\",\"type\":\"bytes\"}],\"name\":\"bridgeTransferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bridgeTransferFrom(address,address,address,uint256,bytes)\":{\"details\":\"can only be called if market contract proxy address is set.\",\"params\":{\"amount\":\"Amount of asset to transfer.\",\"bridgeData\":\"Arbitrary asset data needed by the bridge contract.\",\"from\":\"Address to transfer asset from.\",\"to\":\"Address to transfer asset to.\",\"tokenAddress\":\"in the standard 0x implementation this is the transferred token. In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform the MinterBridge of the latest perpetual token.\"},\"return\":\"success The magic bytes `0x37708e9b` if successful.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"set0xBridgeProxy(address)\":{\"details\":\"can only be called from contract owner address\",\"params\":{\"_0xBridgeProxyAddress\":\"0x minter bridge proxy address\"}},\"setMarketContractProxyAddress(address)\":{\"details\":\"can only be called from contract owner address\",\"params\":{\"_marketContractProxyAddress\":\"market contract address\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"bridgeTransferFrom(address,address,address,uint256,bytes)\":{\"notice\":\"Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set0xBridgeProxy(address)\":{\"notice\":\"set 0x minter bridge proxy address\"},\"setMarketContractProxyAddress(address)\":{\"notice\":\"set market contract proxy address\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MinterBridge.sol\":\"MinterBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/DSProxy.sol\":{\"keccak256\":\"0xc9976f9eb58cbb43a92d06ed1f441fc940b6f3b081763c8908b5026e19fdc479\",\"urls\":[\"bzzr://ec57d26ad88c1d68104bd6b854e748b06a739ff5152913ade1f59c8204903f99\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MarketContractProxy.sol\":{\"keccak256\":\"0xc1b08e670bdb690a1acfc1c7eda84fa75854d36d075e82599e1e618151347d28\",\"urls\":[\"bzzr://2dc0db925ebfdda05ab127828f3fda8b94fc61398857ce52e491c9014101d247\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MinterBridge.sol\":{\"keccak256\":\"0x7605e82eb5d1501cfcdaf45ce8f6fbc385efacce9a60a21723353dc81c7608dd\",\"urls\":[\"bzzr://8ab470a6d1f027c303877238815812f9e0d3f271439483437d5f164eb4220567\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/MathLib.sol\":{\"keccak256\":\"0x42be80a7e0a481d7c40fe74c18c1877bbd499ad07e009b61b12e1b5e9b5f681a\",\"urls\":[\"bzzr://5b94f7ecf561e7140f0253e8b49733a6b670b70ea289bd1172b5439dca59e7bb\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/StringLib.sol\":{\"keccak256\":\"0xfe9df18e4239bd30aa3a257a7cf15665547ec0a47bd5ec05566ef0efe390b551\",\"urls\":[\"bzzr://763e42c56f8bbd8d091c17c754e1ab28e8d439d797827db9589f0a9fbf6a814b\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketCollateralPool.sol\":{\"keccak256\":\"0x79aefa785b098b012164dc07b247837f06b97db2fff9b69d039cff7cd19e5843\",\"urls\":[\"bzzr://fb15cb3273906dd16dfe1da01198aad6f44f1cc674ef518f56998508674a6c2e\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContract.sol\":{\"keccak256\":\"0x99e63fd83cfb1100f9657b37f70feb068bd6773da7c074edcc899cc0c73df1cb\",\"urls\":[\"bzzr://390062ebfb728271c8ba41e8fe1a0e6eb2cd8b408fe931f9c106304c25eb479a\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketContractRegistryInterface.sol\":{\"keccak256\":\"0xb0259d3f0dbf7f52df2274f66c01563f7ae3d3bdacc018fede764b4a78bc1dd9\",\"urls\":[\"bzzr://db91f063cb13da449814f8d7d990039b51cdef45110e735d7bebf116cf963735\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractFactoryMPX.sol\":{\"keccak256\":\"0x68f78580f41fc42c79712ec65e4d360213ef4fc548cc45213d8ea47b0c9385fc\",\"urls\":[\"bzzr://240e09683b42deaefe8d2355384c2367be7829bd258a890131d9471401b630e6\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol\":{\"keccak256\":\"0xa096ba856d05c91f7ce823b76d9c819a64ea3c5e4d57b66ac005b763d5985e75\",\"urls\":[\"bzzr://57733cd70cc7b2ebc6c9ceb665c24c1b349b40d73b454eba6ab810243f0464fe\"]},\"/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/tokens/PositionToken.sol\":{\"keccak256\":\"0x2492a3432fa975af2a11401827088df0865bb4ecda07a45abb2b4fd9988dfd69\",\"urls\":[\"bzzr://f83296ce5c26329d36a99b561d2e5fbce1acff37241a544d96eda7574fa88cbb\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7230c14d692aff375e4931d60ef73ac8a79c28b9e54c200a377b7dc613c81a78\",\"urls\":[\"bzzr://3538d7da02640c67ac909e84d90e799439f3b3195cf0de39fd173dacd5a98311\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361111a806100e66000396000f3fe608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b146101ec578063a1d6a4a31461020e578063a95f84b914610252578063c2df82e61461029c578063f2fde38b146103d1576100bb565b8063090dc1cc146100c05780632e99f94e1461010457806368b43fbb1461014e578063715018a6146101985780638da5cb5b146101a2575b600080fd5b610102600480360360208110156100d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b005b61010c61046c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610156610492565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a06104b8565b005b6101aa61058c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f46105b6565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060e565b005b61025a6106c8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d600480360360a08110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293905050506106ee565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d69565b005b61041d6105b6565b151561042857600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c06105b6565b15156104cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106166105b6565b151561062157600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d61726b6574436f6e747261637450726f7879206e6f7420736574000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e76616c69642063616c6c657200000000000000000000000000000000000081525060200191505060405180910390fd5b60016000808282540192505081905550600080549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515610956576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6261642070726f7879206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bb7756040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156109dc57600080fd5b505afa1580156109f0573d6000803e3d6000fd5b505050506040513d6020811015610a0657600080fd5b810190808051906020019092919050505090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334931b4b886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610aaa57600080fd5b505afa158015610abe573d6000803e3d6000fd5b505050506040513d6020811015610ad457600080fd5b81019080805190602001909291905050509050610b148930838573ffffffffffffffffffffffffffffffffffffffff16610d88909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d161ee7888a8c6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b5050505063dc1600f37c0100000000000000000000000000000000000000000000000000000000029350505060005481141515610d5e57600080fd5b509695505050505050565b610d716105b6565b1515610d7c57600080fd5b610d8581610eaa565b50565b610ea4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fa6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ee657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610fc58273ffffffffffffffffffffffffffffffffffffffff166110db565b1515610fd057600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831015156110215780518252602082019150602081019050602083039250610ffc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611083576040519150601f19603f3d011682016040523d82523d6000602084013e611088565b606091505b509150915081151561109957600080fd5b6000815111156110d5578080602001905160208110156110b857600080fd5b810190808051906020019092919050505015156110d457600080fd5b5b50505050565b600080823b90506000811191505091905056fea165627a7a72305820119ef2fa745cc365f5af4d89ad98a730556bb5606bb0c0f3d17c14fc37d47f430029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b146101ec578063a1d6a4a31461020e578063a95f84b914610252578063c2df82e61461029c578063f2fde38b146103d1576100bb565b8063090dc1cc146100c05780632e99f94e1461010457806368b43fbb1461014e578063715018a6146101985780638da5cb5b146101a2575b600080fd5b610102600480360360208110156100d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b005b61010c61046c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610156610492565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a06104b8565b005b6101aa61058c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f46105b6565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061060e565b005b61025a6106c8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d600480360360a08110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293905050506106ee565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d69565b005b61041d6105b6565b151561042857600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c06105b6565b15156104cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106166105b6565b151561062157600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d61726b6574436f6e747261637450726f7879206e6f7420736574000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f696e76616c69642063616c6c657200000000000000000000000000000000000081525060200191505060405180910390fd5b60016000808282540192505081905550600080549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141515610956576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6261642070726f7879206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323bb7756040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156109dc57600080fd5b505afa1580156109f0573d6000803e3d6000fd5b505050506040513d6020811015610a0657600080fd5b810190808051906020019092919050505090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166334931b4b886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610aaa57600080fd5b505afa158015610abe573d6000803e3d6000fd5b505050506040513d6020811015610ad457600080fd5b81019080805190602001909291905050509050610b148930838573ffffffffffffffffffffffffffffffffffffffff16610d88909392919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d6020811015610c0357600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d161ee7888a8c6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b5050505063dc1600f37c0100000000000000000000000000000000000000000000000000000000029350505060005481141515610d5e57600080fd5b509695505050505050565b610d716105b6565b1515610d7c57600080fd5b610d8581610eaa565b50565b610ea4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fa6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ee657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610fc58273ffffffffffffffffffffffffffffffffffffffff166110db565b1515610fd057600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831015156110215780518252602082019150602081019050602083039250610ffc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611083576040519150601f19603f3d011682016040523d82523d6000602084013e611088565b606091505b509150915081151561109957600080fd5b6000815111156110d5578080602001905160208110156110b857600080fd5b810190808051906020019092919050505015156110d457600080fd5b5b50505050565b600080823b90506000811191505091905056fea165627a7a72305820119ef2fa745cc365f5af4d89ad98a730556bb5606bb0c0f3d17c14fc37d47f430029",
  "sourceMap": "523:3679:3:-;;;923:41;8:9:-1;5:2;;;30:1;27;20:12;5:2;923:41:3;576:1:28;560:13;:17;;;;524:10:22;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;523:3679:3;;;;;;",
  "deployedSourceMap": "523:3679:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;523:3679:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2119:141:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;666:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;825:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1423:137:22;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1650:271:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1650:271:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;875:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2968:1232;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2968:1232:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2968:1232:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2968:1232:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2968:1232:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1731:107:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1731:107:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;2119:141:3;863:9:22;:7;:9::i;:::-;855:18;;;;;;;;2232:21:3;2203:26;;:50;;;;;;;;;;;;;;;;;;2119:141;:::o;666:46::-;;;;;;;;;;;;;:::o;825:44::-;;;;;;;;;;;;;:::o;1423:137:22:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1650:271:3:-;863:9:22;:7;:9::i;:::-;855:18;;;;;;;;1805:27:3;1773:29;;:59;;;;;;;;;;;;;;;;;;1884:29;;;;;;;;;;;1842:19;;:72;;;;;;;;;;;;;;;;;;1650:271;:::o;875:41::-;;;;;;;;;;;;;:::o;2968:1232::-;3251:14;1381:1;1340:43;;:29;;;;;;;;;;;:43;;;;1319:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:26;;;;;;;;;;;1100:40;;:10;:40;;;1092:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:1:28;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3584:29:3;;;;;;;;;;;3568:45;;:12;:45;;;3560:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3685:21;3715:19;;;;;;;;;;;:44;;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3715:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3715:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3715:46:3;;;;;;;;;;;;;;;;3685:77;;3773:21;3797:19;;;;;;;;;;;:47;;;3845:6;3797:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3797:55:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3797:55:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3797:55:3;;;;;;;;;;;;;;;;3773:79;;3863:71;3896:4;3910;3917:16;3863:15;:32;;;;:71;;;;;;:::i;:::-;3944:15;:23;;;3968:29;;;;;;;;;;;3999:16;3944:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:72:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3944:72:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3944:72:3;;;;;;;;;;;;;;;;;4105:19;;;;;;;;;;;:38;;;4144:6;4152:2;4156:4;4105:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4105:56:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4105:56:3;;;;809:10;4179:14;;4172:21;;;;1102:13:28;;1086:12;:29;1078:38;;;;;;;;1169:1:3;2968:1232;;;;;;;;:::o;1731:107:22:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;842:202:26:-;942:95;961:5;991;:18;;;:27;;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;968:68:26;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;968:68:26;942:18;:95::i;:::-;842:202;;;;:::o;1982:183:22:-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;2487:869:26:-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:26;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:26;;;;3213:7;3205:16;;;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:26;;;;;;;;;;;;;;;;3300:39;;;;;;;;3232:118;2487:869;;;;:::o;463:616:27:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o",
  "source": "pragma solidity 0.5.2;\n\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\nimport 'openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol';\n\nimport '../libraries/MathLib.sol';\nimport '../marketprotocol/MarketCollateralPool.sol';\nimport '../marketprotocol/mpx/MarketContractMPX.sol';\nimport '../marketprotocol/tokens/PositionToken.sol';\n\nimport './MarketContractProxy.sol';\n\n\ncontract MinterBridge is ReentrancyGuard, Ownable {\n    using MathLib for uint;\n    using MathLib for int;\n    using SafeERC20 for ERC20;\n\n    MarketContractProxy public marketContractProxy;\n\n    ///@dev Result of a successful bridge call.\n    bytes4 internal constant BRIDGE_SUCCESS = 0xdc1600f3;\n    address public MARKET_CONTRACT_PROXY_ADDRESS;\n    address public ERC20_BRIDGE_PROXY_ADDRESS;\n\n    constructor() public ReentrancyGuard() {}\n\n    /**\n     * @notice check that called is 0x minter bridge proxy address\n     */\n    modifier only0xBridgeProxy() {\n        require(msg.sender == ERC20_BRIDGE_PROXY_ADDRESS, 'invalid caller');\n        _;\n    }\n    /**\n     * @notice check that market contract proxy address is initialized\n     */\n    modifier onlyIfSetMarketContractProxy() {\n        require(\n            MARKET_CONTRACT_PROXY_ADDRESS != address(0),\n            'MarketContractProxy not set'\n        );\n        _;\n    }\n\n    /**\n     * @notice set market contract proxy address\n     * @dev can only be called from contract owner address\n     * @param _marketContractProxyAddress market contract address\n     */\n    function setMarketContractProxyAddress(address _marketContractProxyAddress)\n        public\n        onlyOwner\n    {\n        MARKET_CONTRACT_PROXY_ADDRESS = _marketContractProxyAddress;\n        marketContractProxy = MarketContractProxy(MARKET_CONTRACT_PROXY_ADDRESS);\n    }\n\n    /**\n     * @notice set 0x minter bridge proxy address\n     * @dev can only be called from contract owner address\n     * @param _0xBridgeProxyAddress 0x minter bridge proxy address\n     */\n    function set0xBridgeProxy(address _0xBridgeProxyAddress) public onlyOwner {\n        ERC20_BRIDGE_PROXY_ADDRESS = _0xBridgeProxyAddress;\n    }\n\n    /**\n     * @notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n     * @dev can only be called if market contract proxy address is set.\n     * @param tokenAddress in the standard 0x implementation this is the transferred token.\n     * In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\n     * the MinterBridge of the latest perpetual token.\n     * @param from Address to transfer asset from.\n     * @param to Address to transfer asset to.\n     * @param amount Amount of asset to transfer.\n     * @param bridgeData Arbitrary asset data needed by the bridge contract.\n     * @return success The magic bytes `0x37708e9b` if successful.\n     */\n    function bridgeTransferFrom(\n        address tokenAddress,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata bridgeData\n    )\n        external\n        onlyIfSetMarketContractProxy\n        only0xBridgeProxy\n        nonReentrant\n        returns (bytes4 success)\n    {\n        // The proxy acts as the taker token to make 0x think that the appropriate amount\n        // was transferred and accept the trade as passing. Under the hood the  marketContractProxy\n        // has minted long and short tokens and sent them to the the investor and miner.\n        require(tokenAddress == MARKET_CONTRACT_PROXY_ADDRESS, 'bad proxy address');\n\n        // (imBTC) sent from the miner\n        ERC20 collateralToken = ERC20(marketContractProxy.COLLATERAL_TOKEN_ADDRESS());\n\n        uint neededCollateral = marketContractProxy.calculateRequiredCollateral(amount);\n\n        collateralToken.safeTransferFrom(from, address(this), neededCollateral);\n        collateralToken.approve(MARKET_CONTRACT_PROXY_ADDRESS, neededCollateral);\n\n        // to: long & taker (investor)\n        // from: short & maker (miner)\n        marketContractProxy.mintPositionTokens(amount, to, from);\n\n        return BRIDGE_SUCCESS;\n    }\n}\n",
  "sourcePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MinterBridge.sol",
  "ast": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MinterBridge.sol",
    "exportedSymbols": {
      "MinterBridge": [
        1657
      ]
    },
    "id": 1658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1493,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1494,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4184,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 1495,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4882,
        "src": "88:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1496,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4567,
        "src": "156:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
        "file": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
        "id": 1497,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4932,
        "src": "220:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 1498,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 1977,
        "src": "289:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketCollateralPool.sol",
        "file": "../marketprotocol/MarketCollateralPool.sol",
        "id": 1499,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 2641,
        "src": "324:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "../marketprotocol/mpx/MarketContractMPX.sol",
        "id": 1500,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 3567,
        "src": "377:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/tokens/PositionToken.sol",
        "file": "../marketprotocol/tokens/PositionToken.sol",
        "id": 1501,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 3819,
        "src": "431:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MarketContractProxy.sol",
        "file": "./MarketContractProxy.sol",
        "id": 1502,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 1492,
        "src": "485:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1503,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4931,
              "src": "548:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$4931",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 1504,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1505,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4183,
              "src": "565:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4183",
                "typeString": "contract Ownable"
              }
            },
            "id": 1506,
            "nodeType": "InheritanceSpecifier",
            "src": "565:7:3"
          }
        ],
        "contractDependencies": [
          4183,
          4931
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1657,
        "linearizedBaseContracts": [
          1657,
          4183,
          4931
        ],
        "name": "MinterBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1509,
            "libraryName": {
              "contractScope": null,
              "id": 1507,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1976,
              "src": "585:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1976",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "579:23:3",
            "typeName": {
              "id": 1508,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "597:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1512,
            "libraryName": {
              "contractScope": null,
              "id": 1510,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1976,
              "src": "613:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1976",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "607:22:3",
            "typeName": {
              "id": 1511,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "625:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 1515,
            "libraryName": {
              "contractScope": null,
              "id": 1513,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4881,
              "src": "640:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4881",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "634:26:3",
            "typeName": {
              "contractScope": null,
              "id": 1514,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4566,
              "src": "654:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4566",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1517,
            "name": "marketContractProxy",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "666:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
              "typeString": "contract MarketContractProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 1516,
              "name": "MarketContractProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1491,
              "src": "666:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                "typeString": "contract MarketContractProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1520,
            "name": "BRIDGE_SUCCESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "767:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1518,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "767:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786463313630306633",
              "id": 1519,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "809:10:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3692429555_by_1",
                "typeString": "int_const 3692429555"
              },
              "value": "0xdc1600f3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1522,
            "name": "MARKET_CONTRACT_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "825:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1524,
            "name": "ERC20_BRIDGE_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "875:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1523,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "962:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 1530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1527,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1526,
                  "name": "ReentrancyGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4931,
                  "src": "944:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ReentrancyGuard_$4931_$",
                    "typeString": "type(contract ReentrancyGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "944:17:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:2:3"
            },
            "returnParameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:3"
            },
            "scope": 1657,
            "src": "923:41:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "1082:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1533,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4946,
                            "src": "1100:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1100:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1535,
                          "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1524,
                          "src": "1114:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1100:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c69642063616c6c6572",
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1142:16:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        },
                        "value": "invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        }
                      ],
                      "id": 1532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "1092:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:67:3"
                },
                {
                  "id": 1540,
                  "nodeType": "PlaceholderStatement",
                  "src": "1169:1:3"
                }
              ]
            },
            "documentation": "@notice check that called is 0x minter bridge proxy address",
            "id": 1542,
            "name": "only0xBridgeProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:2:3"
            },
            "src": "1053:124:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "1309:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1545,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "1340:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1381:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1373:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1340:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574436f6e747261637450726f7879206e6f7420736574",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        },
                        "value": "MarketContractProxy not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        }
                      ],
                      "id": 1544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "1319:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:117:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:117:3"
                },
                {
                  "id": 1553,
                  "nodeType": "PlaceholderStatement",
                  "src": "1446:1:3"
                }
              ]
            },
            "documentation": "@notice check that market contract proxy address is initialized",
            "id": 1555,
            "name": "onlyIfSetMarketContractProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:3"
            },
            "src": "1269:185:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "1763:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1562,
                      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "1773:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1563,
                      "name": "_marketContractProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "1805:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1773:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1566,
                      "name": "marketContractProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "1842:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1568,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "1884:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1567,
                        "name": "MarketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1864:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarketContractProxy_$1491_$",
                          "typeString": "type(contract MarketContractProxy)"
                        }
                      },
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1864:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "src": "1842:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                      "typeString": "contract MarketContractProxy"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:72:3"
                }
              ]
            },
            "documentation": "@notice set market contract proxy address\n@dev can only be called from contract owner address\n@param _marketContractProxyAddress market contract address",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1559,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4117,
                  "src": "1749:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1749:9:3"
              }
            ],
            "name": "setMarketContractProxyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "name": "_marketContractProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1689:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1688:37:3"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:3"
            },
            "scope": 1657,
            "src": "1650:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "2193:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1580,
                      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1524,
                      "src": "2203:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1581,
                      "name": "_0xBridgeProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "2232:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2203:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:50:3"
                }
              ]
            },
            "documentation": "@notice set 0x minter bridge proxy address\n@dev can only be called from contract owner address\n@param _0xBridgeProxyAddress 0x minter bridge proxy address",
            "id": 1585,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1578,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1577,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4117,
                  "src": "2183:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:9:3"
              }
            ],
            "name": "set0xBridgeProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "name": "_0xBridgeProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1585,
                  "src": "2145:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2144:31:3"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:3"
            },
            "scope": 1657,
            "src": "2119:141:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1655,
              "nodeType": "Block",
              "src": "3271:929:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1607,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "3568:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1608,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "3584:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3568:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6261642070726f78792061646472657373",
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3615:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        },
                        "value": "bad proxy address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        }
                      ],
                      "id": 1606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "3560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1612,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:75:3"
                },
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "name": "collateralToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "3685:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$4566",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1613,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4566,
                        "src": "3685:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1620,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1616,
                            "name": "marketContractProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1517,
                            "src": "3715:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                              "typeString": "contract MarketContractProxy"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COLLATERAL_TOKEN_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 382,
                          "src": "3715:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3715:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1615,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4566,
                      "src": "3709:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$4566_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$4566",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3685:77:3"
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "name": "neededCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "3773:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1621,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3773:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1627,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "3845:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "3797:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRequiredCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "3797:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3773:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "3896:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1633,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5005,
                            "src": "3910:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MinterBridge_$1657",
                              "typeString": "contract MinterBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MinterBridge_$1657",
                              "typeString": "contract MinterBridge"
                            }
                          ],
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3902:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3902:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1635,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "3917:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1628,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "3863:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4724,
                      "src": "3863:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4666_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4666_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1637,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1641,
                        "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1522,
                        "src": "3968:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1642,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "3999:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1638,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "3944:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4278,
                      "src": "3944:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3944:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1648,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "4144:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1649,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "4152:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1650,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "4156:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1645,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "4105:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintPositionTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1418,
                      "src": "4105:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1653,
                    "name": "BRIDGE_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1520,
                    "src": "4179:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1605,
                  "id": 1654,
                  "nodeType": "Return",
                  "src": "4172:21:3"
                }
              ]
            },
            "documentation": "@notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n@dev can only be called if market contract proxy address is set.\n@param tokenAddress in the standard 0x implementation this is the transferred token.\nIn HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\nthe MinterBridge of the latest perpetual token.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer.\n@param bridgeData Arbitrary asset data needed by the bridge contract.\n@return success The magic bytes `0x37708e9b` if successful.",
            "id": 1656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1598,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1597,
                  "name": "onlyIfSetMarketContractProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1555,
                  "src": "3158:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:28:3"
              },
              {
                "arguments": null,
                "id": 1600,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1599,
                  "name": "only0xBridgeProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1542,
                  "src": "3195:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3195:17:3"
              },
              {
                "arguments": null,
                "id": 1602,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1601,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4930,
                  "src": "3221:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3221:12:3"
              }
            ],
            "name": "bridgeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3005:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1589,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3035:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1591,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3057:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3077:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3077:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "name": "bridgeData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3101:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2995:137:3"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3251:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3250:16:3"
            },
            "scope": 1657,
            "src": "2968:1232:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1658,
        "src": "523:3679:3"
      }
    ],
    "src": "0:4203:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MinterBridge.sol",
    "exportedSymbols": {
      "MinterBridge": [
        1657
      ]
    },
    "id": 1658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1493,
        "literals": [
          "solidity",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1494,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4184,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 1495,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4882,
        "src": "88:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1496,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4567,
        "src": "156:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
        "file": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
        "id": 1497,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 4932,
        "src": "220:67:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 1498,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 1977,
        "src": "289:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/MarketCollateralPool.sol",
        "file": "../marketprotocol/MarketCollateralPool.sol",
        "id": 1499,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 2641,
        "src": "324:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/mpx/MarketContractMPX.sol",
        "file": "../marketprotocol/mpx/MarketContractMPX.sol",
        "id": 1500,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 3567,
        "src": "377:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/marketprotocol/tokens/PositionToken.sol",
        "file": "../marketprotocol/tokens/PositionToken.sol",
        "id": 1501,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 3819,
        "src": "431:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/andreianisimov/projects/honeylemon/dapp.honeylemon.market/packages/contracts/contracts/honeylemon/MarketContractProxy.sol",
        "file": "./MarketContractProxy.sol",
        "id": 1502,
        "nodeType": "ImportDirective",
        "scope": 1658,
        "sourceUnit": 1492,
        "src": "485:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1503,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4931,
              "src": "548:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$4931",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 1504,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1505,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4183,
              "src": "565:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4183",
                "typeString": "contract Ownable"
              }
            },
            "id": 1506,
            "nodeType": "InheritanceSpecifier",
            "src": "565:7:3"
          }
        ],
        "contractDependencies": [
          4183,
          4931
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1657,
        "linearizedBaseContracts": [
          1657,
          4183,
          4931
        ],
        "name": "MinterBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1509,
            "libraryName": {
              "contractScope": null,
              "id": 1507,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1976,
              "src": "585:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1976",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "579:23:3",
            "typeName": {
              "id": 1508,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "597:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1512,
            "libraryName": {
              "contractScope": null,
              "id": 1510,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1976,
              "src": "613:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1976",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "607:22:3",
            "typeName": {
              "id": 1511,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "625:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 1515,
            "libraryName": {
              "contractScope": null,
              "id": 1513,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4881,
              "src": "640:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4881",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "634:26:3",
            "typeName": {
              "contractScope": null,
              "id": 1514,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4566,
              "src": "654:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4566",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1517,
            "name": "marketContractProxy",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "666:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
              "typeString": "contract MarketContractProxy"
            },
            "typeName": {
              "contractScope": null,
              "id": 1516,
              "name": "MarketContractProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1491,
              "src": "666:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                "typeString": "contract MarketContractProxy"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1520,
            "name": "BRIDGE_SUCCESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "767:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1518,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "767:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786463313630306633",
              "id": 1519,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "809:10:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3692429555_by_1",
                "typeString": "int_const 3692429555"
              },
              "value": "0xdc1600f3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1522,
            "name": "MARKET_CONTRACT_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "825:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1524,
            "name": "ERC20_BRIDGE_PROXY_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1657,
            "src": "875:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1523,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "962:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 1530,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1527,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1526,
                  "name": "ReentrancyGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4931,
                  "src": "944:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ReentrancyGuard_$4931_$",
                    "typeString": "type(contract ReentrancyGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "944:17:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:2:3"
            },
            "returnParameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:3"
            },
            "scope": 1657,
            "src": "923:41:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "1082:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1533,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4946,
                            "src": "1100:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1100:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1535,
                          "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1524,
                          "src": "1114:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1100:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c69642063616c6c6572",
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1142:16:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        },
                        "value": "invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3014fc45db297354e6b9ade0269627e830133fcae2ef1d3cfaf17547f924f4c9",
                          "typeString": "literal_string \"invalid caller\""
                        }
                      ],
                      "id": 1532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "1092:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:67:3"
                },
                {
                  "id": 1540,
                  "nodeType": "PlaceholderStatement",
                  "src": "1169:1:3"
                }
              ]
            },
            "documentation": "@notice check that called is 0x minter bridge proxy address",
            "id": 1542,
            "name": "only0xBridgeProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:2:3"
            },
            "src": "1053:124:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "1309:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1545,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "1340:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1381:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1373:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1340:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574436f6e747261637450726f7879206e6f7420736574",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1397:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        },
                        "value": "MarketContractProxy not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbc13fbde5f1d8d6ebc759ee2e0c966dd29ce42f1d937e36d8f6db29785adeb7",
                          "typeString": "literal_string \"MarketContractProxy not set\""
                        }
                      ],
                      "id": 1544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "1319:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:117:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:117:3"
                },
                {
                  "id": 1553,
                  "nodeType": "PlaceholderStatement",
                  "src": "1446:1:3"
                }
              ]
            },
            "documentation": "@notice check that market contract proxy address is initialized",
            "id": 1555,
            "name": "onlyIfSetMarketContractProxy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:3"
            },
            "src": "1269:185:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1572,
              "nodeType": "Block",
              "src": "1763:158:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1562,
                      "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "1773:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1563,
                      "name": "_marketContractProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "1805:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1773:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1566,
                      "name": "marketContractProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "1842:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1568,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "1884:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1567,
                        "name": "MarketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1864:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarketContractProxy_$1491_$",
                          "typeString": "type(contract MarketContractProxy)"
                        }
                      },
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1864:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                        "typeString": "contract MarketContractProxy"
                      }
                    },
                    "src": "1842:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                      "typeString": "contract MarketContractProxy"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:72:3"
                }
              ]
            },
            "documentation": "@notice set market contract proxy address\n@dev can only be called from contract owner address\n@param _marketContractProxyAddress market contract address",
            "id": 1573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1559,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4117,
                  "src": "1749:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1749:9:3"
              }
            ],
            "name": "setMarketContractProxyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "name": "_marketContractProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1689:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1688:37:3"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:3"
            },
            "scope": 1657,
            "src": "1650:271:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "2193:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1580,
                      "name": "ERC20_BRIDGE_PROXY_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1524,
                      "src": "2203:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1581,
                      "name": "_0xBridgeProxyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "2232:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2203:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:50:3"
                }
              ]
            },
            "documentation": "@notice set 0x minter bridge proxy address\n@dev can only be called from contract owner address\n@param _0xBridgeProxyAddress 0x minter bridge proxy address",
            "id": 1585,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1578,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1577,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4117,
                  "src": "2183:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:9:3"
              }
            ],
            "name": "set0xBridgeProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "name": "_0xBridgeProxyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1585,
                  "src": "2145:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2144:31:3"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:3"
            },
            "scope": 1657,
            "src": "2119:141:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1655,
              "nodeType": "Block",
              "src": "3271:929:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1607,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "3568:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1608,
                          "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1522,
                          "src": "3584:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3568:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6261642070726f78792061646472657373",
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3615:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        },
                        "value": "bad proxy address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da27a56882131df3d6349d8a2548c5a3b7d07305ae61e51a9e4eba1fe7fb3377",
                          "typeString": "literal_string \"bad proxy address\""
                        }
                      ],
                      "id": 1606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4949,
                        4950
                      ],
                      "referencedDeclaration": 4950,
                      "src": "3560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1612,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:75:3"
                },
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "name": "collateralToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "3685:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$4566",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1613,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4566,
                        "src": "3685:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1620,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1616,
                            "name": "marketContractProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1517,
                            "src": "3715:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                              "typeString": "contract MarketContractProxy"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COLLATERAL_TOKEN_ADDRESS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 382,
                          "src": "3715:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3715:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1615,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4566,
                      "src": "3709:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$4566_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$4566",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3685:77:3"
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "name": "neededCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "3773:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1621,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3773:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1627,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "3845:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "3797:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRequiredCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "3797:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3773:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "3896:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1633,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5005,
                            "src": "3910:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MinterBridge_$1657",
                              "typeString": "contract MinterBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MinterBridge_$1657",
                              "typeString": "contract MinterBridge"
                            }
                          ],
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3902:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3902:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1635,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "3917:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1628,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "3863:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4724,
                      "src": "3863:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4666_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4666_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1637,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1641,
                        "name": "MARKET_CONTRACT_PROXY_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1522,
                        "src": "3968:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1642,
                        "name": "neededCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "3999:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1638,
                        "name": "collateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "3944:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$4566",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4278,
                      "src": "3944:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3944:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1648,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "4144:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1649,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "4152:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1650,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "4156:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1645,
                        "name": "marketContractProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "4105:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractProxy_$1491",
                          "typeString": "contract MarketContractProxy"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintPositionTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1418,
                      "src": "4105:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1653,
                    "name": "BRIDGE_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1520,
                    "src": "4179:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1605,
                  "id": 1654,
                  "nodeType": "Return",
                  "src": "4172:21:3"
                }
              ]
            },
            "documentation": "@notice Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n@dev can only be called if market contract proxy address is set.\n@param tokenAddress in the standard 0x implementation this is the transferred token.\nIn HoneyLemon this is the marketContractProxy which acts to spoof a token and inform\nthe MinterBridge of the latest perpetual token.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer.\n@param bridgeData Arbitrary asset data needed by the bridge contract.\n@return success The magic bytes `0x37708e9b` if successful.",
            "id": 1656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1598,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1597,
                  "name": "onlyIfSetMarketContractProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1555,
                  "src": "3158:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:28:3"
              },
              {
                "arguments": null,
                "id": 1600,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1599,
                  "name": "only0xBridgeProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1542,
                  "src": "3195:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3195:17:3"
              },
              {
                "arguments": null,
                "id": 1602,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1601,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4930,
                  "src": "3221:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3221:12:3"
              }
            ],
            "name": "bridgeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3005:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1589,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3035:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1591,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3057:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3077:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3077:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "name": "bridgeData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3101:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2995:137:3"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "3251:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3250:16:3"
            },
            "scope": 1657,
            "src": "2968:1232:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1658,
        "src": "523:3679:3"
      }
    ],
    "src": "0:4203:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF905F6f2a482e39199BDC60b9257A62618e08C9a",
      "transactionHash": "0xc9b1b1c75994089f869426e3d187ef902960bb78ffc8e7a1a6671c0badc4c99e"
    },
    "42": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE874aD2963dc4BE26A69E6bA0112023aAD0Cd1c1",
      "transactionHash": "0xc426ed482c4f10ef55259d193e5a1cf4784ef824eacb9f0f47fc636295f490a1"
    },
    "1337": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc7124963Ab16C33E5bF421D4c0090116622B3074",
      "transactionHash": "0x15d2e5c3aa04b528c5a70eb882d3fe69b4c40fc1adf3ff75f91439e73e662cc8"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-11T22:54:27.076Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "bridgeTransferFrom(address,address,address,uint256,bytes)": {
        "details": "can only be called if market contract proxy address is set.",
        "params": {
          "amount": "Amount of asset to transfer.",
          "bridgeData": "Arbitrary asset data needed by the bridge contract.",
          "from": "Address to transfer asset from.",
          "to": "Address to transfer asset to.",
          "tokenAddress": "in the standard 0x implementation this is the transferred token. In HoneyLemon this is the marketContractProxy which acts to spoof a token and inform the MinterBridge of the latest perpetual token."
        },
        "return": "success The magic bytes `0x37708e9b` if successful."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "set0xBridgeProxy(address)": {
        "details": "can only be called from contract owner address",
        "params": {
          "_0xBridgeProxyAddress": "0x minter bridge proxy address"
        }
      },
      "setMarketContractProxyAddress(address)": {
        "details": "can only be called from contract owner address",
        "params": {
          "_marketContractProxyAddress": "market contract address"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "bridgeTransferFrom(address,address,address,uint256,bytes)": {
        "notice": "Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "set0xBridgeProxy(address)": {
        "notice": "set 0x minter bridge proxy address"
      },
      "setMarketContractProxyAddress(address)": {
        "notice": "set market contract proxy address"
      }
    }
  }
}